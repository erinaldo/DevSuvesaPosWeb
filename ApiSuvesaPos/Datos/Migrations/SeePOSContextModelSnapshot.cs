// <auto-generated />
using System;
using Datos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(SeePOSContext))]
    partial class SeePOSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Datos.Models.AbonoApartado", b =>
                {
                    b.Property<long>("IdAbonoapartado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_abonoapartado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<string>("CedUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Ced_Usuario")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente")
                        .HasDefaultValueSql("('')");

                    b.Property<long>("NumRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Recibo");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("SaldoActual")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Actual");

                    b.Property<double>("SaldoCuenta")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Cuenta");

                    b.HasKey("IdAbonoapartado");

                    b.ToTable("Abono_Apartados");
                });

            modelBuilder.Entity("Datos.Models.AbonoApartadosdetalle", b =>
                {
                    b.Property<long>("IdDetalleabono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_detalleabono")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Abono")
                        .HasColumnType("float");

                    b.Property<double>("AbonoSuMoneda")
                        .HasColumnType("float")
                        .HasColumnName("Abono_SuMoneda");

                    b.Property<long>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<long>("IdAbonoapartado")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_abonoapartado");

                    b.Property<double>("Intereses")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.HasKey("IdDetalleabono");

                    b.HasIndex("Apartado");

                    b.HasIndex("IdAbonoapartado");

                    b.ToTable("Abono_apartadosdetalle");
                });

            modelBuilder.Entity("Datos.Models.Abonoccobrar", b =>
                {
                    b.Property<long>("IdRecibo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Recibo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<long>("Asiento")
                        .HasColumnType("bigint");

                    b.Property<string>("Banco")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("banco");

                    b.Property<string>("CedUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Ced_Usuario")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Cheque")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoEnvio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("NumApertura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Apertura");

                    b.Property<int?>("NumCaja")
                        .HasColumnType("int")
                        .HasColumnName("Num_Caja");

                    b.Property<long>("NumRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Recibo");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("SaldoActual")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Actual");

                    b.Property<double>("SaldoCuenta")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Cuenta");

                    b.HasKey("IdRecibo");

                    b.ToTable("abonoccobrar");
                });

            modelBuilder.Entity("Datos.Models.Abonocpagar", b =>
                {
                    b.Property<long>("IdAbonocpagar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Abonocpagar")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("CodigoBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Codigo_banco")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<string>("CuentaBancaria")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<long>("CuentaDestino")
                        .HasColumnType("bigint");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("MontoLetras")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("Recibo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("(0)");

                    b.Property<double>("SaldoActual")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Actual");

                    b.Property<double>("SaldoCuenta")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Cuenta");

                    b.Property<double>("TipoCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdAbonocpagar");

                    b.HasIndex("CodProveedor");

                    b.HasIndex(new[] { "Documento", "TipoDocumento", "CuentaBancaria" }, "IX_abonocpagar_Control_Duplicado_Documento")
                        .IsUnique();

                    b.ToTable("abonocpagar");
                });

            modelBuilder.Entity("Datos.Models.Abonoreintegro", b =>
                {
                    b.Property<decimal>("IdAbono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<decimal>("NumApertura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Recibo")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("IdAbono");

                    b.ToTable("abonoreintegro");
                });

            modelBuilder.Entity("Datos.Models.ActividadEmpresa", b =>
                {
                    b.Property<int>("IdActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actividad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdActividad");

                    b.ToTable("ActividadEmpresa");
                });

            modelBuilder.Entity("Datos.Models.Actividade", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Actividad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Codigo");

                    b.ToTable("actividades");
                });

            modelBuilder.Entity("Datos.Models.AgenteVenta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<bool?>("Anulado")
                        .HasColumnType("bit")
                        .HasColumnName("anulado");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cedula");

                    b.Property<string>("Correo")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("direccion");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("telefono");

                    b.Property<decimal>("TipoPrecio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("agente_ventas");
                });

            modelBuilder.Entity("Datos.Models.AjusteInventario", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<double?>("Asiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("Contabilizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int")
                        .HasColumnName("idSucursal");

                    b.Property<double>("SaldoAjuste")
                        .HasColumnType("float");

                    b.Property<double>("TotalEntrada")
                        .HasColumnType("float");

                    b.Property<double>("TotalSalida")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.HasIndex("IdSucursal");

                    b.ToTable("AjusteInventario");
                });

            modelBuilder.Entity("Datos.Models.AjusteInventarioDetalle", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodArticulo")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("CodArticulo1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CodArticulo")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("ConsAjuste")
                        .HasColumnType("bigint")
                        .HasColumnName("Cons_Ajuste");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cuenta_contable")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Cuentacontable1")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUENTACONTABLE")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DescArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Desc_Articulo");

                    b.Property<string>("Descripcioncuentacontable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESCRIPCIONCUENTACONTABLE")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Entrada")
                        .HasColumnType("bit");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<long?>("Gasto")
                        .HasColumnType("bigint")
                        .HasColumnName("gasto");

                    b.Property<bool?>("Muerte")
                        .HasColumnType("bit")
                        .HasColumnName("muerte");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("observacion")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Salida")
                        .HasColumnType("bit");

                    b.Property<double>("TotalEntrada")
                        .HasColumnType("float");

                    b.Property<double>("TotalSalida")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.HasIndex("CodArticulo");

                    b.HasIndex("ConsAjuste");

                    b.ToTable("AjusteInventario_Detalle");
                });

            modelBuilder.Entity("Datos.Models.Ajustesccobrar", b =>
                {
                    b.Property<long>("IdAjuste")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Ajuste")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AjusteNo")
                        .HasColumnType("bigint");

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<long>("Asiento")
                        .HasColumnType("bigint");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("CodUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Usuario");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("SaldoAct")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Act");

                    b.Property<double>("SaldoPrev")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Prev");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.HasKey("IdAjuste");

                    b.ToTable("ajustesccobrar");
                });

            modelBuilder.Entity("Datos.Models.Ajustescpagar", b =>
                {
                    b.Property<long>("IdAjuste")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Ajuste")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AjusteNo")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Anula")
                        .HasColumnType("bit");

                    b.Property<long?>("Asiento")
                        .HasColumnType("bigint");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int?>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<string>("CodUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Cod_Usuario");

                    b.Property<bool?>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double?>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreProveedor")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre_Proveedor");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("SaldoAct")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Act");

                    b.Property<double?>("SaldoPrev")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Prev");

                    b.Property<string>("Tipo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.HasKey("IdAjuste");

                    b.HasIndex("CodProveedor");

                    b.ToTable("Ajustescpagar");
                });

            modelBuilder.Entity("Datos.Models.Apartado", b =>
                {
                    b.Property<long>("IdApartado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Apartado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedulausuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Cliente");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Nombrecliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdApartado");

                    b.ToTable("Apartados");
                });

            modelBuilder.Entity("Datos.Models.ApartadoDetalle", b =>
                {
                    b.Property<long>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_detalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodArticulo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cod_articulo");

                    b.Property<int>("CodMonedaVenta")
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaVenta");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<long>("IdApartado")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Apartado");

                    b.Property<long>("IdBodega")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambioValorCompra")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio_ValorCompra");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdApartado");

                    b.ToTable("Apartado_detalle");
                });

            modelBuilder.Entity("Datos.Models.AperturaDenominacione", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("IdApertura")
                        .HasColumnType("int")
                        .HasColumnName("Id_Apertura");

                    b.Property<long>("IdDenominacion")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Denominacion");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdApertura");

                    b.ToTable("Apertura_Denominaciones");
                });

            modelBuilder.Entity("Datos.Models.AperturaTotalTope", b =>
                {
                    b.Property<int>("IdTotalTope")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_total_tope")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoTope")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Tope");

                    b.Property<int>("Napertura")
                        .HasColumnType("int")
                        .HasColumnName("NApertura");

                    b.HasKey("IdTotalTope");

                    b.HasIndex("Napertura");

                    b.ToTable("Apertura_Total_Tope");
                });

            modelBuilder.Entity("Datos.Models.Aperturacaja", b =>
                {
                    b.Property<int>("Napertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NApertura")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('A')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Napertura");

                    b.ToTable("aperturacaja");
                });

            modelBuilder.Entity("Datos.Models.AperturasDenominacione", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("Denominacion")
                        .HasColumnType("int");

                    b.Property<int>("IdApertura")
                        .HasColumnType("int")
                        .HasColumnName("Id_Apertura");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToView("AperturasDenominaciones");
                });

            modelBuilder.Entity("Datos.Models.Area", b =>
                {
                    b.Property<decimal>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("IdArea");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("Datos.Models.AreaArticulo", b =>
                {
                    b.Property<decimal>("IdAreaArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdArea")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("IdAreaArticulo");

                    b.HasIndex("IdArea");

                    b.ToTable("AreaArticulo");
                });

            modelBuilder.Entity("Datos.Models.AreaEncargado", b =>
                {
                    b.Property<decimal>("IdAreaEncargado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("IdArea")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("IdAreaEncargado");

                    b.HasIndex("IdArea");

                    b.ToTable("AreaEncargado");
                });

            modelBuilder.Entity("Datos.Models.ArqueoCaja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cajero")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('--')");

                    b.Property<double>("Cheques")
                        .HasColumnType("float");

                    b.Property<double>("ChequesDol")
                        .HasColumnType("float");

                    b.Property<double>("DepositoCol")
                        .HasColumnType("float");

                    b.Property<double>("DepositoDol")
                        .HasColumnType("float");

                    b.Property<double>("EfectivoColones")
                        .HasColumnType("float");

                    b.Property<double>("EfectivoDolares")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdApertura")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<double>("OtrasTarjetas")
                        .HasColumnType("float");

                    b.Property<double>("TarjetaColones")
                        .HasColumnType("float");

                    b.Property<double>("TarjetaDolares")
                        .HasColumnType("float");

                    b.Property<double>("TarjetaSistema")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambioD")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ArqueoCajas");
                });

            modelBuilder.Entity("Datos.Models.ArqueoDeposito", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("IdApertura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<long>("IdArqueo")
                        .HasColumnType("bigint");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Deposito')");

                    b.HasKey("Id");

                    b.HasIndex("IdArqueo");

                    b.ToTable("ArqueoDeposito");
                });

            modelBuilder.Entity("Datos.Models.ArqueoEfectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long>("IdArqueo")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Arqueo");

                    b.Property<long>("IdDenominacion")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Denominacion");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdArqueo");

                    b.ToTable("ArqueoEfectivo");
                });

            modelBuilder.Entity("Datos.Models.ArqueoTarjetum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdArqueo")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Arqueo");

                    b.Property<int>("IdTarjeta")
                        .HasColumnType("int")
                        .HasColumnName("Id_Tarjeta");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdArqueo");

                    b.ToTable("ArqueoTarjeta");
                });

            modelBuilder.Entity("Datos.Models.ArticulosComprado", b =>
                {
                    b.Property<long>("IdArticuloComprados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_ArticuloComprados")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Base")
                        .HasColumnType("float");

                    b.Property<bool>("Bonificado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<double>("CantidadBonificado")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CodArticuloBonificacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodCabys")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMonedaVenta")
                        .HasColumnType("int");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("CodigoBonificado")
                        .HasColumnType("bigint");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoBonificado")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("DescuentoP")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_P");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double>("Exento")
                        .HasColumnType("float");

                    b.Property<double>("Gravado")
                        .HasColumnType("float");

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("ImpuestoP")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_P");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("MontoFlete")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Flete");

                    b.Property<double>("NuevoCostoBase")
                        .HasColumnType("float");

                    b.Property<double>("OtrosCargos")
                        .HasColumnType("float");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioB")
                        .HasColumnType("float")
                        .HasColumnName("Precio_B");

                    b.Property<double>("PrecioC")
                        .HasColumnType("float")
                        .HasColumnName("Precio_C");

                    b.Property<double>("PrecioD")
                        .HasColumnType("float")
                        .HasColumnName("Precio_D");

                    b.Property<double>("Regalias")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalBonificado")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdArticuloComprados");

                    b.HasIndex("Codigo");

                    b.HasIndex("IdCompra");

                    b.ToTable("articulos_comprados");
                });

            modelBuilder.Entity("Datos.Models.ArticulosComprasDevuelto", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.HasIndex("Devolucion");

                    b.ToTable("articulos_Compras_devueltos");
                });

            modelBuilder.Entity("Datos.Models.ArticulosGasto", b =>
                {
                    b.Property<long>("IdArticuloComprados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_ArticuloComprados")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Base")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodTipoCompra")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DescTipoCompra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("DescuentoP")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_P");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float")
                        .HasComment("");

                    b.Property<double>("Exento")
                        .HasColumnType("float");

                    b.Property<double>("Gravado")
                        .HasColumnType("float");

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("ImpuestoP")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_P");

                    b.Property<double>("MontoFlete")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Flete");

                    b.Property<double>("NuevoCostoBase")
                        .HasColumnType("float");

                    b.Property<double>("OtrosCargos")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdArticuloComprados");

                    b.HasIndex("IdCompra");

                    b.ToTable("Articulos_Gastos");
                });

            modelBuilder.Entity("Datos.Models.ArticulosProveedor", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadxPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("CANTIDADxPRESENTACION")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CEDULA")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodigoProveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODIGO_PROVEEDOR")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("IdArticulo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("ID_ARTICULO");

                    b.HasKey("Id");

                    b.ToTable("articulos_proveedor");
                });

            modelBuilder.Entity("Datos.Models.ArticulosRelacionado", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("CodigoPrincipal")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ArticulosRelacionados");
                });

            modelBuilder.Entity("Datos.Models.ArticulosVentasDevuelto", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantBod")
                        .HasColumnType("float");

                    b.Property<double>("CantVet")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Devuelto")
                        .HasColumnType("bit")
                        .HasColumnName("devuelto");

                    b.Property<bool>("Empaquetado")
                        .HasColumnType("bit")
                        .HasColumnName("empaquetado");

                    b.Property<int>("IdArtVenta")
                        .HasColumnType("int")
                        .HasColumnName("Id_Art_Venta");

                    b.Property<string>("IdArticuloV")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_articulo_V")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<bool>("Recibido")
                        .HasColumnType("bit")
                        .HasColumnName("recibido");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.HasIndex("Codigo");

                    b.HasIndex("Devolucion");

                    b.ToTable("articulos_ventas_devueltos");
                });

            modelBuilder.Entity("Datos.Models.ArticulosXProveedor", b =>
                {
                    b.Property<long>("CodigoArticulo")
                        .HasColumnType("bigint");

                    b.Property<int>("CodigoProveedor")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaUltimaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Moneda")
                        .HasColumnType("int");

                    b.Property<bool>("ProveedorActual")
                        .HasColumnType("bit");

                    b.Property<double>("UltimoCosto")
                        .HasColumnType("float");

                    b.HasKey("CodigoArticulo", "CodigoProveedor");

                    b.ToTable("Articulos x Proveedor");
                });

            modelBuilder.Entity("Datos.Models.ArticulosXUltimoProveedor", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UltimoProveedor")
                        .HasColumnType("int");

                    b.ToView("Articulos_X_Ultimo_Proveedor");
                });

            modelBuilder.Entity("Datos.Models.AutorizacionVentum", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cancelada")
                        .HasColumnType("bit");

                    b.Property<string>("CedulaRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cedula_Retira");

                    b.Property<bool>("Express")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime");

                    b.Property<string>("IdAdmin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Admin");

                    b.Property<decimal>("IdApertura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdCajero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Cajero");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Retira");

                    b.Property<decimal>("NumRecibo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("TelefonoRetira")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Telefono_Retira")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.ToTable("AutorizacionVenta");
                });

            modelBuilder.Entity("Datos.Models.Banco", b =>
                {
                    b.Property<long>("CodigoBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Codigo_banco")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("CodigoBanco");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Datos.Models.Bitacora", b =>
                {
                    b.Property<long>("Secuencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CampoClave")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Campo_Clave")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("DescripcionCampo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("VentaA")
                        .HasColumnType("float");

                    b.Property<double>("VentaB")
                        .HasColumnType("float");

                    b.Property<double>("VentaC")
                        .HasColumnType("float");

                    b.Property<double>("VentaD")
                        .HasColumnType("float");

                    b.HasKey("Secuencia");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("Datos.Models.BitacoraBloqueo", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Ini")
                        .HasColumnType("datetime")
                        .HasColumnName("ini");

                    b.Property<string>("Obs")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obs");

                    b.Property<string>("Usuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("bitacora_bloqueos");
                });

            modelBuilder.Entity("Datos.Models.BitacoraEstadoCotizacion", b =>
                {
                    b.Property<decimal>("Cotizacion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.ToTable("BitacoraEstadoCotizacion");
                });

            modelBuilder.Entity("Datos.Models.BitacoraInactivarCliente", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Inactivo")
                        .HasColumnType("bit");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("BitacoraInactivarCliente");
                });

            modelBuilder.Entity("Datos.Models.BitacoraReimpresione", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cedula");

                    b.Property<long>("Factura")
                        .HasColumnType("bigint")
                        .HasColumnName("factura");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('-')");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("Bitacora_reimpresiones");
                });

            modelBuilder.Entity("Datos.Models.BitacoraVersion", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Pc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PC");

                    b.HasKey("Id");

                    b.ToTable("BitacoraVersion");
                });

            modelBuilder.Entity("Datos.Models.Bodega", b =>
                {
                    b.Property<int>("IdBodega")
                        .HasColumnType("int")
                        .HasColumnName("ID_Bodega");

                    b.Property<bool?>("Bloqueada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bloqueada")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<string>("NombreBodega")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre_Bodega")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("IdBodega");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("Datos.Models.CajasCantidad", b =>
                {
                    b.Property<long>("IdCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_Caja")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.HasKey("IdCaja");

                    b.ToTable("Cajas_Cantidad");
                });

            modelBuilder.Entity("Datos.Models.CambioInventario", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<double>("CantidadEntregado")
                        .HasColumnType("float");

                    b.Property<double>("CantidadFacturado")
                        .HasColumnType("float");

                    b.Property<decimal>("CodigoEntregado")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("CodigoFacturado")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Diferencia")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CambioInventario");
                });

            modelBuilder.Entity("Datos.Models.CartaExoneracion", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("datetime");

                    b.Property<int>("IdTipoExoneracion")
                        .HasColumnType("int");

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("PorcentajeCompra")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CartaExoneracion");
                });

            modelBuilder.Entity("Datos.Models.CatalogoInventario", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Barras2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras2");

                    b.Property<string>("Barras3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras3");

                    b.Property<double>("Bodega")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("Codcabys")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CODCABYS");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("DescargaOtro")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(341)
                        .IsUnicode(false)
                        .HasColumnType("varchar(341)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<int>("Idbodega")
                        .HasColumnType("int")
                        .HasColumnName("idbodega");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<bool>("Mag")
                        .HasColumnType("bit")
                        .HasColumnName("MAG");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Muestra")
                        .HasColumnType("bit");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioFinal")
                        .HasColumnType("float");

                    b.Property<double?>("PrecioFinalMag")
                        .HasColumnType("float")
                        .HasColumnName("PrecioFinalMAG");

                    b.Property<double?>("Prestamo")
                        .HasColumnType("float")
                        .HasColumnName("prestamo");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int");

                    b.Property<bool?>("Receta")
                        .HasColumnType("bit")
                        .HasColumnName("receta");

                    b.Property<bool>("Servicio")
                        .HasColumnType("bit");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("float");

                    b.ToView("CatalogoInventario");
                });

            modelBuilder.Entity("Datos.Models.CatalogoInventario2", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Barras2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras2");

                    b.Property<string>("Barras3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras3");

                    b.Property<double>("Bodega")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(341)
                        .IsUnicode(false)
                        .HasColumnType("varchar(341)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<int>("Idbodega")
                        .HasColumnType("int")
                        .HasColumnName("idbodega");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioFinal")
                        .HasColumnType("float");

                    b.Property<double?>("Prestamo")
                        .HasColumnType("float")
                        .HasColumnName("prestamo");

                    b.Property<bool?>("Receta")
                        .HasColumnType("bit")
                        .HasColumnName("receta");

                    b.Property<bool>("Servicio")
                        .HasColumnType("bit");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("float");

                    b.ToView("CatalogoInventario2");
                });

            modelBuilder.Entity("Datos.Models.Cheque", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("CedUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Ced_Usuario");

                    b.Property<string>("Facturas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdCheque")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Cheque");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("MontoLetras")
                        .IsRequired()
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Portador")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.ToView("Cheque");
                });

            modelBuilder.Entity("Datos.Models.ChequesDetalle", b =>
                {
                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("IdCheque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Cheque")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("Nombre_Cuenta");

                    b.ToView("Cheques_Detalle");
                });

            modelBuilder.Entity("Datos.Models.CierreCajaDetMon", b =>
                {
                    b.Property<int>("IdDetaMoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_DetaMoneda")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCierreCaja")
                        .HasColumnType("int")
                        .HasColumnName("Id_CierreCaja");

                    b.Property<int>("IdMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Id_Moneda");

                    b.Property<double>("MontoCajero")
                        .HasColumnType("float");

                    b.Property<double>("MontoSistema")
                        .HasColumnType("float");

                    b.HasKey("IdDetaMoneda")
                        .HasName("PK_CiereCaja_DetMoneda");

                    b.HasIndex("IdCierreCaja");

                    b.ToTable("CierreCaja_DetMon");
                });

            modelBuilder.Entity("Datos.Models.CierreCajaDetTarj", b =>
                {
                    b.Property<int>("IdDetalleTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_DetalleTarjeta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCierreCaja")
                        .HasColumnType("int")
                        .HasColumnName("Id_CierreCaja");

                    b.Property<int>("IdTipoTarjeta")
                        .HasColumnType("int")
                        .HasColumnName("Id_TipoTarjeta");

                    b.Property<double>("MontoCajero")
                        .HasColumnType("float");

                    b.Property<double>("MontoSistema")
                        .HasColumnType("float");

                    b.HasKey("IdDetalleTarjeta");

                    b.HasIndex("IdCierreCaja");

                    b.ToTable("CierreCaja_DetTarj");
                });

            modelBuilder.Entity("Datos.Models.CierreOrdenTrabajo", b =>
                {
                    b.Property<decimal>("IdCierre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdOrden")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdCierre");

                    b.ToTable("CierreOrdenTrabajo");
                });

            modelBuilder.Entity("Datos.Models.Cierrecaja", b =>
                {
                    b.Property<int>("NumeroCierre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<int>("Apertura")
                        .HasColumnType("int");

                    b.Property<string>("Cajera")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("ChequeDol")
                        .HasColumnType("float");

                    b.Property<double>("Cheques")
                        .HasColumnType("float");

                    b.Property<double>("DepositosCol")
                        .HasColumnType("float");

                    b.Property<double>("DepositosDol")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double>("EfectivoColones")
                        .HasColumnType("float");

                    b.Property<double>("EfectivoDolares")
                        .HasColumnType("float");

                    b.Property<double>("Equivalencia")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.Property<double>("TarjetaColones")
                        .HasColumnType("float");

                    b.Property<double>("TarjetaDolares")
                        .HasColumnType("float");

                    b.Property<double>("TotalSistema")
                        .HasColumnType("float");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("NumeroCierre");

                    b.ToTable("cierrecaja");
                });

            modelBuilder.Entity("Datos.Models.Cliente", b =>
                {
                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint")
                        .HasColumnName("identificacion");

                    b.Property<string>("Abierto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("abierto")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<string>("Agente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("agente")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("ClienteMoroso")
                        .HasColumnType("bit")
                        .HasColumnName("Cliente_Moroso")
                        .HasComment("");

                    b.Property<int>("CodMonedaCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CorreoComprobante")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CorreoRecibo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("descuento");

                    b.Property<double>("DescuentoEspecial")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("e_mail")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("empresa")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<bool>("EnviarRecibo")
                        .HasColumnType("bit");

                    b.Property<bool>("Fallecido")
                        .HasColumnType("bit");

                    b.Property<string>("Fax01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_02")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<decimal>("IdTipoExoneracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float")
                        .HasColumnName("impuesto");

                    b.Property<bool>("Mag")
                        .HasColumnType("bit")
                        .HasColumnName("MAG");

                    b.Property<double>("MaxCredito")
                        .HasColumnType("float")
                        .HasColumnName("max_credito");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Nombreusuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreusuario")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("Notificar")
                        .HasColumnType("bit")
                        .HasColumnName("notificar");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observaciones")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("OrdenCompra")
                        .HasColumnType("bit");

                    b.Property<int>("PlazoCredito")
                        .HasColumnType("int")
                        .HasColumnName("Plazo_credito");

                    b.Property<bool>("PrecioSugerido")
                        .HasColumnType("bit");

                    b.Property<bool>("Relacionados")
                        .HasColumnType("bit");

                    b.Property<string>("Sinrestriccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("sinrestriccion")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Telefono01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Telefono_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Telefono02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("telefono_02")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo_cedula");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("(N'FISICA')");

                    b.Property<short>("Tipoprecio")
                        .HasColumnType("smallint")
                        .HasColumnName("tipoprecio");

                    b.Property<bool>("UsoInterno")
                        .HasColumnType("bit");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Identificacion");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Datos.Models.ClienteCApartado", b =>
                {
                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula");

                    b.Property<int>("Identificacion")
                        .HasColumnType("int")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.ToView("Cliente_cApartados");
                });

            modelBuilder.Entity("Datos.Models.ClientesFrecuente", b =>
                {
                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint")
                        .HasColumnName("identificacion");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("e_mail");

                    b.Property<bool?>("Esempresa")
                        .HasColumnType("bit")
                        .HasColumnName("esempresa");

                    b.Property<string>("Fax01")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_01");

                    b.Property<string>("Fax02")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_02");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Nombreusuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreusuario");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observaciones");

                    b.Property<string>("Telefono01")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Telefono_01");

                    b.Property<string>("Telefono02")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("telefono_02");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('FISICA')");

                    b.Property<short>("Tipoprecio")
                        .HasColumnType("smallint")
                        .HasColumnName("tipoprecio");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Identificacion");

                    b.ToTable("Clientes_frecuentes");
                });

            modelBuilder.Entity("Datos.Models.Codigo", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodAlterno1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Cod_Alterno1");

                    b.Property<string>("CodAlterno2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Cod_Alterno2");

                    b.Property<decimal>("Codigo1")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Codigo2")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripcion1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Descripcion2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("IdPuntoVenta1")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdPuntoVenta2")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("Id");

                    b.ToTable("Codigos");
                });

            modelBuilder.Entity("Datos.Models.Comisione", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<double>("Cantidadreal")
                        .HasColumnType("float");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<double>("Comision")
                        .HasColumnType("float")
                        .HasColumnName("%Comision");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("DevReg")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint");

                    b.Property<double?>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double?>("SubTotalReal")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TotalComision")
                        .HasColumnType("float");

                    b.ToView("Comisiones");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVenta", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<int>("ComisionDevoluciones")
                        .HasColumnType("int");

                    b.Property<double?>("ComisionVentaBruta")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdDetFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_DetFac");

                    b.Property<long?>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double?>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<double?>("SubTotalVentaBruta")
                        .HasColumnType("float");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentas");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentas1", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<int>("ComisionDevoluciones")
                        .HasColumnType("int");

                    b.Property<double?>("ComisionVentaBruta")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DevolucionesImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Devoluciones_Impuesto");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<long>("IdDetFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_DetFac");

                    b.Property<long?>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long?>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double?>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<double?>("SubTotalVentaBruta")
                        .HasColumnType("float");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentas1");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasDevuelta", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long?>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("ComisionDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Comision_Devolucion");

                    b.Property<int>("ComisionVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdDetFac")
                        .HasColumnType("int")
                        .HasColumnName("Id_DetFac");

                    b.Property<long?>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double?>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long?>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<double?>("SubTotalDevoluciones")
                        .HasColumnType("float");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentasDevueltas");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasDevueltas1", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long?>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("ComisionDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Comision_Devolucion");

                    b.Property<int>("ComisionVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double?>("DevolucionesImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Devoluciones_Impuesto");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<int>("IdDetFac")
                        .HasColumnType("int")
                        .HasColumnName("Id_DetFac");

                    b.Property<long?>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double?>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<int>("MontoImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<decimal?>("NumCaja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Caja");

                    b.Property<long?>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<double?>("SubTotalDevoluciones")
                        .HasColumnType("float");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentasDevueltas1");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasRecuperacion", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<int>("ComisionDevoluciones")
                        .HasColumnType("int");

                    b.Property<double?>("ComisionVentaBruta")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdDetFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_DetFac");

                    b.Property<long?>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double?>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<double?>("PorcentajePago")
                        .HasColumnType("float");

                    b.Property<double?>("RecuperacionNeta")
                        .HasColumnType("float");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .HasMaxLength(34)
                        .IsUnicode(false)
                        .HasColumnType("varchar(34)");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentas_Recuperacion");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasTransporte", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("ComisionDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("ComisionVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdDetFac")
                        .HasColumnType("int")
                        .HasColumnName("Id_DetFac");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("MaxComision")
                        .HasColumnType("int")
                        .HasColumnName("Max_Comision");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TipoFac")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TransporteVentas")
                        .HasColumnType("float");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentasTransporte");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasTransporte1", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("ComisionDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("ComisionVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("DevolucionesImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Devoluciones_Impuesto");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("IdDetFac")
                        .HasColumnType("int")
                        .HasColumnName("Id_DetFac");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("MaxComision")
                        .HasColumnType("int")
                        .HasColumnName("Max_Comision");

                    b.Property<int>("MontoImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TipoFac")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TransporteVentas")
                        .HasColumnType("float");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("ComisionesVentasTransporte1");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasTransporteDevuelto", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("ComisionDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Comision_Devolucion");

                    b.Property<int>("ComisionVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdDetFac")
                        .HasColumnType("int")
                        .HasColumnName("Id_DetFac");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("MaxComision")
                        .HasColumnType("int")
                        .HasColumnName("Max_Comision");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<double?>("TransporteVentasDevueltas")
                        .HasColumnType("float");

                    b.ToView("ComisionesVentasTransporteDevuelto");
                });

            modelBuilder.Entity("Datos.Models.ComisionesVentasTransporteDevuelto1", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("ComisionDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Comision_Devolucion");

                    b.Property<int>("ComisionVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("DevolucionesImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Devoluciones_Impuesto");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("IdDetFac")
                        .HasColumnType("int")
                        .HasColumnName("Id_DetFac");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("MaxComision")
                        .HasColumnType("int")
                        .HasColumnName("Max_Comision");

                    b.Property<int>("MontoImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("NumCaja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Caja");

                    b.Property<long>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubTotalDevoluciones")
                        .HasColumnType("int");

                    b.Property<int>("SubTotalVentaBruta")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<double?>("TransporteVentasDevueltas")
                        .HasColumnType("float");

                    b.ToView("ComisionesVentasTransporteDevuelto1");
                });

            modelBuilder.Entity("Datos.Models.Compra", b =>
                {
                    b.Property<long>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Compra")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Asiento")
                        .HasColumnType("float");

                    b.Property<double>("AsientoInve")
                        .HasColumnType("float");

                    b.Property<double>("CambioImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ClaveDgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ClaveDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaCompra");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodigoProv")
                        .HasColumnType("int");

                    b.Property<bool>("Compra1")
                        .HasColumnType("bit")
                        .HasColumnName("Compra");

                    b.Property<string>("ConsecutivoDgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ConsecutivoDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<bool>("ContaInve")
                        .HasColumnType("bit");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<bool>("EnviadoDgt")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoDGT");

                    b.Property<string>("EstadoDgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<bool>("Fec")
                        .HasColumnType("bit")
                        .HasColumnName("FEC");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<bool>("Gasto")
                        .HasColumnType("bit");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MotivoGasto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double?>("NumOrden")
                        .HasColumnType("float")
                        .HasColumnName("num_orden");

                    b.Property<string>("NumTrans")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("PreAbono")
                        .HasColumnType("float");

                    b.Property<bool>("Prepagada")
                        .HasColumnType("bit");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoCompra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.Property<bool>("Trans")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.HasKey("IdCompra");

                    b.HasIndex("CodigoProv");

                    b.HasIndex(new[] { "Factura", "CodigoProv", "TipoCompra" }, "IX_compras")
                        .IsUnique();

                    b.ToTable("compras");
                });

            modelBuilder.Entity("Datos.Models.CondicionImpuesto", b =>
                {
                    b.Property<decimal>("IdCondicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condicion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdCondicion");

                    b.ToTable("CondicionImpuesto");
                });

            modelBuilder.Entity("Datos.Models.Configuracione", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("AplicaTemperatura")
                        .HasColumnType("bit");

                    b.Property<int>("Cajeros")
                        .HasColumnType("int");

                    b.Property<bool>("CambiaPrecioCredito")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsContado")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsCredito")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsPuntoVenta")
                        .HasColumnType("bit");

                    b.Property<bool>("Contabilidad")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("EditarNombre")
                        .HasColumnType("bit")
                        .HasColumnName("editar_nombre");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Empresa1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empresa1");

                    b.Property<string>("Empresa2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empresa2");

                    b.Property<string>("Empresa3")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empresa3");

                    b.Property<bool>("FacturaElectronica")
                        .HasColumnType("bit");

                    b.Property<string>("Fax01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Fax_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Fax_02")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("FormatoCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Frase")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("IdEmisor")
                        .HasColumnType("int")
                        .HasColumnName("idEmisor");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("ImprimeContadoPve")
                        .HasColumnType("bit")
                        .HasColumnName("ImprimeContadoPVE");

                    b.Property<bool>("ImprimirEnFacturaPersonalizada")
                        .HasColumnType("bit")
                        .HasColumnName("Imprimir_en_Factura_Personalizada");

                    b.Property<int>("Intereses")
                        .HasColumnType("int");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<long>("MascotasContado")
                        .HasColumnType("bigint");

                    b.Property<long>("MascotasCredito")
                        .HasColumnType("bigint");

                    b.Property<bool>("ModoCaja")
                        .HasColumnType("bit");

                    b.Property<long>("NumeroConsecutivo")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroContado")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroCredito")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroPuntoVenta")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Regalias")
                        .HasColumnType("bit")
                        .HasColumnName("regalias");

                    b.Property<bool>("SoloPve")
                        .HasColumnType("bit")
                        .HasColumnName("SoloPVE");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<long>("TallerContado")
                        .HasColumnType("bigint");

                    b.Property<long>("TallerCredito")
                        .HasColumnType("bigint");

                    b.Property<string>("Tel01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Tel_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Tel02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Tel_02")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("TokenNegativo")
                        .HasColumnType("bit");

                    b.Property<bool>("UnicoConsecutivo")
                        .HasColumnType("bit");

                    b.HasKey("Cedula");

                    b.HasIndex("IdEmisor");

                    b.ToTable("configuraciones");
                });

            modelBuilder.Entity("Datos.Models.Consecutivo", b =>
                {
                    b.Property<decimal>("Consecutivo1")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Consecutivo");

                    b.HasKey("Consecutivo1");

                    b.ToTable("Consecutivos");
                });

            modelBuilder.Entity("Datos.Models.ConsecutivoReciboReintegro", b =>
                {
                    b.Property<string>("Recibo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasDefaultValueSql("((0))")
                        .IsFixedLength(true);

                    b.HasKey("Recibo");

                    b.ToTable("ConsecutivoReciboReintegro");
                });

            modelBuilder.Entity("Datos.Models.ConsultaInventario", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("DescSubFamilia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<double>("Maxima")
                        .HasColumnType("float");

                    b.Property<double>("Minima")
                        .HasColumnType("float");

                    b.Property<int>("MonedaCosto")
                        .HasColumnType("int");

                    b.Property<double>("PuntoMedio")
                        .HasColumnType("float");

                    b.Property<bool>("Servicio")
                        .HasColumnType("bit");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("float");

                    b.ToView("ConsultaInventario");
                });

            modelBuilder.Entity("Datos.Models.ControlLote", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Actual")
                        .HasColumnType("float");

                    b.Property<string>("Barras")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("IdReferencia")
                        .HasColumnType("bigint");

                    b.Property<bool>("ImpresoGeneral")
                        .HasColumnType("bit");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ControlLotes");
                });

            modelBuilder.Entity("Datos.Models.CostoDevolucione", b =>
                {
                    b.Property<double?>("CostoDevoluciones")
                        .HasColumnType("float");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.ToView("Costo_Devoluciones");
                });

            modelBuilder.Entity("Datos.Models.CostoFactura", b =>
                {
                    b.Property<double?>("CostoVenta")
                        .HasColumnType("float");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.ToView("Costo_Factura");
                });

            modelBuilder.Entity("Datos.Models.Cotizacion", b =>
                {
                    b.Property<long>("Cotizacion1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Cotizacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("CedulaCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<bool?>("Confirmada")
                        .HasColumnType("bit")
                        .HasColumnName("confirmada");

                    b.Property<string>("ConfirmadaPor")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("confirmada_por");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Contado")
                        .HasColumnType("bit");

                    b.Property<bool>("Credito")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<string>("EstadoActual")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('Pendiente de envio')");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<int?>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<string>("ObservacionEstado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("PagoImpuesto")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("TiempoEntrega")
                        .HasColumnType("int");

                    b.Property<double>("TipoCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("TipoCedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<int>("Validez")
                        .HasColumnType("int");

                    b.Property<bool>("Venta")
                        .HasColumnType("bit");

                    b.HasKey("Cotizacion1");

                    b.ToTable("Cotizacion");
                });

            modelBuilder.Entity("Datos.Models.CotizacionDetalle", b =>
                {
                    b.Property<long>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("CodMonedaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaVenta")
                        .HasDefaultValueSql("(500)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Cotizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambioValorCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio_ValorCompra")
                        .HasDefaultValueSql("(1)");

                    b.HasKey("Numero");

                    b.HasIndex("Codigo");

                    b.HasIndex("Cotizacion");

                    b.ToTable("Cotizacion_Detalle");
                });

            modelBuilder.Entity("Datos.Models.Credomatic", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("FacturaRapido")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Credomatic");
                });

            modelBuilder.Entity("Datos.Models.CuentasBancaria", b =>
                {
                    b.Property<int>("IdCuentaBancaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_CuentaBancaria")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChequeFinal")
                        .HasColumnType("int");

                    b.Property<int>("ChequeInicial")
                        .HasColumnType("int");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("CodigoBanco")
                        .HasColumnType("bigint")
                        .HasColumnName("Codigo_banco");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NombreCuentaContable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(350)
                        .IsUnicode(false)
                        .HasColumnType("varchar(350)")
                        .HasDefaultValueSql("(' ')");

                    b.Property<double>("SaldoInicial")
                        .HasColumnType("float");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipoCuenta")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdCuentaBancaria");

                    b.ToTable("Cuentas_bancarias");
                });

            modelBuilder.Entity("Datos.Models.CuentasBancariasProveedor", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Cuenta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<int>("CodigoProv")
                        .HasColumnType("int");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumCuenta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Num_Cuenta");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.HasKey("IdCuenta");

                    b.HasIndex("CodigoProv");

                    b.ToTable("Cuentas_Bancarias_Proveedor");
                });

            modelBuilder.Entity("Datos.Models.CuentasContableMovimimiento", b =>
                {
                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.ToView("CuentasContableMovimimiento");
                });

            modelBuilder.Entity("Datos.Models.Cupon", b =>
                {
                    b.Property<decimal>("IdCupon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CantidadCupones")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime");

                    b.HasKey("IdCupon");

                    b.ToTable("Cupon");
                });

            modelBuilder.Entity("Datos.Models.CuponDetalle", b =>
                {
                    b.Property<decimal>("IdCuponDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdCupon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.HasKey("IdCuponDetalle");

                    b.ToTable("CuponDetalle");
                });

            modelBuilder.Entity("Datos.Models.DenominacionMonedum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<int>("Denominacion")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Denominacion_Moneda");
                });

            modelBuilder.Entity("Datos.Models.Descuento", b =>
                {
                    b.Property<decimal>("IdDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<string>("ContactoConfirmo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Descuento1")
                        .HasColumnType("float")
                        .HasColumnName("Descuento");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdProveedor")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("IdDescuento");

                    b.ToTable("Descuentos");
                });

            modelBuilder.Entity("Datos.Models.DescuentoProgramado", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CodProveedor")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DescuentoProgramados");
                });

            modelBuilder.Entity("Datos.Models.DetalleAbonoccobrar", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Abono")
                        .HasColumnType("float");

                    b.Property<double>("AbonoSuMoneda")
                        .HasColumnType("float")
                        .HasColumnName("Abono_SuMoneda");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("IdRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Recibo");

                    b.Property<double>("Intereses")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.HasKey("Consecutivo");

                    b.HasIndex("IdRecibo");

                    b.ToTable("detalle_abonoccobrar");
                });

            modelBuilder.Entity("Datos.Models.DetalleAbonocpagar", b =>
                {
                    b.Property<int>("IdDetalleAbonocpagar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Detalle_abonocpagar")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Abono")
                        .HasColumnType("float");

                    b.Property<double>("AbonoSuMoneda")
                        .HasColumnType("float")
                        .HasColumnName("Abono_SuMoneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<long>("IdAbonocpagar")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Abonocpagar");

                    b.Property<double>("IdCompra")
                        .HasColumnType("float")
                        .HasColumnName("Id_Compra");

                    b.Property<double>("MontoFactura")
                        .HasColumnType("float");

                    b.Property<double>("SaldoActual")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Actual");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.HasKey("IdDetalleAbonocpagar");

                    b.HasIndex("IdAbonocpagar");

                    b.ToTable("detalle_abonocpagar");
                });

            modelBuilder.Entity("Datos.Models.DetalleAjustescPagar", b =>
                {
                    b.Property<long>("IdDetalleAjustecPagar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_DetalleAjustecPagar")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ajuste")
                        .HasColumnType("float");

                    b.Property<double>("AjusteSuMoneda")
                        .HasColumnType("float")
                        .HasColumnName("Ajuste_SuMoneda");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("DescripcionCuentaContable")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<long>("IdAjustecPagar")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_AjustecPagar");

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Compra");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("SaldoAjustado")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ajustado");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TipoNota")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.HasKey("IdDetalleAjustecPagar")
                        .HasName("PK_Detalle_AjustecPagar");

                    b.HasIndex("IdAjustecPagar");

                    b.ToTable("Detalle_AjustescPagar");
                });

            modelBuilder.Entity("Datos.Models.DetalleAjustesccobrar", b =>
                {
                    b.Property<long>("IdDetalleAjustecCobrar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_DetalleAjustecCobrar")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ajuste")
                        .HasColumnType("float");

                    b.Property<double>("AjusteSuMoneda")
                        .HasColumnType("float")
                        .HasColumnName("Ajuste_SuMoneda");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("(0)");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<long>("IdAjustecCobrar")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_AjustecCobrar");

                    b.Property<int>("IdCuentaC")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("SaldoAjustado")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ajustado");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<string>("TipoNota")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.HasKey("IdDetalleAjustecCobrar");

                    b.HasIndex("IdAjustecCobrar");

                    b.ToTable("detalle_ajustesccobrar");
                });

            modelBuilder.Entity("Datos.Models.DetalleCierrecaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cheque")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double>("Efectivo")
                        .HasColumnType("float");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumCierre")
                        .HasColumnType("int")
                        .HasColumnName("Num_cierre");

                    b.Property<double>("Tarjeta")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transferencia")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Detalle_Cierrecaja");
                });

            modelBuilder.Entity("Datos.Models.DetalleEmpaquetado", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CodMarca")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<bool?>("Empaquetado")
                        .HasColumnType("bit")
                        .HasColumnName("empaquetado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<long>("IdVentaDetalle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle");

                    b.Property<string>("NotaPantalla")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nota_pantalla");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<bool?>("Pantalla")
                        .HasColumnType("bit")
                        .HasColumnName("pantalla");

                    b.ToView("detalle_empaquetado");
                });

            modelBuilder.Entity("Datos.Models.DetalleOrdencompra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoUnitario")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("Exento")
                        .HasColumnType("float");

                    b.Property<double>("ExistActual")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Actual");

                    b.Property<double>("Gravado")
                        .HasColumnType("float");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float")
                        .HasColumnName("impuesto");

                    b.Property<double>("MontoFlete")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Flete");

                    b.Property<long>("Orden")
                        .HasColumnType("bigint");

                    b.Property<double>("OtrosCargos")
                        .HasColumnType("float");

                    b.Property<double>("PorcDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Porc_Descuento");

                    b.Property<double>("PorcImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Porc_Impuesto");

                    b.Property<double>("TotalCompra")
                        .HasColumnType("float");

                    b.Property<double>("Vendidos")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Orden");

                    b.ToTable("detalle_ordencompra");
                });

            modelBuilder.Entity("Datos.Models.DetallePreAbonocCobrar", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Abono")
                        .HasColumnType("float");

                    b.Property<double>("AbonoSuMoneda")
                        .HasColumnType("float")
                        .HasColumnName("Abono_SuMoneda");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("IdRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Recibo");

                    b.Property<double>("Intereses")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.HasKey("Consecutivo");

                    b.HasIndex("IdRecibo");

                    b.ToTable("Detalle_PreAbonocCobrar");
                });

            modelBuilder.Entity("Datos.Models.DetallePrestamo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<double>("Devuelto")
                        .HasColumnType("float")
                        .HasColumnName("devuelto");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit")
                        .HasColumnName("entregado");

                    b.Property<long>("IdPrestamo")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_prestamo");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.HasKey("Id");

                    b.HasIndex("IdPrestamo");

                    b.ToTable("detalle_prestamo");
                });

            modelBuilder.Entity("Datos.Models.DevolucionPrestamo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit")
                        .HasColumnName("anulado");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<long>("IdDetallePrestamo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_detalle_prestamo");

                    b.Property<long>("IdPrestamo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_prestamo");

                    b.HasKey("Id");

                    b.ToTable("Devolucion_prestamo");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesCompra", b =>
                {
                    b.Property<long>("Devolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Asiento")
                        .HasColumnType("float");

                    b.Property<double>("AsientoInventario")
                        .HasColumnType("float");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<bool>("ContaInventario")
                        .HasColumnType("bit");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("IdFacturaCompra")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura_Compra");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombrePro")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("SaldoAntFact")
                        .HasColumnType("float")
                        .HasColumnName("SaldoAnt_Fact");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.HasKey("Devolucion");

                    b.ToTable("devoluciones_Compras");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesGeneralCliente", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Caja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("caja");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<double>("DescuentoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_Devolucion");

                    b.Property<int>("DescuentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("ExcentoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Excento_Devolucion");

                    b.Property<int>("ExcentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Ventas");

                    b.Property<double?>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double>("ImpuestoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_Devolucion");

                    b.Property<int>("ImpuestoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("NumApertura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<double>("SubtotalGravadoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("SubtotalGravado_Devolucion");

                    b.Property<int>("SubtotalGravadoVentas")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Ventas");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TotalDevolucion")
                        .HasColumnType("float");

                    b.Property<int>("TotalVenta")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("DevolucionesGeneralCliente");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesGeneralClienteTransporte", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Caja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("caja");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("DescuentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Devolucion");

                    b.Property<int>("DescuentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ExcentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Devolucion");

                    b.Property<int>("ExcentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Ventas");

                    b.Property<double?>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("ImpuestoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Devolucion");

                    b.Property<int>("ImpuestoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("NumApertura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubtotalGravadoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Devolucion");

                    b.Property<int>("SubtotalGravadoVentas")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Ventas");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TotalDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("TotalVenta")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<double?>("TransporteVentasDevueltas")
                        .HasColumnType("float");

                    b.ToView("DevolucionesGeneralClienteTransporte");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesVenta", b =>
                {
                    b.Property<long>("Devolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Caja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("caja");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("Clavedgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CLAVEDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint")
                        .HasColumnName("CONSECUTIVO");

                    b.Property<string>("Consecutivodgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CONSECUTIVODGT")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCosto")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<bool>("Enviadodgt")
                        .HasColumnType("bit")
                        .HasColumnName("ENVIADODGT");

                    b.Property<string>("Estadodgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESTADODGT")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<string>("NotasDevolucion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("NumApertura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumeroAsiento")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroAsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<double>("SaldoAntFact")
                        .HasColumnType("float")
                        .HasColumnName("SaldoAnt_Fact");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioRecibio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Devolucion");

                    b.HasIndex("IdFactura");

                    b.ToTable("devoluciones_ventas");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesVenta1", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Caja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("caja");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SaldoAntFact")
                        .HasColumnType("float")
                        .HasColumnName("SaldoAnt_Fact");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioRecibio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToView("DevolucionesVentas");
                });

            modelBuilder.Entity("Datos.Models.Emisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Canton")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Certificado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Distrito")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IdTipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OtrasSeñas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Provincia")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VenceCertificado")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoIdentificacion");

                    b.ToTable("Emisor");
                });

            modelBuilder.Entity("Datos.Models.Empaquetado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cedula");

                    b.Property<long?>("Factura")
                        .HasColumnType("bigint")
                        .HasColumnName("factura");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<long>("IdVentaDetalle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.Property<string>("Timer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timer");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("Empaquetado");
                });

            modelBuilder.Entity("Datos.Models.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actual")
                        .HasColumnType("bit")
                        .HasColumnName("actual");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)")
                        .HasDefaultValueSql("('0000000000')")
                        .IsFixedLength(true);

                    b.Property<string>("Empresa1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("empresa");

                    b.HasKey("Id");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("Datos.Models.EmpresaActividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdActividad")
                        .HasColumnType("int")
                        .HasColumnName("idActividad");

                    b.Property<int>("IdEmisor")
                        .HasColumnType("int")
                        .HasColumnName("idEmisor");

                    b.HasKey("Id");

                    b.HasIndex("IdActividad");

                    b.HasIndex("IdEmisor");

                    b.ToTable("EmpresaActividades");
                });

            modelBuilder.Entity("Datos.Models.Encargadocompra", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<long>("Cliente")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Identificacion");

                    b.HasIndex("Cliente");

                    b.ToTable("encargadocompras");
                });

            modelBuilder.Entity("Datos.Models.EstadoCotizacion", b =>
                {
                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.ToTable("EstadoCotizacion");
                });

            modelBuilder.Entity("Datos.Models.ExepcionFirmadocontado", b =>
                {
                    b.Property<decimal>("IdExepcionFirmadocontado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("ID_EXEPCION_FIRMADOCONTADO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEDULA");

                    b.Property<decimal>("IdValidaFirmadocontado")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("ID_VALIDA_FIRMADOCONTADO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("IdExepcionFirmadocontado");

                    b.HasIndex("IdValidaFirmadocontado");

                    b.ToTable("EXEPCION_FIRMADOCONTADO");
                });

            modelBuilder.Entity("Datos.Models.Familium", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("CuentaCosto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("CuentaExe")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("CuentaGra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("DescripcionCosto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("DescripcionExe")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("DescripcionGra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Codigo");

                    b.ToTable("Familia");
                });

            modelBuilder.Entity("Datos.Models.FechaMovimientoOpcionesPago", b =>
                {
                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.ToView("Fecha_Movimiento_OpcionesPago");
                });

            modelBuilder.Entity("Datos.Models.FichasxUsuario", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Desde")
                        .HasColumnType("float");

                    b.Property<decimal>("EnMostrador")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Hasta")
                        .HasColumnType("float");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FichasxUsuario");
                });

            modelBuilder.Entity("Datos.Models.FormatoDeCompra", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Cant")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("formato de compras");
                });

            modelBuilder.Entity("Datos.Models.Ganancia", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<double>("Cantidadreal")
                        .HasColumnType("float");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("Ganancia1")
                        .HasColumnType("float")
                        .HasColumnName("Ganancia");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotalReal")
                        .HasColumnType("float");

                    b.ToView("Ganancias");
                });

            modelBuilder.Entity("Datos.Models.GestionCobroBitacora", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Contesto")
                        .HasColumnType("bit");

                    b.Property<bool>("EnvioCarta")
                        .HasColumnType("bit");

                    b.Property<bool>("EnvioMensaje")
                        .HasColumnType("bit");

                    b.Property<decimal>("Etapa")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Pv")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PV")
                        .HasDefaultValueSql("('SeePOS')");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("GestionCobro_Bitacora");
                });

            modelBuilder.Entity("Datos.Models.GetMensajeXId", b =>
                {
                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CONSECUTIVO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaEmisionDoc")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("GET_MENSAJE_x_ID");
                });

            modelBuilder.Entity("Datos.Models.GetMensajeXml43", b =>
                {
                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CondicionImpuesto")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("DetalleMensaje")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FechaEmisionDoc")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("Mensaje")
                        .HasColumnType("int");

                    b.Property<double>("MontoTotalDeGastoAplicable")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuestoAcreditar")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroCedulaReceptor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroConsecutivoReceptor")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("GET_MENSAJE_XML43");
                });

            modelBuilder.Entity("Datos.Models.HistorialPrestamo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<long>("IdPrestamo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_prestamo");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("historial_prestamos");
                });

            modelBuilder.Entity("Datos.Models.HistoricoSerie", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Boleta")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdSerie")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.ToTable("HistoricoSerie");
                });

            modelBuilder.Entity("Datos.Models.Holiday", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("Datos.Models.Impuesto", b =>
                {
                    b.Property<int>("IdImpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Impuesto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Tarifa");

                    b.Property<string>("Impuesto1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Impuesto");

                    b.Property<bool>("Inactivo")
                        .HasColumnType("bit");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdImpuesto");

                    b.ToTable("Impuestos");
                });

            modelBuilder.Entity("Datos.Models.Inven", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.ToView("Inven");
                });

            modelBuilder.Entity("Datos.Models.Inventario", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<bool>("ActivarBodega2")
                        .HasColumnType("bit");

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<double?>("Apartado")
                        .HasColumnType("float");

                    b.Property<bool>("ApicarDescuentoTarjeta")
                        .HasColumnType("bit");

                    b.Property<bool?>("Armamento")
                        .HasColumnType("bit")
                        .HasColumnName("armamento");

                    b.Property<string>("Barras")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Barras2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras2");

                    b.Property<string>("Barras3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras3");

                    b.Property<bool?>("Bloqueado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bloqueado")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Bonificado")
                        .HasColumnType("bit")
                        .HasColumnName("bonificado");

                    b.Property<double?>("CantidadDescarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("CantidadPresentOtro")
                        .HasColumnType("float");

                    b.Property<bool?>("Clinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("clinica")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMarca")
                        .HasColumnType("int");

                    b.Property<int>("CodPresentOtro")
                        .HasColumnType("int")
                        .HasColumnName("Cod_PresentOtro");

                    b.Property<int>("CodPresentacion")
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Codcabys")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CODCABYS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CodigoDescarga")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<long>("CodigoPrestamo")
                        .HasColumnType("bigint");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double?>("CostoReal")
                        .HasColumnType("float");

                    b.Property<bool?>("DescargaOtro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("EnToma")
                        .HasColumnType("bit");

                    b.Property<string>("Encargado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("encargado");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<double>("ExistenciaBodega")
                        .HasColumnType("float");

                    b.Property<double>("ExistenciaBodega2")
                        .HasColumnType("float");

                    b.Property<double?>("ExistenciaForzada")
                        .HasColumnType("float");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Fletes")
                        .HasColumnType("float");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int")
                        .HasColumnName("Id_Bodega");

                    b.Property<int>("IdImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Id_Impuesto");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("image");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<double>("Iventa")
                        .HasColumnType("float")
                        .HasColumnName("IVenta");

                    b.Property<bool>("Lote")
                        .HasColumnType("bit");

                    b.Property<bool>("Mag")
                        .HasColumnType("bit")
                        .HasColumnName("MAG");

                    b.Property<bool?>("Maquinaria")
                        .HasColumnType("bit")
                        .HasColumnName("maquinaria");

                    b.Property<bool?>("Mascotas")
                        .HasColumnType("bit")
                        .HasColumnName("mascotas");

                    b.Property<double>("MaxBodega")
                        .HasColumnType("float")
                        .HasColumnName("MAX_Bodega");

                    b.Property<double>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MaxInventario")
                        .HasColumnType("float")
                        .HasColumnName("MAX_Inventario");

                    b.Property<double>("Maxima")
                        .HasColumnType("float");

                    b.Property<double>("Minima")
                        .HasColumnType("float");

                    b.Property<int>("MonedaCosto")
                        .HasColumnType("int");

                    b.Property<int>("MonedaVenta")
                        .HasColumnType("int");

                    b.Property<bool?>("Muestra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("Orden")
                        .HasColumnType("bit")
                        .HasColumnName("orden");

                    b.Property<double>("OtrosCargos")
                        .HasColumnType("float");

                    b.Property<bool?>("Pantalla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("pantalla")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Peces")
                        .HasColumnType("bit")
                        .HasColumnName("peces");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioB")
                        .HasColumnType("float")
                        .HasColumnName("Precio_B");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float");

                    b.Property<double>("PrecioC")
                        .HasColumnType("float")
                        .HasColumnName("Precio_C");

                    b.Property<double>("PrecioD")
                        .HasColumnType("float")
                        .HasColumnName("Precio_D");

                    b.Property<double>("PrecioPromo")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Promo");

                    b.Property<double>("PrecioSugerido")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Sugerido");

                    b.Property<bool>("PreguntaPrecio")
                        .HasColumnType("bit");

                    b.Property<double>("PresentaCant")
                        .HasColumnType("float");

                    b.Property<double?>("Prestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("prestamo")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ProductosOrganicos")
                        .HasColumnType("bit")
                        .HasColumnName("productos_organicos");

                    b.Property<bool?>("Promo3x1")
                        .HasColumnType("bit")
                        .HasColumnName("promo3x1");

                    b.Property<bool>("PromoActiva")
                        .HasColumnType("bit")
                        .HasColumnName("Promo_Activa");

                    b.Property<bool>("PromoCon")
                        .HasColumnType("bit")
                        .HasColumnName("PromoCON");

                    b.Property<bool>("PromoCre")
                        .HasColumnType("bit")
                        .HasColumnName("PromoCRE");

                    b.Property<DateTime>("PromoFinaliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Promo_Finaliza")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("PromoInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Promo_Inicio")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int")
                        .HasComment("Campo que me permitirá establecer el proveedor por defecto");

                    b.Property<double>("PuntoMedio")
                        .HasColumnType("float");

                    b.Property<bool?>("Receta")
                        .HasColumnType("bit")
                        .HasColumnName("receta");

                    b.Property<long?>("Rifa")
                        .HasColumnType("bigint")
                        .HasColumnName("rifa");

                    b.Property<long>("Serie")
                        .HasColumnType("bigint")
                        .HasColumnName("serie");

                    b.Property<bool>("Servicio")
                        .HasColumnType("bit");

                    b.Property<bool>("SinDecimal")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloConExistencia")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloContado")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloUsoInterno")
                        .HasColumnType("bit");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SubUbicacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("SugeridoIv")
                        .HasColumnType("float")
                        .HasColumnName("SugeridoIV");

                    b.Property<bool?>("Taller")
                        .HasColumnType("bit")
                        .HasColumnName("taller");

                    b.Property<bool?>("Tienda")
                        .HasColumnType("bit")
                        .HasColumnName("tienda");

                    b.Property<bool>("UsaGalon")
                        .HasColumnType("bit");

                    b.Property<bool>("ValidaExistencia")
                        .HasColumnType("bit");

                    b.Property<bool>("Web")
                        .HasColumnType("bit");

                    b.HasKey("Codigo");

                    b.HasIndex("CodPresentacion");

                    b.HasIndex("IdImpuesto");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("Datos.Models.InventarioGeneral", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<double>("PrecioFinal")
                        .HasColumnType("float");

                    b.Property<double>("PresentaCant")
                        .HasColumnType("float");

                    b.Property<string>("Presentaciones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Prestamo")
                        .HasColumnType("float")
                        .HasColumnName("prestamo");

                    b.ToView("InventarioGeneral");
                });

            modelBuilder.Entity("Datos.Models.InventarioInicial", b =>
                {
                    b.Property<double?>("Actual")
                        .HasColumnType("float");

                    b.Property<string>("Codigo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("ExistenciaBodega")
                        .HasColumnType("float");

                    b.ToTable("Inventario_Inicial");
                });

            modelBuilder.Entity("Datos.Models.Kardex", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double?>("ExistActBod")
                        .HasColumnType("float")
                        .HasColumnName("Exist_ActBod");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<double?>("ExistAntBod")
                        .HasColumnType("float")
                        .HasColumnName("Exist_AntBod");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long?>("IdBodegaDestino")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdBodegaOrigen")
                        .HasColumnType("bigint");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.HasKey("Consecutivo");

                    b.ToTable("Kardex");
                });

            modelBuilder.Entity("Datos.Models.KardexCompra", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint");

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DevolucionCompras")
                        .HasColumnType("int");

                    b.Property<int>("DevolucionVentas")
                        .HasColumnType("int");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KardexCompras");
                });

            modelBuilder.Entity("Datos.Models.KardexConsignacion", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double?>("ExistActBod")
                        .HasColumnType("float")
                        .HasColumnName("Exist_ActBod");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<double?>("ExistAntBod")
                        .HasColumnType("float")
                        .HasColumnName("Exist_AntBod");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long?>("IdBodegaDestino")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdBodegaOrigen")
                        .HasColumnType("bigint");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.HasKey("Consecutivo");

                    b.ToTable("KardexConsignacion");
                });

            modelBuilder.Entity("Datos.Models.KardexDevolucionCompra", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint");

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<long>("DevolucionCompras")
                        .HasColumnType("bigint");

                    b.Property<int>("DevolucionVentas")
                        .HasColumnType("int");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KardexDevolucionCompras");
                });

            modelBuilder.Entity("Datos.Models.KardexDevolucionVentum", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint");

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DevolucionCompras")
                        .HasColumnType("int");

                    b.Property<long>("DevolucionVenta")
                        .HasColumnType("bigint");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<long>("Factura")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KardexDevolucionVenta");
                });

            modelBuilder.Entity("Datos.Models.KardexPrestamo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Actual")
                        .HasColumnType("float")
                        .HasColumnName("actual");

                    b.Property<double?>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<double?>("CantidadAnt")
                        .HasColumnType("float")
                        .HasColumnName("cantidad_ant");

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<long?>("IdPrestamo")
                        .HasColumnType("bigint")
                        .HasColumnName("id_prestamo");

                    b.HasKey("Id");

                    b.ToTable("kardex_prestamo");
                });

            modelBuilder.Entity("Datos.Models.KardexVario", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DevolucionCompras")
                        .HasColumnType("int");

                    b.Property<int>("DevolucionVentas")
                        .HasColumnType("int");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<int>("Factura")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KardexVarios");
                });

            modelBuilder.Entity("Datos.Models.KardexVenta", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint");

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DevolucionCompras")
                        .HasColumnType("int");

                    b.Property<int>("DevolucionVentas")
                        .HasColumnType("int");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KardexVentas");
                });

            modelBuilder.Entity("Datos.Models.Kcompra", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KCompras");
                });

            modelBuilder.Entity("Datos.Models.KdevolucionCompra", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KDevolucionCompras");
                });

            modelBuilder.Entity("Datos.Models.KdevolucionVenta", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KDevolucionVentas");
                });

            modelBuilder.Entity("Datos.Models.Kvario", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KVarios");
                });

            modelBuilder.Entity("Datos.Models.Kventa", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Proveedor");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostoMov")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Mov");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float")
                        .HasColumnName("Costo_Unit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<double>("ExistAct")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Act");

                    b.Property<double>("ExistAnt")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Ant");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.ToView("KVentas");
                });

            modelBuilder.Entity("Datos.Models.ListadoProducto", b =>
                {
                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToView("listado_productos");
                });

            modelBuilder.Entity("Datos.Models.Log", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Autorizacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CodigoRespueta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DescripcionRespuesta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Factura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdApertura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdTerminal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdTransaccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TituloTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Datos.Models.Lote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantActual")
                        .HasColumnType("float")
                        .HasColumnName("Cant_Actual");

                    b.Property<double>("CantInicial")
                        .HasColumnType("float")
                        .HasColumnName("Cant_Inicial");

                    b.Property<long>("CodArticulo")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Documento")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Entrada")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('--')")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Vencimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex("CodArticulo");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("Datos.Models.Marca", b =>
                {
                    b.Property<int>("CodMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Marca");

                    b.HasKey("CodMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Datos.Models.MensajeReceptor", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodProveedor")
                        .HasColumnType("int");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CondicionImpuesto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DetalleMensaje")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<DateTime?>("FechaComprobante")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEmisionDoc")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'CRC')");

                    b.Property<double>("MontoTotalDeGastoAplicable")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuestoAcreditar")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pdf")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PDF")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CodProveedor");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("MensajeReceptor");
                });

            modelBuilder.Entity("Datos.Models.Modulo", b =>
                {
                    b.Property<int>("IdModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_modulo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('-')");

                    b.Property<string>("ModuloNombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Modulo_Nombre");

                    b.Property<string>("ModuloNombreInterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Modulo_Nombre_Interno");

                    b.Property<int>("Software")
                        .HasColumnType("int");

                    b.HasKey("IdModulo");

                    b.HasIndex(new[] { "ModuloNombreInterno" }, "IX_Modulos")
                        .IsUnique();

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("Datos.Models.Moneda", b =>
                {
                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<double>("Tccompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("TCCompra")
                        .HasDefaultValueSql("((500))");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("float");

                    b.Property<double>("ValorVenta")
                        .HasColumnType("float");

                    b.HasKey("CodMoneda")
                        .HasName("PK_Moneda");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("Datos.Models.MovimientoArticuloVenta", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(260)
                        .IsUnicode(false)
                        .HasColumnType("varchar(260)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("MovimientoArticuloVentas");
                });

            modelBuilder.Entity("Datos.Models.MovimientoArticulosCompra", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Compra");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TipoCompra")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("MovimientoArticulosCompra");
                });

            modelBuilder.Entity("Datos.Models.MovimientoCaja", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasComment("0");

                    b.Property<bool?>("Entrada")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasComment("getdate()");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Salida")
                        .HasColumnType("bit");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Id");

                    b.ToTable("Movimiento_Caja");
                });

            modelBuilder.Entity("Datos.Models.MovimientoClienteSaldo", b =>
                {
                    b.Property<double?>("Acreditado")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<double?>("Debitado")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("MovimientoClienteSaldo");
                });

            modelBuilder.Entity("Datos.Models.MovimientoCuentaCliente", b =>
                {
                    b.Property<double>("Acreditado")
                        .HasColumnType("float");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<double?>("Debitado")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("MovimientoCuentaCliente");
                });

            modelBuilder.Entity("Datos.Models.MovimientoCuentaProveedor", b =>
                {
                    b.Property<double>("Acreditado")
                        .HasColumnType("float");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int?>("CodigoProveedor")
                        .HasColumnType("int");

                    b.Property<double>("Debitado")
                        .HasColumnType("float");

                    b.Property<double?>("Documento")
                        .HasColumnType("float");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("MovimientoCuentaProveedor");
                });

            modelBuilder.Entity("Datos.Models.MovimientosBodega", b =>
                {
                    b.Property<long>("BoletaMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Boleta_Movimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<int>("Bodega")
                        .HasColumnType("int");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("BoletaMovimiento");

                    b.HasIndex("Bodega");

                    b.ToTable("MovimientosBodega");
                });

            modelBuilder.Entity("Datos.Models.MovimientosBodegaDetalle", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Detalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BoletaMovimiento")
                        .HasColumnType("bigint")
                        .HasColumnName("Boleta_Movimiento");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<long?>("ExistVeteForzada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("(0)");

                    b.Property<long?>("ExistenciaForzada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool?>("TipoEntrada")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Tipo_Entrada")
                        .HasDefaultValueSql("(1)");

                    b.Property<bool>("TipoSalida")
                        .HasColumnType("bit")
                        .HasColumnName("Tipo_Salida");

                    b.HasKey("IdDetalle")
                        .HasName("PK_Bodegas_DetalleMovimiento");

                    b.HasIndex("BoletaMovimiento");

                    b.ToTable("MovimientosBodega_Detalle");
                });

            modelBuilder.Entity("Datos.Models.MuertesGasto", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<double?>("Asiento")
                        .HasColumnType("float");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool?>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("SaldoAjuste")
                        .HasColumnType("float");

                    b.Property<double>("TotalEntrada")
                        .HasColumnType("float");

                    b.Property<double>("TotalSalida")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.ToTable("MuertesGastos");
                });

            modelBuilder.Entity("Datos.Models.MuertesGastosDetalle", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodArticulo")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("CodArticulo1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CodArticulo");

                    b.Property<long>("ConsAjuste")
                        .HasColumnType("bigint")
                        .HasColumnName("Cons_Ajuste");

                    b.Property<double>("CostoUnit")
                        .HasColumnType("float");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cuenta_contable");

                    b.Property<string>("Cuentacontable1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CUENTACONTABLE");

                    b.Property<string>("DescArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Desc_Articulo");

                    b.Property<string>("Descripcioncuentacontable")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESCRIPCIONCUENTACONTABLE");

                    b.Property<bool>("Entrada")
                        .HasColumnType("bit");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("observacion");

                    b.Property<bool>("Salida")
                        .HasColumnType("bit");

                    b.Property<double>("TotalEntrada")
                        .HasColumnType("float");

                    b.Property<double>("TotalSalida")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.ToTable("MuertesGastos_Detalle");
                });

            modelBuilder.Entity("Datos.Models.NoMag", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NoMAG");
                });

            modelBuilder.Entity("Datos.Models.ObtenerDetalleFactura43", b =>
                {
                    b.Property<string>("Cabys")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FechaEmisionExoneracion")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("FechaEmision_Exoneracion");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<double>("ImpuestoNeto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("MontoImpuestoExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("MontoImpuesto_Exoneracion");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalLinea")
                        .HasColumnType("float");

                    b.Property<string>("NaturalezaDescuento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NombreInstitucionExoneracion")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)")
                        .HasColumnName("NombreInstitucion_Exoneracion");

                    b.Property<string>("NumeroDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NumeroDocumento_Exoneracion");

                    b.Property<double>("PorcentajeCompraExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("PorcentajeCompra_Exoneracion");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TarifaImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Tarifa_Impuesto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TipoDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoDocumento_Exoneracion");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("ObtenerDetalleFactura43");
                });

            modelBuilder.Entity("Datos.Models.ObtenerDetallesDevolucion43", b =>
                {
                    b.Property<string>("Cabys")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<string>("FechaEmisionExoneracion")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("FechaEmision_Exoneracion");

                    b.Property<double>("ImpuestoNeto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("MontoImpuestoExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("MontoImpuesto_Exoneracion");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalLinea")
                        .HasColumnType("float");

                    b.Property<string>("NaturalezaDescuento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NombreInstitucionExoneracion")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)")
                        .HasColumnName("NombreInstitucion_Exoneracion");

                    b.Property<string>("NumeroDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NumeroDocumento_Exoneracion");

                    b.Property<double>("PorcentajeCompraExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("PorcentajeCompra_Exoneracion");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TarifaImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Tarifa_Impuesto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TipoDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoDocumento_Exoneracion");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("ObtenerDetallesDevolucion43");
                });

            modelBuilder.Entity("Datos.Models.ObtenerDevolucion43", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CantonEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Canton_Emisor");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CodigoMoneda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CodigoPaisEmisor")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodigoPais_Emisor");

                    b.Property<string>("CodigoReferencia")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Codigo_Referencia");

                    b.Property<string>("CondicionVenta")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("CorreoElectronicoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CorreoElectronico_Emisor");

                    b.Property<string>("CorreoElectronicoReceptor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CorreoElectronico_Receptor");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<string>("DistritoEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Distrito_Emisor");

                    b.Property<DateTime>("Expr1")
                        .HasColumnType("datetime");

                    b.Property<long>("Expr2")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("FechaEmisionReferencia")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("FechaEmision_Referencia");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("NombreEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nombre_Emisor");

                    b.Property<string>("NombreReceptor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nombre_Receptor");

                    b.Property<string>("NumTelefonoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NumTelefono_Emisor");

                    b.Property<string>("NumTelefonoReceptor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("NumTelefono_Receptor");

                    b.Property<string>("NumeroEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Numero_Emisor");

                    b.Property<string>("NumeroReceptor")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Numero_Receptor");

                    b.Property<string>("NumeroReferencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Numero_Referencia");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OtrasSenasEmisor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OtrasSenas_Emisor");

                    b.Property<decimal>("ProvinciaEmisor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Provincia_Emisor");

                    b.Property<string>("RazonReferencia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Razon_Referencia");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocReferencia")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("TipoDoc_Referencia");

                    b.Property<string>("TipoEmisor")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Emisor");

                    b.Property<string>("TipoFactura")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TipoReceptor")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Receptor");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercExonerada")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasExentas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasGravadas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServGravados")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVenta")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("ObtenerDevolucion43");
                });

            modelBuilder.Entity("Datos.Models.ObtenerFacturas43", b =>
                {
                    b.Property<string>("CantonEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Canton_Emisor");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CodigoMoneda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CodigoPaisEmisor")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodigoPais_Emisor");

                    b.Property<string>("CondicionVenta")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CorreoElectronicoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CorreoElectronico_Emisor");

                    b.Property<string>("CorreoElectronicoReceptor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CorreoElectronico_Receptor");

                    b.Property<string>("DistritoEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Distrito_Emisor");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("NombreEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nombre_Emisor");

                    b.Property<string>("NombreReceptor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Receptor");

                    b.Property<string>("NumTelefonoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NumTelefono_Emisor");

                    b.Property<string>("NumTelefonoReceptor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("NumTelefono_Receptor");

                    b.Property<string>("NumeroConsecutivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Numero_Emisor");

                    b.Property<string>("NumeroReceptor")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Numero_Receptor");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrdenCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("OtrasSenasEmisor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OtrasSenas_Emisor");

                    b.Property<int?>("PlazoCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("ProvinciaEmisor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Provincia_Emisor");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoEmisor")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Emisor");

                    b.Property<string>("TipoReceptor")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Receptor");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercExonerada")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasExentas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasGravadas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServGravados")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVenta")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("ObtenerFacturas43");
                });

            modelBuilder.Entity("Datos.Models.OpcionesDePago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<double>("Denominacion")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoPago")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombremoneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Numapertura")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<double>("Vuelto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("OpcionesDePago");
                });

            modelBuilder.Entity("Datos.Models.OpcionesDePagoDevolucione", b =>
                {
                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<double>("Denominacion")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MontoPago")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombremoneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Numapertura")
                        .HasColumnType("bigint");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.ToView("OpcionesDePagoDevoluciones");
                });

            modelBuilder.Entity("Datos.Models.OpcionesDePagoDveDva", b =>
                {
                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<double>("Denominacion")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MontoPago")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombremoneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Numapertura")
                        .HasColumnType("bigint");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.ToView("OpcionesDePagoDVE_DVA");
                });

            modelBuilder.Entity("Datos.Models.OpcionesDePagoSinCredito", b =>
                {
                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<double>("Denominacion")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<double>("MontoPago")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombremoneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Numapertura")
                        .HasColumnType("bigint");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.ToView("OpcionesDePagoSinCredito");
                });

            modelBuilder.Entity("Datos.Models.OpcionesDePagoSinDve", b =>
                {
                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<double>("Denominacion")
                        .HasColumnType("float");

                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FormaPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MontoPago")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombremoneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Numapertura")
                        .HasColumnType("bigint");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.ToView("OpcionesDePagoSinDVE");
                });

            modelBuilder.Entity("Datos.Models.OrdenCompraAutomática", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<int>("CodigoProveedor")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoUnitario")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<int>("Excento")
                        .HasColumnType("int");

                    b.Property<int>("Gravado")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Impuesto")
                        .HasColumnType("int");

                    b.Property<int>("MontoFlete")
                        .HasColumnType("int")
                        .HasColumnName("Monto_Flete");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("OtrosCargos")
                        .HasColumnType("int");

                    b.Property<int>("PorcDescuento")
                        .HasColumnType("int")
                        .HasColumnName("Porc_Descuento");

                    b.Property<double>("PorcImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Porc_Impuesto");

                    b.Property<int>("TotalCompra")
                        .HasColumnType("int");

                    b.ToView("Orden_Compra_Automática");
                });

            modelBuilder.Entity("Datos.Models.OrdenTrabajo", b =>
                {
                    b.Property<decimal>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Serie")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrabajoSolicitados")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IdOrden");

                    b.ToTable("OrdenTrabajo");
                });

            modelBuilder.Entity("Datos.Models.Ordencompra", b =>
                {
                    b.Property<long>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<bool>("Contado")
                        .HasColumnType("bit")
                        .HasColumnName("contado");

                    b.Property<bool>("Credito")
                        .HasColumnType("bit")
                        .HasColumnName("credito");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("Diascredito")
                        .HasColumnType("float")
                        .HasColumnName("diascredito");

                    b.Property<string>("Entregar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("entregar");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Plazo")
                        .HasColumnType("int");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Orden");

                    b.ToTable("ordencompra");
                });

            modelBuilder.Entity("Datos.Models.PagosDuplicado", b =>
                {
                    b.Property<double>("Documento")
                        .HasColumnType("float");

                    b.ToView("PagosDuplicados");
                });

            modelBuilder.Entity("Datos.Models.PedidoBodega", b =>
                {
                    b.Property<decimal>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadPedido")
                        .HasColumnType("float");

                    b.Property<double>("CantidadPuntos")
                        .HasColumnType("float");

                    b.Property<double>("CantidadSolicitud")
                        .HasColumnType("float");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Consecutivo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaRecibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuarioPidio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("IdUsuarioRecibio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("IdUsuarioSolicitud")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("PrecioUnid")
                        .HasColumnType("float");

                    b.Property<decimal>("Proveedor")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("IdPedido");

                    b.ToTable("PedidoBodega");
                });

            modelBuilder.Entity("Datos.Models.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Perfil")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombrePerfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre_Perfil")
                        .HasDefaultValueSql("('')");

                    b.HasKey("IdPerfil")
                        .HasName("PK_Perfil_x_Usuario");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Datos.Models.PerfilXModulo", b =>
                {
                    b.Property<int>("IdModuloPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Modulo_Perfil")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AccionActualizacion")
                        .HasColumnType("bit")
                        .HasColumnName("Accion_Actualizacion");

                    b.Property<bool>("AccionBusqueda")
                        .HasColumnType("bit")
                        .HasColumnName("Accion_Busqueda");

                    b.Property<bool>("AccionEjecucion")
                        .HasColumnType("bit")
                        .HasColumnName("Accion_Ejecucion");

                    b.Property<bool>("AccionEliminacion")
                        .HasColumnType("bit")
                        .HasColumnName("Accion_Eliminacion");

                    b.Property<bool>("AccionImpresion")
                        .HasColumnType("bit")
                        .HasColumnName("Accion_Impresion");

                    b.Property<bool>("AccionOpcion")
                        .HasColumnType("bit")
                        .HasColumnName("Accion_Opcion");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int")
                        .HasColumnName("Id_Modulo");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int")
                        .HasColumnName("Id_Perfil");

                    b.Property<string>("Menu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('-')");

                    b.HasKey("IdModuloPerfil");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Perfil_x_Modulo");
                });

            modelBuilder.Entity("Datos.Models.PerfilXUsuario", b =>
                {
                    b.Property<int>("IdPerUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_PerUser")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int")
                        .HasColumnName("Id_Perfil");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Id_Usuario");

                    b.HasKey("IdPerUser")
                        .HasName("PK_Perfil_x_Usuario_1");

                    b.HasIndex("IdUsuario");

                    b.HasIndex(new[] { "IdPerfil", "IdUsuario" }, "IX_Perfil_x_Usuario")
                        .IsUnique();

                    b.ToTable("Perfil_x_Usuario");
                });

            modelBuilder.Entity("Datos.Models.Permiso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("clave");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("Datos.Models.PreAbonocCobrar", b =>
                {
                    b.Property<long>("IdRecibo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Recibo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<long>("Asiento")
                        .HasColumnType("bigint");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("banco")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CedUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Ced_Usuario")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Cheque")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('PreAbono')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("Ficha")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("NumCaja")
                        .HasColumnType("int")
                        .HasColumnName("Num_Caja");

                    b.Property<long>("NumRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Recibo");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("SaldoActual")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Actual");

                    b.Property<double>("SaldoCuenta")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Cuenta");

                    b.HasKey("IdRecibo");

                    b.ToTable("PreAbonocCobrar");
                });

            modelBuilder.Entity("Datos.Models.PreTomaGeneral", b =>
                {
                    b.Property<decimal>("IdPreToma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<string>("Encargado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.HasKey("IdPreToma");

                    b.ToTable("PreTomaGeneral");
                });

            modelBuilder.Entity("Datos.Models.PreTomaGeneralDetalle", b =>
                {
                    b.Property<decimal>("IdPreTomaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("Contado")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Diferencia")
                        .HasColumnType("float");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<decimal>("IdPreToma")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Toma")
                        .HasColumnType("float");

                    b.HasKey("IdPreTomaDetalle");

                    b.HasIndex("IdPreToma");

                    b.ToTable("PreTomaGeneralDetalle");
                });

            modelBuilder.Entity("Datos.Models.PreTomaProveedor", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CodigoProv")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuarioCreo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_UsuarioCreo");

                    b.Property<bool>("Usado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PreTomaProveedor");
                });

            modelBuilder.Entity("Datos.Models.PreTomaProveedorDetalle", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripicon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("IdPreTomaProveedor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_PreTomaProveedor");

                    b.HasKey("Id");

                    b.HasIndex("IdPreTomaProveedor");

                    b.ToTable("PreTomaProveedorDetalle");
                });

            modelBuilder.Entity("Datos.Models.PreVenta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('000000000')");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH")
                        .HasDefaultValueSql("('')");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('PreVenta')");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("Ficha")
                        .HasColumnType("float");

                    b.Property<bool>("Frecuente")
                        .HasColumnType("bit");

                    b.Property<decimal>("IdCotizacion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdFacturaRemplaza")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_FacturaRemplaza");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('FISICA')");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.ToTable("PreVentas");
                });

            modelBuilder.Entity("Datos.Models.PreVentasDetalle", b =>
                {
                    b.Property<long>("IdVentaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantBod")
                        .HasColumnType("float");

                    b.Property<double>("CantVet")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("CodMonedaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaVenta")
                        .HasDefaultValueSql("((500))");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("CostoReal")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double?>("Disminuye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Empaquetado")
                        .HasColumnType("bit")
                        .HasColumnName("empaquetado");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Entregados")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<long?>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_bodega")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<decimal>("IdSerie")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdTipoExoneracion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NotaPantalla")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nota_pantalla")
                        .HasDefaultValueSql("('-')");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("NumeroEntrega")
                        .HasColumnType("float")
                        .HasColumnName("Numero_Entrega");

                    b.Property<decimal>("PorcentajeCompra")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double?>("Regalias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("regalias")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambioValorCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio_ValorCompra")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdVentaDetalle");

                    b.HasIndex("IdFactura");

                    b.ToTable("PreVentas_Detalle");
                });

            modelBuilder.Entity("Datos.Models.PrecioDiferenciado", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CodProveedor")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdAgente")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PrecioDiferenciado");
                });

            modelBuilder.Entity("Datos.Models.Presentacione", b =>
                {
                    b.Property<int>("CodPres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MH")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Presentaciones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodPres");

                    b.ToTable("Presentaciones");
                });

            modelBuilder.Entity("Datos.Models.Prestamo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit")
                        .HasColumnName("anulado");

                    b.Property<string>("Boleta")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("boleta")
                        .IsFixedLength(true);

                    b.Property<string>("BoletaProveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<long>("Destinatario")
                        .HasColumnType("bigint")
                        .HasColumnName("destinatario");

                    b.Property<long>("Destino")
                        .HasColumnType("bigint")
                        .HasColumnName("destino");

                    b.Property<bool>("Entrada")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("IdUsuariCreo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("Id_UsuariCreo")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("NombreDestinatario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_destinatario");

                    b.Property<string>("NombreDestino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_destino");

                    b.Property<string>("Observacion")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("observacion");

                    b.Property<bool>("Salida")
                        .HasColumnType("bit");

                    b.Property<string>("Transportista")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("transportista")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Prestamo");
                });

            modelBuilder.Entity("Datos.Models.ProdEmpaquetado", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cedula");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<long>("IdVentaDetalle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.ToView("prod_Empaquetado");
                });

            modelBuilder.Entity("Datos.Models.ProveedorMetum", b =>
                {
                    b.Property<decimal>("IdProveedorMeta")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("ID_PROVEEDOR_META");

                    b.Property<decimal?>("Anulado")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("ANULADO");

                    b.Property<decimal?>("Codigoprov")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("CODIGOPROV");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<double?>("Mensual")
                        .HasColumnType("float")
                        .HasColumnName("MENSUAL");

                    b.HasKey("IdProveedorMeta")
                        .HasName("PK__PROVEEDO__EC0B299EDAA8F6CD");

                    b.ToTable("PROVEEDOR_META");
                });

            modelBuilder.Entity("Datos.Models.Proveedore", b =>
                {
                    b.Property<int>("CodigoProv")
                        .HasColumnType("int");

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("CostoTotal")
                        .HasColumnType("bit");

                    b.Property<string>("CuentaContable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescripcionCuentaContable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Fec")
                        .HasColumnType("bit")
                        .HasColumnName("FEC");

                    b.Property<decimal>("IdCanton")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Canton");

                    b.Property<decimal>("IdDistrito")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Distrito");

                    b.Property<decimal>("IdProvincia")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Provincia");

                    b.Property<bool>("ImpIncluido")
                        .HasColumnType("bit");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<double>("MontoCredito")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("OtrasSenas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("PedidosMes")
                        .HasColumnType("int");

                    b.Property<int>("Plazo")
                        .HasColumnType("int");

                    b.Property<bool>("Serie")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Telefono2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TelefonoCont")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefono_Cont")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TipoProveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("UtilidadFija")
                        .HasColumnType("bit")
                        .HasColumnName("Utilidad_Fija");

                    b.Property<double>("UtilidadInventario")
                        .HasColumnType("float")
                        .HasColumnName("Utilidad_Inventario");

                    b.HasKey("CodigoProv");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Datos.Models.PuntodeVentum", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("IdPuntoVenta")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("Mascota")
                        .HasColumnType("int");

                    b.Property<string>("PuntoVenta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Relacion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("Taller")
                        .HasColumnType("int");

                    b.ToView("PuntodeVenta");
                });

            modelBuilder.Entity("Datos.Models.PuntosVenta", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<decimal>("NumFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("Plus1")
                        .HasColumnType("float");

                    b.Property<double>("Plus2")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PuntosVentas");
                });

            modelBuilder.Entity("Datos.Models.Referenciabancarium", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Cliente")
                        .HasColumnType("bigint");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.ToTable("referenciabancaria");
                });

            modelBuilder.Entity("Datos.Models.Referenciacomercial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cliente")
                        .HasColumnType("bigint");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.ToTable("referenciacomercial");
                });

            modelBuilder.Entity("Datos.Models.RegistroAnulacione", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("cedula_usuario");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal?>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id_factura");

                    b.Property<bool>("Justificacion")
                        .HasColumnType("bit")
                        .HasColumnName("justificacion");

                    b.Property<bool>("Permiso")
                        .HasColumnType("bit");

                    b.ToTable("registro_anulaciones");
                });

            modelBuilder.Entity("Datos.Models.RegistroPermisoAjuste", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("cedula_usuario");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal?>("IdMovimiento")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id_Movimiento");

                    b.ToTable("registro_PermisoAjuste");
                });

            modelBuilder.Entity("Datos.Models.RegistroPermisohabilitar", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("cedula_usuario");

                    b.Property<decimal?>("Codigo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.ToTable("registro_Permisohabilitar");
                });

            modelBuilder.Entity("Datos.Models.ReporteApartado", b =>
                {
                    b.Property<double?>("Abonado")
                        .HasColumnType("float");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdApartado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Apartado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombrecliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Saldo")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.ToView("ReporteApartados");
                });

            modelBuilder.Entity("Datos.Models.ReporteDescuento", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("reporte_descuentos");
                });

            modelBuilder.Entity("Datos.Models.ReporteFacturaVentum", b =>
                {
                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<bool>("Archivada")
                        .HasColumnType("bit");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("Cedula")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<string>("ClaveReenvio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("CodMonedaVenta")
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaVenta");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH");

                    b.Property<string>("ConsecutivoReenvio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("DescuentoD")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaArchivo")
                        .HasColumnType("datetime");

                    b.Property<bool>("Frecuente")
                        .HasColumnType("bit");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdAdelanto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Adelanto");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<decimal>("IdFacturaRemplaza")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_FacturaRemplaza");

                    b.Property<long>("IdVentaDetalle")
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("NumeroEntrega")
                        .HasColumnType("float")
                        .HasColumnName("Numero_Entrega");

                    b.Property<decimal>("NumeroReenvio")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<bool>("Reenviar")
                        .HasColumnType("bit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalD")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("TipoCambioValorCompra")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio_ValorCompra");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioArchivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.ToView("ReporteFacturaVenta");
                });

            modelBuilder.Entity("Datos.Models.ReporteGerencialInventario", b =>
                {
                    b.Property<double>("Actual")
                        .HasColumnType("float");

                    b.Property<int>("CodPresentacion")
                        .HasColumnType("int");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double?>("Mes1")
                        .HasColumnType("float");

                    b.Property<double?>("Mes10")
                        .HasColumnType("float");

                    b.Property<double?>("Mes11")
                        .HasColumnType("float");

                    b.Property<double?>("Mes12")
                        .HasColumnType("float");

                    b.Property<double?>("Mes2")
                        .HasColumnType("float");

                    b.Property<double?>("Mes3")
                        .HasColumnType("float");

                    b.Property<double?>("Mes4")
                        .HasColumnType("float");

                    b.Property<double?>("Mes5")
                        .HasColumnType("float");

                    b.Property<double?>("Mes6")
                        .HasColumnType("float");

                    b.Property<double?>("Mes7")
                        .HasColumnType("float");

                    b.Property<double?>("Mes8")
                        .HasColumnType("float");

                    b.Property<double?>("Mes9")
                        .HasColumnType("float");

                    b.Property<double?>("MesActual")
                        .HasColumnType("float");

                    b.Property<double?>("PrecioVentaPromedio")
                        .HasColumnType("float");

                    b.Property<string>("Presentaciones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Proveedores")
                        .HasMaxLength(283)
                        .IsUnicode(false)
                        .HasColumnType("varchar(283)");

                    b.Property<int>("TotalCostos")
                        .HasColumnType("int");

                    b.Property<int>("TotalVentas")
                        .HasColumnType("int");

                    b.Property<string>("Ubicaciones")
                        .IsRequired()
                        .HasMaxLength(401)
                        .IsUnicode(false)
                        .HasColumnType("varchar(401)");

                    b.ToView("Reporte_Gerencial_Inventarios");
                });

            modelBuilder.Entity("Datos.Models.ReporteInventario", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoInventario")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(309)
                        .IsUnicode(false)
                        .HasColumnType("varchar(309)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("GananciaInventario")
                        .HasColumnType("float");

                    b.Property<double>("Iventa")
                        .HasColumnType("float")
                        .HasColumnName("IVenta");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Maxima")
                        .HasColumnType("float");

                    b.Property<double>("Minima")
                        .HasColumnType("float");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("TcCompra")
                        .HasColumnType("float")
                        .HasColumnName("TC_Compra");

                    b.Property<double>("TcVenta")
                        .HasColumnType("float")
                        .HasColumnName("TC_Venta");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("Utilidad")
                        .HasColumnType("float");

                    b.Property<double>("ValorInventario")
                        .HasColumnType("float");

                    b.ToView("Reporte_Inventarios");
                });

            modelBuilder.Entity("Datos.Models.ReporteInventarioXProveedor", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoInventario")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(309)
                        .IsUnicode(false)
                        .HasColumnType("varchar(309)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<string>("Familia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("GananciaInventario")
                        .HasColumnType("float");

                    b.Property<double>("Iventa")
                        .HasColumnType("float")
                        .HasColumnName("IVenta");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Maxima")
                        .HasColumnType("float");

                    b.Property<double>("Minima")
                        .HasColumnType("float");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("TcCompra")
                        .HasColumnType("float")
                        .HasColumnName("TC_Compra");

                    b.Property<double>("TcVenta")
                        .HasColumnType("float")
                        .HasColumnName("TC_Venta");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("Utilidad")
                        .HasColumnType("float");

                    b.Property<double>("ValorInventario")
                        .HasColumnType("float");

                    b.ToView("Reporte_Inventario_X_Proveedor");
                });

            modelBuilder.Entity("Datos.Models.ReporteMovimientosXFecha", b =>
                {
                    b.Property<double>("DescuentoDev")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_Dev");

                    b.Property<double>("DescuentoVentas")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<double>("ExcentoDev")
                        .HasColumnType("float")
                        .HasColumnName("Excento_Dev");

                    b.Property<double>("ExentoVentas")
                        .HasColumnType("float")
                        .HasColumnName("Exento_Ventas");

                    b.Property<DateTime?>("FechaX")
                        .HasColumnType("datetime");

                    b.Property<double>("GravadaDev")
                        .HasColumnType("float")
                        .HasColumnName("Gravada_Dev");

                    b.Property<double>("GravadaVentas")
                        .HasColumnType("float")
                        .HasColumnName("Gravada_Ventas");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<double>("ImpuestoDev")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_Dev");

                    b.Property<double>("ImpuestoVentas")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<decimal>("NumCaja")
                        .HasColumnType("numeric(19,0)")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoMov")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TotalDev")
                        .HasColumnType("float")
                        .HasColumnName("Total_Dev");

                    b.Property<double>("TotalVentas")
                        .HasColumnType("float")
                        .HasColumnName("Total_Ventas");

                    b.Property<double>("TransporteDev")
                        .HasColumnType("float")
                        .HasColumnName("Transporte_Dev");

                    b.Property<double>("TransporteVentas")
                        .HasColumnType("float")
                        .HasColumnName("Transporte_Ventas");

                    b.ToView("ReporteMovimientos_X_Fecha");
                });

            modelBuilder.Entity("Datos.Models.ReporteVentasD1512016", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("ReporteVentas_D151-2016");
                });

            modelBuilder.Entity("Datos.Models.ResumenPunto", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAbono")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCaja")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCierre")
                        .HasColumnType("bit")
                        .HasColumnName("isCierre");

                    b.Property<bool>("IsDevolucion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmpaque")
                        .HasColumnType("bit")
                        .HasColumnName("isEmpaque");

                    b.Property<bool>("IsPedido")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecibido")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSolicitud")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVenta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsVentaMascota")
                        .HasColumnType("bit")
                        .HasColumnName("isVentaMascota");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<decimal>("NumFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PlusCliente")
                        .HasColumnType("float");

                    b.Property<double>("PlusRotacion")
                        .HasColumnType("float");

                    b.Property<double>("TiempoEmpaque")
                        .HasColumnType("float");

                    b.Property<double>("TiempoPedido")
                        .HasColumnType("float");

                    b.Property<bool>("TiempoRecibido")
                        .HasColumnType("bit");

                    b.Property<double>("Venta")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ResumenPuntos");
                });

            modelBuilder.Entity("Datos.Models.Rifa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulada")
                        .HasColumnType("bit")
                        .HasColumnName("anulada");

                    b.Property<int>("CantMin")
                        .HasColumnType("int")
                        .HasColumnName("cant_min");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("fecha_inicio");

                    b.Property<bool>("Finalizada")
                        .HasColumnType("bit")
                        .HasColumnName("finalizada");

                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSucursal")
                        .HasDefaultValueSql("((7))");

                    b.HasKey("Id");

                    b.ToTable("rifa");
                });

            modelBuilder.Entity("Datos.Models.RifaDetalle", b =>
                {
                    b.Property<decimal>("IdRifaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("IdProveedor")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdRifa")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdRifaDetalle");

                    b.ToTable("Rifa_Detalle");
                });

            modelBuilder.Entity("Datos.Models.SaldoApartado", b =>
                {
                    b.Property<long>("IdApartado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Apartado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cliente");

                    b.Property<double?>("Saldo")
                        .HasColumnType("float");

                    b.ToView("SaldoApartados");
                });

            modelBuilder.Entity("Datos.Models.SeguimientoEmpleadoDevolucione", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<double>("DescuentoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_Devolucion");

                    b.Property<int>("DescuentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("ExcentoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Excento_Devolucion");

                    b.Property<int>("ExcentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Ventas");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<double>("ImpuestoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_Devolucion");

                    b.Property<int>("ImpuestoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<double>("SubtotalGravadoDevolucion")
                        .HasColumnType("float")
                        .HasColumnName("SubtotalGravado_Devolucion");

                    b.Property<int>("SubtotalGravadoVentas")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Ventas");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TotalDevolucion")
                        .HasColumnType("float");

                    b.Property<int>("TotalVenta")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("Seguimiento_Empleado_Devoluciones");
                });

            modelBuilder.Entity("Datos.Models.SeguimientoEmpleadoTransporte", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("DescuentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Devolucion");

                    b.Property<int>("DescuentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ExcentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Devolucion");

                    b.Property<int>("ExcentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Ventas");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("ImpuestoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Devolucion");

                    b.Property<int>("ImpuestoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubtotalGravadoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Devolucion");

                    b.Property<int>("SubtotalGravadoVentas")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Ventas");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TipoFac")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TotalDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("TotalVenta")
                        .HasColumnType("int");

                    b.Property<double>("TransporteVentas")
                        .HasColumnType("float");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("Seguimiento_Empleado_Transporte");
                });

            modelBuilder.Entity("Datos.Models.SeguimientoEmpleadoTransporteDevolucione", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("DescuentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Devolucion");

                    b.Property<int>("DescuentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ExcentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Devolucion");

                    b.Property<int>("ExcentoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Ventas");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("ImpuestoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Devolucion");

                    b.Property<int>("ImpuestoVentas")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("NumDoc")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubtotalGravadoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Devolucion");

                    b.Property<int>("SubtotalGravadoVentas")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Ventas");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("Tipo_Doc");

                    b.Property<string>("TipoFac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TotalDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("TotalVenta")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<double?>("TransporteVentasDevueltas")
                        .HasColumnType("float");

                    b.ToView("Seguimiento_Empleado_Transporte_Devoluciones");
                });

            modelBuilder.Entity("Datos.Models.SeguimientoEmpleadoVenta", b =>
                {
                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<int>("DescuentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Descuento_Devolucion");

                    b.Property<double>("DescuentoVentas")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_Ventas");

                    b.Property<string>("Empleado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ExcentoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Excento_Devolucion");

                    b.Property<double>("ExcentoVentas")
                        .HasColumnType("float")
                        .HasColumnName("Excento_Ventas");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFac")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Fac");

                    b.Property<int>("ImpuestoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("Impuesto_Devolucion");

                    b.Property<double>("ImpuestoVentas")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_Ventas");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("NumDoc")
                        .HasColumnType("float")
                        .HasColumnName("Num_Doc");

                    b.Property<int>("SubtotalGravadoDevolucion")
                        .HasColumnType("int")
                        .HasColumnName("SubtotalGravado_Devolucion");

                    b.Property<double>("SubtotalGravadoVentas")
                        .HasColumnType("float")
                        .HasColumnName("SubtotalGravado_Ventas");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TipoFac")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("TotalDevolucion")
                        .HasColumnType("int");

                    b.Property<double>("TotalVenta")
                        .HasColumnType("float");

                    b.Property<int>("TransporteVentas")
                        .HasColumnType("int");

                    b.Property<int>("TransporteVentasDevueltas")
                        .HasColumnType("int");

                    b.ToView("Seguimiento_Empleado_Ventas");
                });

            modelBuilder.Entity("Datos.Models.Serie", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("codigo");

                    b.Property<decimal>("Factura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("factura");

                    b.Property<string>("Serie1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serie")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Vendido")
                        .HasColumnType("bit")
                        .HasColumnName("vendido");

                    b.HasKey("Id");

                    b.ToTable("Serie");
                });

            modelBuilder.Entity("Datos.Models.SubFamilia", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CodigoFamilia")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("SubCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoFamilia");

                    b.ToTable("SubFamilias");
                });

            modelBuilder.Entity("Datos.Models.SubUbicacion", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodSubUbicacion")
                        .HasColumnType("int")
                        .HasColumnName("Cod_SubUbicacion");

                    b.Property<int>("CodUbicacion")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Ubicacion");

                    b.Property<string>("DescripcionD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Codigo");

                    b.HasIndex("CodUbicacion");

                    b.ToTable("SubUbicacion");
                });

            modelBuilder.Entity("Datos.Models.Sucursale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre Comercial");

                    b.Property<string>("NombreFiscal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre Fiscal");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Numero Documento");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Datos.Models.Temp1", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("CodArticulo")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("CodArticulo1")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CodArticulo");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint");

                    b.Property<string>("DescArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Desc_Articulo");

                    b.Property<bool>("Entrada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.ToView("Temp1");
                });

            modelBuilder.Entity("Datos.Models.TemperaturaCamara", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasDefaultValueSql("('AM')")
                        .IsFixedLength(true);

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("Id_Usuario");

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TemperaturaCamara");
                });

            modelBuilder.Entity("Datos.Models.TipoExoneracion", b =>
                {
                    b.Property<decimal>("IdTipoExoneracion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoExoneracion1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TipoExoneracion");

                    b.HasKey("IdTipoExoneracion");

                    b.ToTable("TipoExoneracion");
                });

            modelBuilder.Entity("Datos.Models.TipoTarjetum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CuentaComision")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("CuentaContable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("CuentaCxc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("CuentaCXC")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("CuentaIv")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("CuentaIV")
                        .HasDefaultValueSql("('--')");

                    b.Property<int>("Moneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("NombreComision")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("NombreCuenta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("NombreCxc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NombreCXC")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("NombreIv")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NombreIV")
                        .HasDefaultValueSql("('--')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('--')");

                    b.Property<double>("PorcentajeComision")
                        .HasColumnType("float");

                    b.Property<double>("PorcentajeRetencion")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TipoTarjeta");
                });

            modelBuilder.Entity("Datos.Models.TiposIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoFe")
                        .HasColumnType("int")
                        .HasColumnName("CodigoFE");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposIdentificacion");
                });

            modelBuilder.Entity("Datos.Models.TokenPermisoNegativo", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuarioSolicita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TokenPermisoNegativo");
                });

            modelBuilder.Entity("Datos.Models.TomaGeneral", b =>
                {
                    b.Property<decimal>("IdToma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ajustado")
                        .HasColumnType("bit");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("NumeroAjuste")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("IdToma");

                    b.ToTable("TomaGeneral");
                });

            modelBuilder.Entity("Datos.Models.TomaGeneralDetalle", b =>
                {
                    b.Property<decimal>("IdTomaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("Contado")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Diferencia")
                        .HasColumnType("float");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<decimal>("IdToma")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Toma")
                        .HasColumnType("float");

                    b.HasKey("IdTomaDetalle");

                    b.HasIndex("IdToma");

                    b.ToTable("TomaGeneralDetalle");
                });

            modelBuilder.Entity("Datos.Models.TomaProveedor", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CodigoProv")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("IdUsuarioCreo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_UsuarioCreo");

                    b.HasKey("Id");

                    b.ToTable("TomaProveedor");
                });

            modelBuilder.Entity("Datos.Models.TomaProveedorDetalle", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripicon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Diferencia")
                        .HasColumnType("float");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<decimal>("IdTomaProveedor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_TomaProveedor");

                    b.Property<double>("Toma")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdTomaProveedor");

                    b.ToTable("TomaProveedorDetalle");
                });

            modelBuilder.Entity("Datos.Models.TrasladoPuntoVentaDetalle", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("IdTrasladoPuntoVenta")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_TrasladoPuntoVenta");

                    b.ToTable("TrasladoPuntoVenta_Detalle");
                });

            modelBuilder.Entity("Datos.Models.TrasladoPuntoVentum", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdPuentoVentaDestino")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_PuentoVentaDestino");

                    b.Property<decimal>("IdPuntoVentaOrigen")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_PuntoVentaOrigen");

                    b.Property<string>("IdUsuarioCreo")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Id_UsuarioCreo");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("TrasladoPuntoVenta");
                });

            modelBuilder.Entity("Datos.Models.Ubicacion", b =>
                {
                    b.Property<decimal>("IdProvincia")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Provincia");

                    b.Property<decimal>("IdCanton")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Canton");

                    b.Property<decimal>("IdDistrito")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Distrito");

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdProvincia", "IdCanton", "IdDistrito")
                        .HasName("PK_Table_1");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("Datos.Models.Ubicacione", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<bool?>("Activa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Codigo");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Datos.Models.UltimoAbonoapartado", b =>
                {
                    b.Property<long>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdAbonoapartado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_abonoapartado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.ToView("UltimoAbonoapartados");
                });

            modelBuilder.Entity("Datos.Models.UltimoRecibo", b =>
                {
                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Recibo");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("UltimoRecibo");
                });

            modelBuilder.Entity("Datos.Models.Unido", b =>
                {
                    b.Property<double?>("Codigo")
                        .HasColumnType("float")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Familia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FAMILIA");

                    b.Property<string>("Ubicación")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UBICACIÓN");

                    b.ToTable("unidos");
                });

            modelBuilder.Entity("Datos.Models.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Id_Usuario");

                    b.Property<bool>("AplicarDesc")
                        .HasColumnType("bit")
                        .HasColumnName("Aplicar_Desc");

                    b.Property<bool>("CambiarPrecio")
                        .HasColumnType("bit");

                    b.Property<string>("ClaveEntrada")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Clave_Entrada");

                    b.Property<string>("ClaveInterna")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Clave_Interna");

                    b.Property<bool>("ExistNegativa")
                        .HasColumnType("bit")
                        .HasColumnName("Exist_Negativa");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("image");

                    b.Property<string>("Iniciales")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<double>("PorcDesc")
                        .HasColumnType("float")
                        .HasColumnName("Porc_Desc");

                    b.Property<double>("PorcPrecio")
                        .HasColumnType("float")
                        .HasColumnName("Porc_Precio");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Datos.Models.ValidaFirmadocontado", b =>
                {
                    b.Property<decimal>("IdValidaFirmadocontado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("ID_VALIDA_FIRMADOCONTADO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Contado")
                        .HasColumnType("bit")
                        .HasColumnName("CONTADO");

                    b.Property<bool>("ExigeNombre")
                        .HasColumnType("bit")
                        .HasColumnName("EXIGE_NOMBRE");

                    b.Property<decimal>("MaximoAutoriza")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("MAXIMO_AUTORIZA");

                    b.Property<decimal>("MaximoCliente")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("MAXIMO_CLIENTE");

                    b.Property<decimal>("MaximoRetira")
                        .HasColumnType("numeric(10,0)")
                        .HasColumnName("MAXIMO_RETIRA");

                    b.Property<decimal>("MontoMaximo")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("MONTO_MAXIMO");

                    b.Property<bool>("Pve")
                        .HasColumnType("bit")
                        .HasColumnName("PVE");

                    b.HasKey("IdValidaFirmadocontado");

                    b.ToTable("VALIDA_FIRMADOCONTADO");
                });

            modelBuilder.Entity("Datos.Models.Variable", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Variable1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Variable");

                    b.HasKey("Id");

                    b.ToTable("Variable");
                });

            modelBuilder.Entity("Datos.Models.Venta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<bool>("Archivada")
                        .HasColumnType("bit");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('000000000')");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ClaveReenvio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ConsecutivoReenvio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("EnProcesoIncobrable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<decimal>("Etapa")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaArchivo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEtapa")
                        .HasColumnType("datetime");

                    b.Property<bool>("Frecuente")
                        .HasColumnType("bit");

                    b.Property<decimal>("IdAdelanto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Adelanto");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("idEmpresa");

                    b.Property<decimal>("IdFacturaRemplaza")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_FacturaRemplaza");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<decimal>("NumeroReenvio")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<bool>("Reenviar")
                        .HasColumnType("bit");

                    b.Property<bool>("Renta")
                        .HasColumnType("bit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('FISICA')");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioArchivo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.HasIndex("CodCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex(new[] { "NumFactura", "Tipo", "NumCaja" }, "IX_Ventas")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Datos.Models.VentasContado", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("VentasContado");
                });

            modelBuilder.Entity("Datos.Models.VentasCredito", b =>
                {
                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("VentasCredito");
                });

            modelBuilder.Entity("Datos.Models.VentasDetalle", b =>
                {
                    b.Property<long>("IdVentaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantBod")
                        .HasColumnType("float");

                    b.Property<double>("CantVet")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("CodMonedaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaVenta")
                        .HasDefaultValueSql("((500))");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("CostoReal")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double?>("Disminuye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Empaquetado")
                        .HasColumnType("bit")
                        .HasColumnName("empaquetado");

                    b.Property<bool?>("Entregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("entregado")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Entregados")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<long?>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_bodega")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<decimal>("IdImpuesto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Impuesto");

                    b.Property<decimal>("IdSerie")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdTipoExoneracion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NotaPantalla")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nota_pantalla")
                        .HasDefaultValueSql("('-')");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("NumeroEntrega")
                        .HasColumnType("float")
                        .HasColumnName("Numero_Entrega");

                    b.Property<double>("PorcentajeCompra")
                        .HasColumnType("float");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double?>("Regalias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("regalias")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambioValorCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio_ValorCompra")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdVentaDetalle");

                    b.HasIndex("Codigo");

                    b.HasIndex("IdFactura");

                    b.ToTable("Ventas_Detalle");
                });

            modelBuilder.Entity("Datos.Models.VentasDetalleLote", b =>
                {
                    b.Property<decimal>("IdVentaDetalleLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id_venta_detalle_lote")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<decimal>("IdLote")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id_lote");

                    b.Property<decimal>("IdVentaDetalle")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id_venta_detalle");

                    b.HasKey("IdVentaDetalleLote");

                    b.ToTable("Ventas_Detalle_Lote");
                });

            modelBuilder.Entity("Datos.Models.VentasFiscale", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double?>("DescuentoDev")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_Dev");

                    b.Property<double?>("DescuentoReal")
                        .HasColumnType("float");

                    b.Property<double?>("ExcentoReal")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double?>("GravadoReal")
                        .HasColumnType("float");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<double?>("ImpuestoDev")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_Dev");

                    b.Property<double?>("ImpuestoReal")
                        .HasColumnType("float");

                    b.Property<double?>("MontoDev")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Dev");

                    b.Property<double?>("MontoReal")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double?>("SubTotalExcentoDev")
                        .HasColumnType("float")
                        .HasColumnName("SubTotalExcento_Dev");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<double?>("SubTotalGravadoDev")
                        .HasColumnType("float")
                        .HasColumnName("SubTotalGravado_Dev");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<double?>("TransporteDev")
                        .HasColumnType("float")
                        .HasColumnName("Transporte_Dev");

                    b.Property<double?>("TransporteReal")
                        .HasColumnType("float");

                    b.ToView("Ventas_Fiscales");
                });

            modelBuilder.Entity("Datos.Models.VentasRangoFactura", b =>
                {
                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<double?>("ManoObra")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("VentasRangoFacturas");
                });

            modelBuilder.Entity("Datos.Models.VentasTaller", b =>
                {
                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<double?>("ManoObra")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double?>("Repuestos")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("Ventas_Taller");
                });

            modelBuilder.Entity("Datos.Models.VentasUnificada", b =>
                {
                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)")
                        .HasColumnName("LOCALIDAD");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("VENTAS_UNIFICADAS");
                });

            modelBuilder.Entity("Datos.Models.View1", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SubFamilia2")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToView("VIEW1");
                });

            modelBuilder.Entity("Datos.Models.ViewAbonosIncobrable", b =>
                {
                    b.Property<double>("Abono")
                        .HasColumnType("float");

                    b.Property<string>("Db")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("db");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaRecibo")
                        .HasColumnType("datetime");

                    b.Property<double>("Intereses")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Recibo");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<double>("SaldoAnt")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Ant");

                    b.ToView("viewAbonosIncobrables");
                });

            modelBuilder.Entity("Datos.Models.ViewAdelantosAutorizado", b =>
                {
                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.ToView("viewAdelantosAutorizados");
                });

            modelBuilder.Entity("Datos.Models.ViewApartadosActivo", b =>
                {
                    b.Property<long>("Apartado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double?>("Saldo")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("viewApartadosActivos");
                });

            modelBuilder.Entity("Datos.Models.ViewArea", b =>
                {
                    b.Property<string>("Articulo")
                        .HasMaxLength(340)
                        .HasColumnType("nvarchar(340)");

                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<decimal>("IdArea")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToView("viewAreas");
                });

            modelBuilder.Entity("Datos.Models.ViewAreasEncargado", b =>
                {
                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("IdArea")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewAreasEncargados");
                });

            modelBuilder.Entity("Datos.Models.ViewArticulosCaby", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BienoServicio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("Codcabys")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CODCABYS");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewArticulosCabys");
                });

            modelBuilder.Entity("Datos.Models.ViewArticulosDescuento", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Factura")
                        .HasMaxLength(38)
                        .IsUnicode(false)
                        .HasColumnType("varchar(38)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.ToView("viewArticulosDescuentos");
                });

            modelBuilder.Entity("Datos.Models.ViewArticulosPromocion", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaLimite")
                        .HasColumnType("smalldatetime");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioPromo")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Promo");

                    b.ToView("viewArticulosPromocion");
                });

            modelBuilder.Entity("Datos.Models.ViewAutorizacionAdelantosPendiente", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cajero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CedulaRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cedula_Retira");

                    b.Property<bool>("Facturado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdAdelanto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Adelanto");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<string>("NombreRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Retira");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.ToView("viewAutorizacionAdelantosPendientes");
                });

            modelBuilder.Entity("Datos.Models.ViewAutorizacionFacturasPendiente", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Cajero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Cancelada")
                        .HasColumnType("bit");

                    b.Property<string>("CedulaRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cedula_Retira");

                    b.Property<bool>("Express")
                        .HasColumnType("bit")
                        .HasColumnName("express");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdAdmin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_Admin");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<string>("NombreRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Retira");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("PuntoVenta")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("TelefonoRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Telefono_Retira");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.ToView("viewAutorizacionFacturasPendientes");
                });

            modelBuilder.Entity("Datos.Models.ViewCajasBloqueada", b =>
                {
                    b.Property<bool?>("Bloqueada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("Napertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NApertura")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.ToView("viewCajasBloqueadas");
                });

            modelBuilder.Entity("Datos.Models.ViewCambiosInventario", b =>
                {
                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<double>("CantidadEntregado")
                        .HasColumnType("float");

                    b.Property<double>("CantidadFacturado")
                        .HasColumnType("float");

                    b.Property<string>("CodArticuloE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_ArticuloE");

                    b.Property<string>("CodArticulof")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulof");

                    b.Property<long>("CodigoE")
                        .HasColumnType("bigint");

                    b.Property<long>("CodigoF")
                        .HasColumnType("bigint");

                    b.Property<string>("DescripcionE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcionf")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Diferencia")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewCambiosInventario");
                });

            modelBuilder.Entity("Datos.Models.ViewCartaExoneracion", b =>
                {
                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("IdTipoExoneracion")
                        .HasColumnType("int");

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("PorcentajeCompra")
                        .HasColumnType("float");

                    b.Property<string>("TipoExoneracion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.ToView("viewCartaExoneracion");
                });

            modelBuilder.Entity("Datos.Models.ViewComprasDevolucionesAnuale", b =>
                {
                    b.Property<int?>("Annio")
                        .HasColumnType("int");

                    b.Property<double?>("Compra")
                        .HasColumnType("float");

                    b.Property<double?>("Devolucion")
                        .HasColumnType("float");

                    b.ToView("viewComprasDevolucionesAnuales");
                });

            modelBuilder.Entity("Datos.Models.ViewControlLote", b =>
                {
                    b.Property<double>("Actual")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(339)
                        .HasColumnType("nvarchar(339)");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int")
                        .HasColumnName("Id_Bodega");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.ToView("viewControlLote");
                });

            modelBuilder.Entity("Datos.Models.ViewCostoArticulo", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(308)
                        .HasColumnType("nvarchar(308)");

                    b.ToView("viewCostoArticulo");
                });

            modelBuilder.Entity("Datos.Models.ViewDepositosCaja", b =>
                {
                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cuenta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdApertura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewDepositosCaja");
                });

            modelBuilder.Entity("Datos.Models.ViewDescuento", b =>
                {
                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<string>("ContactoConfirmo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdDescuento")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdProveedor")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.ToView("viewDescuentos");
                });

            modelBuilder.Entity("Datos.Models.ViewDevolucione", b =>
                {
                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double?>("Monto")
                        .HasColumnType("float");

                    b.ToView("viewDevoluciones");
                });

            modelBuilder.Entity("Datos.Models.ViewDevolucionesDetallada", b =>
                {
                    b.Property<decimal>("CajaDevolucion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<double>("MontoFactura")
                        .HasColumnType("float");

                    b.Property<double>("MontoReintegro")
                        .HasColumnType("float");

                    b.Property<string>("NotasDevolucion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("NumeroFactura")
                        .HasColumnType("float");

                    b.Property<string>("TipoFactura")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("UsuarioDevolvio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioFacturo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioRecibio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToView("viewDevolucionesDetalladas");
                });

            modelBuilder.Entity("Datos.Models.ViewDiasContadoFirmado", b =>
                {
                    b.Property<int?>("Dias")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<string>("NombreRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Retira");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("TelefonoRetira")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Telefono_Retira");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.ToView("viewDiasContadoFirmado");
                });

            modelBuilder.Entity("Datos.Models.ViewEmpresasInterna", b =>
                {
                    b.Property<string>("Abierto")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("abierto")
                        .IsFixedLength(true);

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<string>("Agente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula");

                    b.Property<bool>("ClienteMoroso")
                        .HasColumnType("bit")
                        .HasColumnName("Cliente_Moroso");

                    b.Property<int>("CodMonedaCredito")
                        .HasColumnType("int");

                    b.Property<string>("CorreoComprobante")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("descuento");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("e_mail");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("empresa")
                        .IsFixedLength(true);

                    b.Property<string>("Fax01")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_01");

                    b.Property<string>("Fax02")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_02");

                    b.Property<decimal>("IdTipoExoneracion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint")
                        .HasColumnName("identificacion");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float")
                        .HasColumnName("impuesto");

                    b.Property<double>("MaxCredito")
                        .HasColumnType("float")
                        .HasColumnName("max_credito");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Nombreusuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreusuario");

                    b.Property<bool?>("Notificar")
                        .HasColumnType("bit")
                        .HasColumnName("notificar");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observaciones");

                    b.Property<bool>("OrdenCompra")
                        .HasColumnType("bit");

                    b.Property<int>("PlazoCredito")
                        .HasColumnType("int")
                        .HasColumnName("Plazo_credito");

                    b.Property<bool>("PrecioSugerido")
                        .HasColumnType("bit");

                    b.Property<string>("Sinrestriccion")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("sinrestriccion")
                        .IsFixedLength(true);

                    b.Property<string>("Telefono01")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Telefono_01");

                    b.Property<string>("Telefono02")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("telefono_02");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo_cedula");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Tipoprecio")
                        .HasColumnType("smallint")
                        .HasColumnName("tipoprecio");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.ToView("viewEmpresasInternas");
                });

            modelBuilder.Entity("Datos.Models.ViewEstadoCotizacion", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cod_Cliente");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int");

                    b.Property<bool?>("Confirmada")
                        .HasColumnType("bit")
                        .HasColumnName("confirmada");

                    b.Property<string>("ConfirmadaPor")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("confirmada_por");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Contado")
                        .HasColumnType("bit");

                    b.Property<long>("Cotizacion")
                        .HasColumnType("bigint");

                    b.Property<bool>("Credito")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<string>("EstadoActual")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoFactura")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumeroFactura")
                        .HasColumnType("float");

                    b.Property<string>("ObservacionEstado")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("PagoImpuesto")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TiempoEntrega")
                        .HasColumnType("int");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<int>("Validez")
                        .HasColumnType("int");

                    b.Property<bool>("Venta")
                        .HasColumnType("bit");

                    b.ToView("viewEstadoCotizacion");
                });

            modelBuilder.Entity("Datos.Models.ViewFactura", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoMh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<int>("Reenviar")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.ToView("viewFacturas");
                });

            modelBuilder.Entity("Datos.Models.ViewFacturaCredito", b =>
                {
                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("Cedula")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("EnProcesoIncobrable")
                        .HasColumnType("bit");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("IdAdelanto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Adelanto");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.ToView("viewFacturaCredito");
                });

            modelBuilder.Entity("Datos.Models.ViewFacturasArchivada", b =>
                {
                    b.Property<bool>("Archivada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaArchivo")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioArchivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UsuarioCreo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewFacturasArchivadas");
                });

            modelBuilder.Entity("Datos.Models.ViewFacturasAutorizada", b =>
                {
                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.ToView("viewFacturasAutorizadas");
                });

            modelBuilder.Entity("Datos.Models.ViewFacturasPendientesPagada", b =>
                {
                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdApertura")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdFactura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("viewFacturasPendientesPagadas");
                });

            modelBuilder.Entity("Datos.Models.ViewFacturasRepetida", b =>
                {
                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<int?>("Registro")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("viewFacturasRepetidas");
                });

            modelBuilder.Entity("Datos.Models.ViewImpresoGeneralLote", b =>
                {
                    b.Property<double>("Actual")
                        .HasColumnType("float");

                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool?>("Imprimir")
                        .HasColumnType("bit");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(81)
                        .HasColumnType("nvarchar(81)");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.ToView("viewImpresoGeneralLote");
                });

            modelBuilder.Entity("Datos.Models.ViewImpuesto", b =>
                {
                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Tarifa");

                    b.Property<decimal>("IdImpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Impuesto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Impuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("viewImpuestos");
                });

            modelBuilder.Entity("Datos.Models.ViewListaMag", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(340)
                        .HasColumnType("nvarchar(340)");

                    b.Property<double>("Iventa")
                        .HasColumnType("float")
                        .HasColumnName("IVenta");

                    b.ToView("viewListaMAG");
                });

            modelBuilder.Entity("Datos.Models.ViewMensajeReceptor", b =>
                {
                    b.Property<string>("CedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("NombreEmisor")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("viewMensajeReceptor");
                });

            modelBuilder.Entity("Datos.Models.ViewMovimientoSerie", b =>
                {
                    b.Property<decimal>("Boleta")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdSerie")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serie");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewMovimientoSerie");
                });

            modelBuilder.Entity("Datos.Models.ViewPedidosBodega", b =>
                {
                    b.Property<double>("CantidadPedido")
                        .HasColumnType("float");

                    b.Property<double>("CantidadSolicitud")
                        .HasColumnType("float");

                    b.Property<string>("CasaComercial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaPedido")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IdPedido")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Proveedor")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UsuarioSolicito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewPedidosBodega");
                });

            modelBuilder.Entity("Datos.Models.ViewPreTomaProveedor", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CodigoProv")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuarioCreo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_UsuarioCreo");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Usado")
                        .HasColumnType("bit");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewPreTomaProveedor");
                });

            modelBuilder.Entity("Datos.Models.ViewPrestamo", b =>
                {
                    b.Property<string>("Boleta")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("boleta")
                        .IsFixedLength(true);

                    b.Property<string>("BoletaProveedor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<long>("Destinatario")
                        .HasColumnType("bigint")
                        .HasColumnName("destinatario");

                    b.Property<long>("Destino")
                        .HasColumnType("bigint")
                        .HasColumnName("destino");

                    b.Property<double>("Devuelto")
                        .HasColumnType("float")
                        .HasColumnName("devuelto");

                    b.Property<double>("Entra")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("NombreDestinatario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_destinatario");

                    b.Property<string>("NombreDestino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_destino");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("precio");

                    b.Property<double>("Salida")
                        .HasColumnType("float");

                    b.ToView("viewPrestamos");
                });

            modelBuilder.Entity("Datos.Models.ViewPreventasActiva", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<double>("Ficha")
                        .HasColumnType("float");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewPreventasActivas");
                });

            modelBuilder.Entity("Datos.Models.ViewProductosPunto", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Puntos")
                        .HasColumnType("float");

                    b.ToView("viewProductosPuntos");
                });

            modelBuilder.Entity("Datos.Models.ViewRecibosContadoFirmado", b =>
                {
                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Recibo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("viewRecibosContadoFirmado");
                });

            modelBuilder.Entity("Datos.Models.ViewReporteDevolucione", b =>
                {
                    b.Property<double>("CantBod")
                        .HasColumnType("float");

                    b.Property<double>("CantVet")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<double>("MontoFactura")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("viewReporteDevoluciones");
                });

            modelBuilder.Entity("Datos.Models.ViewSaldosCero", b =>
                {
                    b.Property<long>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Compra")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Saldo")
                        .HasColumnType("float");

                    b.ToView("viewSaldosCero");
                });

            modelBuilder.Entity("Datos.Models.ViewSeriesDisponible", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Series")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToView("viewSeriesDisponibles");
                });

            modelBuilder.Entity("Datos.Models.ViewSeriesVendida", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("id");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serie");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Vendedor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewSeriesVendidas");
                });

            modelBuilder.Entity("Datos.Models.ViewSubtotalDetalle", b =>
                {
                    b.Property<double?>("Descuento")
                        .HasColumnType("float");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double?>("SubTotal")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalDetalle");
                });

            modelBuilder.Entity("Datos.Models.ViewSubtotalesDevolucione", b =>
                {
                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalesDevoluciones");
                });

            modelBuilder.Entity("Datos.Models.ViewSubtotalesDevoluciones43", b =>
                {
                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalesDevoluciones43");
                });

            modelBuilder.Entity("Datos.Models.ViewSubtotalesFactura", b =>
                {
                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalesFactura");
                });

            modelBuilder.Entity("Datos.Models.ViewSubtotalesFactura43", b =>
                {
                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalesFactura43");
                });

            modelBuilder.Entity("Datos.Models.ViewTemp", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoMh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<int>("Reenviar")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.ToView("viewTemp");
                });

            modelBuilder.Entity("Datos.Models.ViewTemperaturaCamara", b =>
                {
                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("Id_Usuario");

                    b.Property<string>("Temperatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewTemperaturaCamara");
                });

            modelBuilder.Entity("Datos.Models.ViewTokenSolicitado", b =>
                {
                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuarioSolicita")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsuarioSolicita")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewTokenSolicitados");
                });

            modelBuilder.Entity("Datos.Models.ViewTomaGeneral", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Contado")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Diferencia")
                        .HasColumnType("float");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<string>("SubUbicacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Toma")
                        .HasColumnType("int");

                    b.ToView("viewTomaGeneral");
                });

            modelBuilder.Entity("Datos.Models.ViewTomaProveedor", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CodigoProv")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("IdUsuarioCreo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id_UsuarioCreo");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewTomaProveedor");
                });

            modelBuilder.Entity("Datos.Models.ViewTrasladoPuntoVentum", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("viewTrasladoPuntoVenta");
                });

            modelBuilder.Entity("Datos.Models.ViewUltimaCompra", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UltimaFecha")
                        .HasColumnType("datetime");

                    b.ToView("viewUltimaCompra");
                });

            modelBuilder.Entity("Datos.Models.ViewUtilidadArticulo", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(308)
                        .HasColumnType("nvarchar(308)");

                    b.Property<double?>("Utilidad")
                        .HasColumnType("float");

                    b.ToView("viewUtilidadArticulo");
                });

            modelBuilder.Entity("Datos.Models.ViewVentasAgente", b =>
                {
                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("Cedula")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("IdAdelanto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Adelanto");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.ToView("viewVentasAgente");
                });

            modelBuilder.Entity("Datos.Models.ViewVentasDevolucionesAnuale", b =>
                {
                    b.Property<int?>("Annio")
                        .HasColumnType("int");

                    b.Property<double?>("Devolucion")
                        .HasColumnType("float");

                    b.Property<double?>("Venta")
                        .HasColumnType("float");

                    b.ToView("viewVentasDevolucionesAnuales");
                });

            modelBuilder.Entity("Datos.Models.ViewVentasHora", b =>
                {
                    b.Property<DateTime?>("Dia")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Hora")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("NumeroDia")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("viewVentasHora");
                });

            modelBuilder.Entity("Datos.Models.ViewVentasHuber", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.ToView("viewVentasHuber");
                });

            modelBuilder.Entity("Datos.Models.ViewVentasUnida", b =>
                {
                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula");

                    b.Property<string>("CorreoComprobante")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("CorreoRecibo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("e_mail");

                    b.Property<decimal>("Etapa")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEtapa")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Pv")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("PV");

                    b.Property<double?>("Saldo")
                        .HasColumnType("float");

                    b.Property<string>("Telefono01")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Telefono_01");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.ToView("viewVentasUnidas");
                });

            modelBuilder.Entity("Datos.Models.VistaAbono", b =>
                {
                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdRecibo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Recibo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<int?>("NumCaja")
                        .HasColumnType("int")
                        .HasColumnName("Num_Caja");

                    b.Property<long>("NumRecibo")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Recibo");

                    b.Property<double>("SaldoActual")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Actual");

                    b.Property<double>("SaldoCuenta")
                        .HasColumnType("float")
                        .HasColumnName("Saldo_Cuenta");

                    b.ToView("vista_abonos");
                });

            modelBuilder.Entity("Datos.Models.VistaAnulado", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("vista_anulados");
                });

            modelBuilder.Entity("Datos.Models.VistaArmamento", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Armamento")
                        .HasColumnType("bit")
                        .HasColumnName("armamento");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_armamento");
                });

            modelBuilder.Entity("Datos.Models.VistaCajerosDisponiblesAbrirCaja", b =>
                {
                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("Vista_Cajeros_Disponibles_Abrir_Caja");
                });

            modelBuilder.Entity("Datos.Models.VistaCodigoBarraDuplicado", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(309)
                        .IsUnicode(false)
                        .HasColumnType("varchar(309)");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("Vista_Codigo_Barra_Duplicado");
                });

            modelBuilder.Entity("Datos.Models.VistaComprasCredito", b =>
                {
                    b.Property<double>("Asiento")
                        .HasColumnType("float");

                    b.Property<double>("AsientoInve")
                        .HasColumnType("float");

                    b.Property<double>("CambioImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("ClaveDgt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ClaveDGT");

                    b.Property<int>("CodMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaCompra");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CodigoProv")
                        .HasColumnType("int");

                    b.Property<bool>("Compra")
                        .HasColumnType("bit");

                    b.Property<string>("ConsecutivoDgt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ConsecutivoDGT");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<bool>("ContaInve")
                        .HasColumnType("bit");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<bool>("EnviadoDgt")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoDGT");

                    b.Property<string>("EstadoDgt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoDGT");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<bool>("Fec")
                        .HasColumnType("bit")
                        .HasColumnName("FEC");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<bool>("Gasto")
                        .HasColumnType("bit");

                    b.Property<long>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Compra")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MotivoGasto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("NumOrden")
                        .HasColumnType("float")
                        .HasColumnName("num_orden");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoCompra")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength(true);

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.ToView("Vista_Compras_Credito");
                });

            modelBuilder.Entity("Datos.Models.VistaEntrega", b =>
                {
                    b.Property<string>("Barras")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Barras2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras2");

                    b.Property<string>("Barras3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras3");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<decimal>("IdFactura1")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("IdFactura");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.ToView("vista_entrega");
                });

            modelBuilder.Entity("Datos.Models.VistaFactura", b =>
                {
                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumCaja")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_facturas");
                });

            modelBuilder.Entity("Datos.Models.VistaGeneradorBarra", b =>
                {
                    b.Property<long?>("CodArticulo")
                        .HasColumnType("bigint");

                    b.Property<string>("CodBarrasArticulo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("CodConsFam")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoSubFam")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("CodigoSubFamilia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToView("Vista_Generador_Barras");
                });

            modelBuilder.Entity("Datos.Models.VistaInventarioCostoReal", b =>
                {
                    b.Property<double>("CantidadComprada")
                        .HasColumnType("float")
                        .HasColumnName("cantidad_comprada");

                    b.Property<double?>("CantidadDescarga")
                        .HasColumnType("float");

                    b.Property<double>("CantidadPresentOtro")
                        .HasColumnType("float");

                    b.Property<double>("CantidadVendida")
                        .HasColumnType("float")
                        .HasColumnName("cantidad_vendida");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<int>("CodPresentOtro")
                        .HasColumnType("int")
                        .HasColumnName("Cod_PresentOtro");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoDescarga")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("CostoReal")
                        .HasColumnType("float")
                        .HasColumnName("costo_real");

                    b.Property<double>("DescargaDeOtro")
                        .HasColumnType("float")
                        .HasColumnName("Descarga_de_otro");

                    b.Property<bool?>("DescargaOtro")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float");

                    b.Property<double>("PresentaCant")
                        .HasColumnType("float");

                    b.ToView("vista_inventario_costo_real");
                });

            modelBuilder.Entity("Datos.Models.VistaKardexMovimiento", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("Dias")
                        .HasColumnType("int")
                        .HasColumnName("dias");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.ToView("vista_kardex_movimientos");
                });

            modelBuilder.Entity("Datos.Models.VistaOrdenCAutoXProveedor", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<int>("CodigoUbicacion")
                        .HasColumnType("int")
                        .HasColumnName("Codigo_Ubicacion");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoUnitario")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("ExistActual")
                        .HasColumnType("float")
                        .HasColumnName("Exist_Actual");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("MonedaCosto")
                        .HasColumnType("int");

                    b.Property<double>("PorcImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Porc_Impuesto");

                    b.Property<int?>("Proveedor")
                        .HasColumnType("int");

                    b.Property<string>("SubUbicacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("Vendidos")
                        .HasColumnType("float");

                    b.ToView("Vista_OrdenC_Auto_X_Proveedor");
                });

            modelBuilder.Entity("Datos.Models.VistaPecesCompra", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Compra");

                    b.Property<long>("IdCompra1")
                        .HasColumnType("bigint")
                        .HasColumnName("IdCompra");

                    b.Property<double>("NuevoCostoBase")
                        .HasColumnType("float");

                    b.Property<bool?>("Peces")
                        .HasColumnType("bit")
                        .HasColumnName("peces");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("vista_peces_compra");
                });

            modelBuilder.Entity("Datos.Models.VistaPrestamosInventario", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit")
                        .HasColumnName("anulado");

                    b.Property<string>("Boleta")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("boleta")
                        .IsFixedLength(true);

                    b.Property<string>("BoletaProveedor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<double>("Cantidad")
                        .HasColumnType("float")
                        .HasColumnName("cantidad");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descripcion");

                    b.Property<long>("Destinatario")
                        .HasColumnType("bigint")
                        .HasColumnName("destinatario");

                    b.Property<long>("Destino")
                        .HasColumnType("bigint")
                        .HasColumnName("destino");

                    b.Property<double>("Devuelto")
                        .HasColumnType("float")
                        .HasColumnName("devuelto");

                    b.Property<bool>("Entrada")
                        .HasColumnType("bit");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit")
                        .HasColumnName("entregado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    b.Property<string>("NombreDestinatario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_destinatario");

                    b.Property<string>("NombreDestino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_destino");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<bool>("Salida")
                        .HasColumnType("bit");

                    b.ToView("vista_prestamos_inventario");
                });

            modelBuilder.Entity("Datos.Models.VistaProductosCotizadosXCliente", b =>
                {
                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CodCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Cod_Cliente");

                    b.Property<long>("Cotizacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.ToView("vista_productos_cotizados_x_cliente");
                });

            modelBuilder.Entity("Datos.Models.VistaProductosOrganico", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<bool?>("ProductosOrganicos")
                        .HasColumnType("bit")
                        .HasColumnName("productos_organicos");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_productos_organicos");
                });

            modelBuilder.Entity("Datos.Models.VistaQuimico", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<bool?>("Tienda")
                        .HasColumnType("bit")
                        .HasColumnName("tienda");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_quimicos");
                });

            modelBuilder.Entity("Datos.Models.VistaReporteInventarioGrafico", b =>
                {
                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_reporte_inventario_grafico");
                });

            modelBuilder.Entity("Datos.Models.VistaTiendum", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<bool?>("Tienda")
                        .HasColumnType("bit")
                        .HasColumnName("tienda");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_tienda");
                });

            modelBuilder.Entity("Datos.Models.VistaVentaDetalle", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.ToView("vista_venta_detalle");
                });

            modelBuilder.Entity("Datos.Models.VistaVentaMaquinarium", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<bool?>("Maquinaria")
                        .HasColumnType("bit")
                        .HasColumnName("maquinaria");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_venta_maquinaria");
                });

            modelBuilder.Entity("Datos.Models.VistaVentasClinica", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<bool?>("Clinica")
                        .HasColumnType("bit")
                        .HasColumnName("clinica");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("Vista_Ventas_clinica");
                });

            modelBuilder.Entity("Datos.Models.VistaVentasMascota", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<bool?>("Mascotas")
                        .HasColumnType("bit")
                        .HasColumnName("mascotas");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_ventas_mascotas");
                });

            modelBuilder.Entity("Datos.Models.VistaVentasPece", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<bool?>("Peces")
                        .HasColumnType("bit")
                        .HasColumnName("peces");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_ventas_peces");
                });

            modelBuilder.Entity("Datos.Models.VistaVentasTaller", b =>
                {
                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<bool?>("Taller")
                        .HasColumnType("bit")
                        .HasColumnName("taller");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.ToView("vista_ventas_taller");
                });

            modelBuilder.Entity("Datos.Models.Vistasiningresar", b =>
                {
                    b.Property<int>("BodegaId")
                        .HasColumnType("int")
                        .HasColumnName("bodega_id");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<long>("IdArticuloComprados")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_ArticuloComprados");

                    b.ToView("VISTASININGRESAR");
                });

            modelBuilder.Entity("Datos.Models.VwRegistroAjustesInventario", b =>
                {
                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Anula")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToView("Vw_Registro_AjustesInventario");
                });

            modelBuilder.Entity("Datos.Models.VwReporteLote", b =>
                {
                    b.Property<double>("CantInicial")
                        .HasColumnType("float")
                        .HasColumnName("Cant_Inicial");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo");

                    b.Property<long>("CodInterno")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Interno");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(341)
                        .IsUnicode(false)
                        .HasColumnType("varchar(341)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Vencimiento")
                        .HasColumnType("datetime");

                    b.ToView("Vw_Reporte_Lote");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Datos.Models.AbonoApartadosdetalle", b =>
                {
                    b.HasOne("Datos.Models.Apartado", "ApartadoNavigation")
                        .WithMany("AbonoApartadosdetalles")
                        .HasForeignKey("Apartado")
                        .HasConstraintName("FK_Abono_apartadosdetalle_Apartados")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Datos.Models.AbonoApartado", "IdAbonoapartadoNavigation")
                        .WithMany("AbonoApartadosdetalles")
                        .HasForeignKey("IdAbonoapartado")
                        .HasConstraintName("FK_Abono_apartadosdetalle_Abono_Apartados")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApartadoNavigation");

                    b.Navigation("IdAbonoapartadoNavigation");
                });

            modelBuilder.Entity("Datos.Models.Abonocpagar", b =>
                {
                    b.HasOne("Datos.Models.Proveedore", "CodProveedorNavigation")
                        .WithMany("Abonocpagars")
                        .HasForeignKey("CodProveedor")
                        .HasConstraintName("FK_abonocpagar_Proveedores")
                        .IsRequired();

                    b.Navigation("CodProveedorNavigation");
                });

            modelBuilder.Entity("Datos.Models.AjusteInventario", b =>
                {
                    b.HasOne("Datos.Models.Sucursale", "IdSucursalNavigation")
                        .WithMany("AjusteInventarios")
                        .HasForeignKey("IdSucursal")
                        .HasConstraintName("FK_AjusteInventario_Sucursales")
                        .IsRequired();

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("Datos.Models.AjusteInventarioDetalle", b =>
                {
                    b.HasOne("Datos.Models.Inventario", "CodArticuloNavigation")
                        .WithMany("AjusteInventarioDetalles")
                        .HasForeignKey("CodArticulo")
                        .HasConstraintName("FK_AjusteInventario_Detalle_Inventario")
                        .IsRequired();

                    b.HasOne("Datos.Models.AjusteInventario", "ConsAjusteNavigation")
                        .WithMany("AjusteInventarioDetalles")
                        .HasForeignKey("ConsAjuste")
                        .HasConstraintName("FK_AjusteInventario_Detalle_AjusteInventario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodArticuloNavigation");

                    b.Navigation("ConsAjusteNavigation");
                });

            modelBuilder.Entity("Datos.Models.Ajustescpagar", b =>
                {
                    b.HasOne("Datos.Models.Proveedore", "CodProveedorNavigation")
                        .WithMany("Ajustescpagars")
                        .HasForeignKey("CodProveedor")
                        .HasConstraintName("FK_Ajustescpagar_Proveedores");

                    b.Navigation("CodProveedorNavigation");
                });

            modelBuilder.Entity("Datos.Models.ApartadoDetalle", b =>
                {
                    b.HasOne("Datos.Models.Apartado", "IdApartadoNavigation")
                        .WithMany("ApartadoDetalles")
                        .HasForeignKey("IdApartado")
                        .HasConstraintName("FK_Apartado_detalle_Apartados")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdApartadoNavigation");
                });

            modelBuilder.Entity("Datos.Models.AperturaDenominacione", b =>
                {
                    b.HasOne("Datos.Models.Aperturacaja", "IdAperturaNavigation")
                        .WithMany("AperturaDenominaciones")
                        .HasForeignKey("IdApertura")
                        .HasConstraintName("FK_Apertura_Denominaciones_aperturacaja")
                        .IsRequired();

                    b.Navigation("IdAperturaNavigation");
                });

            modelBuilder.Entity("Datos.Models.AperturaTotalTope", b =>
                {
                    b.HasOne("Datos.Models.Aperturacaja", "NaperturaNavigation")
                        .WithMany("AperturaTotalTopes")
                        .HasForeignKey("Napertura")
                        .HasConstraintName("FK_Apertura_Total_Tope_aperturacaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NaperturaNavigation");
                });

            modelBuilder.Entity("Datos.Models.AreaArticulo", b =>
                {
                    b.HasOne("Datos.Models.Area", "IdAreaNavigation")
                        .WithMany("AreaArticulos")
                        .HasForeignKey("IdArea")
                        .HasConstraintName("FK_AreaArticulo_Area")
                        .IsRequired();

                    b.Navigation("IdAreaNavigation");
                });

            modelBuilder.Entity("Datos.Models.AreaEncargado", b =>
                {
                    b.HasOne("Datos.Models.Area", "IdAreaNavigation")
                        .WithMany("AreaEncargados")
                        .HasForeignKey("IdArea")
                        .HasConstraintName("FK_AreaEncargado_Area")
                        .IsRequired();

                    b.Navigation("IdAreaNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArqueoDeposito", b =>
                {
                    b.HasOne("Datos.Models.ArqueoCaja", "IdArqueoNavigation")
                        .WithMany("ArqueoDepositos")
                        .HasForeignKey("IdArqueo")
                        .HasConstraintName("FK_ArqueoDeposito_ArqueoDeposito")
                        .IsRequired();

                    b.Navigation("IdArqueoNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArqueoEfectivo", b =>
                {
                    b.HasOne("Datos.Models.ArqueoCaja", "IdArqueoNavigation")
                        .WithMany("ArqueoEfectivos")
                        .HasForeignKey("IdArqueo")
                        .HasConstraintName("FK_ArqueoEfectivo_ArqueoCajas")
                        .IsRequired();

                    b.Navigation("IdArqueoNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArqueoTarjetum", b =>
                {
                    b.HasOne("Datos.Models.ArqueoCaja", "IdArqueoNavigation")
                        .WithMany("ArqueoTarjeta")
                        .HasForeignKey("IdArqueo")
                        .HasConstraintName("FK_ArqueoTarjeta_ArqueoCajas")
                        .IsRequired();

                    b.Navigation("IdArqueoNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArticulosComprado", b =>
                {
                    b.HasOne("Datos.Models.Inventario", "CodigoNavigation")
                        .WithMany("ArticulosComprados")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_articulos_comprados_Inventario")
                        .IsRequired();

                    b.HasOne("Datos.Models.Compra", "IdCompraNavigation")
                        .WithMany("ArticulosComprados")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_articulos_comprados_compras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("IdCompraNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArticulosComprasDevuelto", b =>
                {
                    b.HasOne("Datos.Models.DevolucionesCompra", "DevolucionNavigation")
                        .WithMany("ArticulosComprasDevueltos")
                        .HasForeignKey("Devolucion")
                        .HasConstraintName("FK_articulos_Compras_devueltos_devoluciones_Compras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DevolucionNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArticulosGasto", b =>
                {
                    b.HasOne("Datos.Models.Compra", "IdCompraNavigation")
                        .WithMany("ArticulosGastos")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_Articulos_Gastos_compras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCompraNavigation");
                });

            modelBuilder.Entity("Datos.Models.ArticulosVentasDevuelto", b =>
                {
                    b.HasOne("Datos.Models.Inventario", "CodigoNavigation")
                        .WithMany("ArticulosVentasDevueltos")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_articulos_ventas_devueltos_Inventario")
                        .IsRequired();

                    b.HasOne("Datos.Models.DevolucionesVenta", "DevolucionNavigation")
                        .WithMany("ArticulosVentasDevueltos")
                        .HasForeignKey("Devolucion")
                        .HasConstraintName("FK_articulos_ventas_devueltos_devoluciones_ventas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("DevolucionNavigation");
                });

            modelBuilder.Entity("Datos.Models.CierreCajaDetMon", b =>
                {
                    b.HasOne("Datos.Models.Cierrecaja", "IdCierreCajaNavigation")
                        .WithMany("CierreCajaDetMons")
                        .HasForeignKey("IdCierreCaja")
                        .HasConstraintName("FK_CierreCaja_DetMon_cierrecaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCierreCajaNavigation");
                });

            modelBuilder.Entity("Datos.Models.CierreCajaDetTarj", b =>
                {
                    b.HasOne("Datos.Models.Cierrecaja", "IdCierreCajaNavigation")
                        .WithMany("CierreCajaDetTarjs")
                        .HasForeignKey("IdCierreCaja")
                        .HasConstraintName("FK_CierreCaja_DetTarj_cierrecaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCierreCajaNavigation");
                });

            modelBuilder.Entity("Datos.Models.Compra", b =>
                {
                    b.HasOne("Datos.Models.Proveedore", "CodigoProvNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("CodigoProv")
                        .HasConstraintName("FK_compras_Proveedores")
                        .IsRequired();

                    b.Navigation("CodigoProvNavigation");
                });

            modelBuilder.Entity("Datos.Models.Configuracione", b =>
                {
                    b.HasOne("Datos.Models.Emisor", "IdEmisorNavigation")
                        .WithMany("Configuraciones")
                        .HasForeignKey("IdEmisor")
                        .HasConstraintName("FK_configuraciones_Emisor")
                        .IsRequired();

                    b.Navigation("IdEmisorNavigation");
                });

            modelBuilder.Entity("Datos.Models.CotizacionDetalle", b =>
                {
                    b.HasOne("Datos.Models.Inventario", "CodigoNavigation")
                        .WithMany("CotizacionDetalles")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_Cotizacion_Detalle_Inventario")
                        .IsRequired();

                    b.HasOne("Datos.Models.Cotizacion", "CotizacionNavigation")
                        .WithMany("CotizacionDetalles")
                        .HasForeignKey("Cotizacion")
                        .HasConstraintName("FK_Cotizacion_Detalle_Cotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("CotizacionNavigation");
                });

            modelBuilder.Entity("Datos.Models.CuentasBancariasProveedor", b =>
                {
                    b.HasOne("Datos.Models.Proveedore", "CodigoProvNavigation")
                        .WithMany("CuentasBancariasProveedors")
                        .HasForeignKey("CodigoProv")
                        .HasConstraintName("FK_Cuentas_Bancarias_Proveedor_Proveedores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoProvNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetalleAbonoccobrar", b =>
                {
                    b.HasOne("Datos.Models.Abonoccobrar", "IdReciboNavigation")
                        .WithMany("DetalleAbonoccobrars")
                        .HasForeignKey("IdRecibo")
                        .HasConstraintName("FK_detalle_abonoccobrar_abonoccobrar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdReciboNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetalleAbonocpagar", b =>
                {
                    b.HasOne("Datos.Models.Abonocpagar", "IdAbonocpagarNavigation")
                        .WithMany("DetalleAbonocpagars")
                        .HasForeignKey("IdAbonocpagar")
                        .HasConstraintName("FK_detalle_abonocpagar_abonocpagar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAbonocpagarNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetalleAjustescPagar", b =>
                {
                    b.HasOne("Datos.Models.Ajustescpagar", "IdAjustecPagarNavigation")
                        .WithMany("DetalleAjustescPagars")
                        .HasForeignKey("IdAjustecPagar")
                        .HasConstraintName("FK_Detalle_AjustescPagar_Ajustescpagar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAjustecPagarNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetalleAjustesccobrar", b =>
                {
                    b.HasOne("Datos.Models.Ajustesccobrar", "IdAjustecCobrarNavigation")
                        .WithMany("DetalleAjustesccobrars")
                        .HasForeignKey("IdAjustecCobrar")
                        .HasConstraintName("FK_detalle_ajustesccobrar_ajustesccobrar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAjustecCobrarNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetalleOrdencompra", b =>
                {
                    b.HasOne("Datos.Models.Ordencompra", "OrdenNavigation")
                        .WithMany("DetalleOrdencompras")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_detalle_ordencompra_ordencompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetallePreAbonocCobrar", b =>
                {
                    b.HasOne("Datos.Models.PreAbonocCobrar", "IdReciboNavigation")
                        .WithMany("DetallePreAbonocCobrars")
                        .HasForeignKey("IdRecibo")
                        .HasConstraintName("FK_Detalle_PreAbonocCobrar_PreAbonocCobrar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdReciboNavigation");
                });

            modelBuilder.Entity("Datos.Models.DetallePrestamo", b =>
                {
                    b.HasOne("Datos.Models.Prestamo", "IdPrestamoNavigation")
                        .WithMany("DetallePrestamos")
                        .HasForeignKey("IdPrestamo")
                        .HasConstraintName("FK_detalle_prestamo_Prestamo")
                        .IsRequired();

                    b.Navigation("IdPrestamoNavigation");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesVenta", b =>
                {
                    b.HasOne("Datos.Models.Venta", "IdFacturaNavigation")
                        .WithMany("DevolucionesVenta")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("FK_devoluciones_ventas_Ventas")
                        .IsRequired();

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Datos.Models.Emisor", b =>
                {
                    b.HasOne("Datos.Models.TiposIdentificacion", "IdTipoIdentificacionNavigation")
                        .WithMany("Emisors")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("FK_Emisor_TiposIdentificacion");

                    b.Navigation("IdTipoIdentificacionNavigation");
                });

            modelBuilder.Entity("Datos.Models.EmpresaActividade", b =>
                {
                    b.HasOne("Datos.Models.ActividadEmpresa", "IdActividadNavigation")
                        .WithMany("EmpresaActividades")
                        .HasForeignKey("IdActividad")
                        .HasConstraintName("FK_EmpresaActividades_ActividadEmpresa")
                        .IsRequired();

                    b.HasOne("Datos.Models.Emisor", "IdEmisorNavigation")
                        .WithMany("EmpresaActividades")
                        .HasForeignKey("IdEmisor")
                        .HasConstraintName("FK_EmpresaActividades_Emisor")
                        .IsRequired();

                    b.Navigation("IdActividadNavigation");

                    b.Navigation("IdEmisorNavigation");
                });

            modelBuilder.Entity("Datos.Models.Encargadocompra", b =>
                {
                    b.HasOne("Datos.Models.Cliente", "ClienteNavigation")
                        .WithMany("Encargadocompras")
                        .HasForeignKey("Cliente")
                        .HasConstraintName("FK_encargadocompras_Clientes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteNavigation");
                });

            modelBuilder.Entity("Datos.Models.ExepcionFirmadocontado", b =>
                {
                    b.HasOne("Datos.Models.ValidaFirmadocontado", "IdValidaFirmadocontadoNavigation")
                        .WithMany("ExepcionFirmadocontados")
                        .HasForeignKey("IdValidaFirmadocontado")
                        .HasConstraintName("FK_EXEPCION_FIRMADOCONTADO_VALIDA_FIRMADOCONTADO")
                        .IsRequired();

                    b.Navigation("IdValidaFirmadocontadoNavigation");
                });

            modelBuilder.Entity("Datos.Models.Inventario", b =>
                {
                    b.HasOne("Datos.Models.Presentacione", "CodPresentacionNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("CodPresentacion")
                        .HasConstraintName("FK_Inventario_Presentaciones")
                        .IsRequired();

                    b.HasOne("Datos.Models.Impuesto", "IdImpuestoNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdImpuesto")
                        .HasConstraintName("FK_Inventario_Impuestos")
                        .IsRequired();

                    b.Navigation("CodPresentacionNavigation");

                    b.Navigation("IdImpuestoNavigation");
                });

            modelBuilder.Entity("Datos.Models.Lote", b =>
                {
                    b.HasOne("Datos.Models.Inventario", "CodArticuloNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("CodArticulo")
                        .HasConstraintName("FK_Lotes_Inventario")
                        .IsRequired();

                    b.Navigation("CodArticuloNavigation");
                });

            modelBuilder.Entity("Datos.Models.MensajeReceptor", b =>
                {
                    b.HasOne("Datos.Models.Proveedore", "CodProveedorNavigation")
                        .WithMany("MensajeReceptors")
                        .HasForeignKey("CodProveedor")
                        .HasConstraintName("FK_MensajeReceptor_Proveedores");

                    b.HasOne("Datos.Models.Emisor", "IdEmpresaNavigation")
                        .WithMany("MensajeReceptors")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_MensajeReceptor_Emisor");

                    b.Navigation("CodProveedorNavigation");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("Datos.Models.MovimientosBodega", b =>
                {
                    b.HasOne("Datos.Models.Bodega", "BodegaNavigation")
                        .WithMany("MovimientosBodegas")
                        .HasForeignKey("Bodega")
                        .HasConstraintName("FK_MovimientosBodega_Bodegas")
                        .IsRequired();

                    b.Navigation("BodegaNavigation");
                });

            modelBuilder.Entity("Datos.Models.MovimientosBodegaDetalle", b =>
                {
                    b.HasOne("Datos.Models.MovimientosBodega", "BoletaMovimientoNavigation")
                        .WithMany("MovimientosBodegaDetalles")
                        .HasForeignKey("BoletaMovimiento")
                        .HasConstraintName("FK_MovimientoBodega_Detalle_MovimientosBodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoletaMovimientoNavigation");
                });

            modelBuilder.Entity("Datos.Models.PerfilXModulo", b =>
                {
                    b.HasOne("Datos.Models.Modulo", "IdModuloNavigation")
                        .WithMany("PerfilXModulos")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_Perfil_x_Modulo_Modulos")
                        .IsRequired();

                    b.HasOne("Datos.Models.Perfil", "IdPerfilNavigation")
                        .WithMany("PerfilXModulos")
                        .HasForeignKey("IdPerfil")
                        .HasConstraintName("FK_Perfil_x_Modulo_Perfil")
                        .IsRequired();

                    b.Navigation("IdModuloNavigation");

                    b.Navigation("IdPerfilNavigation");
                });

            modelBuilder.Entity("Datos.Models.PerfilXUsuario", b =>
                {
                    b.HasOne("Datos.Models.Perfil", "IdPerfilNavigation")
                        .WithMany("PerfilXUsuarios")
                        .HasForeignKey("IdPerfil")
                        .HasConstraintName("FK_Perfil_x_Usuario_Perfil1")
                        .IsRequired();

                    b.HasOne("Datos.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("PerfilXUsuarios")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Perfil_x_Usuario_Usuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPerfilNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Datos.Models.PreTomaGeneralDetalle", b =>
                {
                    b.HasOne("Datos.Models.PreTomaGeneral", "IdPreTomaNavigation")
                        .WithMany("PreTomaGeneralDetalles")
                        .HasForeignKey("IdPreToma")
                        .HasConstraintName("FK_PreTomaGeneralDetalle_PreTomaGeneral")
                        .IsRequired();

                    b.Navigation("IdPreTomaNavigation");
                });

            modelBuilder.Entity("Datos.Models.PreTomaProveedorDetalle", b =>
                {
                    b.HasOne("Datos.Models.PreTomaProveedor", "IdPreTomaProveedorNavigation")
                        .WithMany("PreTomaProveedorDetalles")
                        .HasForeignKey("IdPreTomaProveedor")
                        .HasConstraintName("FK_PreTomaProveedorDetalle_PreTomaProveedor")
                        .IsRequired();

                    b.Navigation("IdPreTomaProveedorNavigation");
                });

            modelBuilder.Entity("Datos.Models.PreVentasDetalle", b =>
                {
                    b.HasOne("Datos.Models.PreVenta", "IdFacturaNavigation")
                        .WithMany("PreVentasDetalles")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("FK_PreVentas_Detalle_Ventas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Datos.Models.Referenciabancarium", b =>
                {
                    b.HasOne("Datos.Models.Cliente", "ClienteNavigation")
                        .WithMany("Referenciabancaria")
                        .HasForeignKey("Cliente")
                        .HasConstraintName("FK_referenciabancaria_Clientes")
                        .IsRequired();

                    b.Navigation("ClienteNavigation");
                });

            modelBuilder.Entity("Datos.Models.Referenciacomercial", b =>
                {
                    b.HasOne("Datos.Models.Cliente", "ClienteNavigation")
                        .WithMany("Referenciacomercials")
                        .HasForeignKey("Cliente")
                        .HasConstraintName("FK_referenciacomercial_Clientes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteNavigation");
                });

            modelBuilder.Entity("Datos.Models.SubFamilia", b =>
                {
                    b.HasOne("Datos.Models.Familium", "CodigoFamiliaNavigation")
                        .WithMany("SubFamilia")
                        .HasForeignKey("CodigoFamilia")
                        .HasConstraintName("FK_SubFamilias_Familia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoFamiliaNavigation");
                });

            modelBuilder.Entity("Datos.Models.SubUbicacion", b =>
                {
                    b.HasOne("Datos.Models.Ubicacione", "CodUbicacionNavigation")
                        .WithMany("SubUbicacions")
                        .HasForeignKey("CodUbicacion")
                        .HasConstraintName("FK_SubUbicacion_Ubicaciones")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodUbicacionNavigation");
                });

            modelBuilder.Entity("Datos.Models.TomaGeneralDetalle", b =>
                {
                    b.HasOne("Datos.Models.TomaGeneral", "IdTomaNavigation")
                        .WithMany("TomaGeneralDetalles")
                        .HasForeignKey("IdToma")
                        .HasConstraintName("FK_TomaGeneralDetalle_TomaGeneral")
                        .IsRequired();

                    b.Navigation("IdTomaNavigation");
                });

            modelBuilder.Entity("Datos.Models.TomaProveedorDetalle", b =>
                {
                    b.HasOne("Datos.Models.TomaProveedor", "IdTomaProveedorNavigation")
                        .WithMany("TomaProveedorDetalles")
                        .HasForeignKey("IdTomaProveedor")
                        .HasConstraintName("FK_TomaProveedorDetalle_TomaProveedor")
                        .IsRequired();

                    b.Navigation("IdTomaProveedorNavigation");
                });

            modelBuilder.Entity("Datos.Models.Venta", b =>
                {
                    b.HasOne("Datos.Models.Cliente", "CodClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("CodCliente")
                        .HasConstraintName("FK_Ventas_Clientes")
                        .IsRequired();

                    b.HasOne("Datos.Models.Emisor", "IdEmpresaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Ventas_Emisor");

                    b.Navigation("CodClienteNavigation");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("Datos.Models.VentasDetalle", b =>
                {
                    b.HasOne("Datos.Models.Inventario", "CodigoNavigation")
                        .WithMany("VentasDetalles")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_Ventas_Detalle_Inventario1")
                        .IsRequired();

                    b.HasOne("Datos.Models.Venta", "IdFacturaNavigation")
                        .WithMany("VentasDetalles")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("FK_Ventas_Detalle_Ventas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.AbonoApartado", b =>
                {
                    b.Navigation("AbonoApartadosdetalles");
                });

            modelBuilder.Entity("Datos.Models.Abonoccobrar", b =>
                {
                    b.Navigation("DetalleAbonoccobrars");
                });

            modelBuilder.Entity("Datos.Models.Abonocpagar", b =>
                {
                    b.Navigation("DetalleAbonocpagars");
                });

            modelBuilder.Entity("Datos.Models.ActividadEmpresa", b =>
                {
                    b.Navigation("EmpresaActividades");
                });

            modelBuilder.Entity("Datos.Models.AjusteInventario", b =>
                {
                    b.Navigation("AjusteInventarioDetalles");
                });

            modelBuilder.Entity("Datos.Models.Ajustesccobrar", b =>
                {
                    b.Navigation("DetalleAjustesccobrars");
                });

            modelBuilder.Entity("Datos.Models.Ajustescpagar", b =>
                {
                    b.Navigation("DetalleAjustescPagars");
                });

            modelBuilder.Entity("Datos.Models.Apartado", b =>
                {
                    b.Navigation("AbonoApartadosdetalles");

                    b.Navigation("ApartadoDetalles");
                });

            modelBuilder.Entity("Datos.Models.Aperturacaja", b =>
                {
                    b.Navigation("AperturaDenominaciones");

                    b.Navigation("AperturaTotalTopes");
                });

            modelBuilder.Entity("Datos.Models.Area", b =>
                {
                    b.Navigation("AreaArticulos");

                    b.Navigation("AreaEncargados");
                });

            modelBuilder.Entity("Datos.Models.ArqueoCaja", b =>
                {
                    b.Navigation("ArqueoDepositos");

                    b.Navigation("ArqueoEfectivos");

                    b.Navigation("ArqueoTarjeta");
                });

            modelBuilder.Entity("Datos.Models.Bodega", b =>
                {
                    b.Navigation("MovimientosBodegas");
                });

            modelBuilder.Entity("Datos.Models.Cierrecaja", b =>
                {
                    b.Navigation("CierreCajaDetMons");

                    b.Navigation("CierreCajaDetTarjs");
                });

            modelBuilder.Entity("Datos.Models.Cliente", b =>
                {
                    b.Navigation("Encargadocompras");

                    b.Navigation("Referenciabancaria");

                    b.Navigation("Referenciacomercials");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Datos.Models.Compra", b =>
                {
                    b.Navigation("ArticulosComprados");

                    b.Navigation("ArticulosGastos");
                });

            modelBuilder.Entity("Datos.Models.Cotizacion", b =>
                {
                    b.Navigation("CotizacionDetalles");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesCompra", b =>
                {
                    b.Navigation("ArticulosComprasDevueltos");
                });

            modelBuilder.Entity("Datos.Models.DevolucionesVenta", b =>
                {
                    b.Navigation("ArticulosVentasDevueltos");
                });

            modelBuilder.Entity("Datos.Models.Emisor", b =>
                {
                    b.Navigation("Configuraciones");

                    b.Navigation("EmpresaActividades");

                    b.Navigation("MensajeReceptors");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Datos.Models.Familium", b =>
                {
                    b.Navigation("SubFamilia");
                });

            modelBuilder.Entity("Datos.Models.Impuesto", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Datos.Models.Inventario", b =>
                {
                    b.Navigation("AjusteInventarioDetalles");

                    b.Navigation("ArticulosComprados");

                    b.Navigation("ArticulosVentasDevueltos");

                    b.Navigation("CotizacionDetalles");

                    b.Navigation("Lotes");

                    b.Navigation("VentasDetalles");
                });

            modelBuilder.Entity("Datos.Models.Modulo", b =>
                {
                    b.Navigation("PerfilXModulos");
                });

            modelBuilder.Entity("Datos.Models.MovimientosBodega", b =>
                {
                    b.Navigation("MovimientosBodegaDetalles");
                });

            modelBuilder.Entity("Datos.Models.Ordencompra", b =>
                {
                    b.Navigation("DetalleOrdencompras");
                });

            modelBuilder.Entity("Datos.Models.Perfil", b =>
                {
                    b.Navigation("PerfilXModulos");

                    b.Navigation("PerfilXUsuarios");
                });

            modelBuilder.Entity("Datos.Models.PreAbonocCobrar", b =>
                {
                    b.Navigation("DetallePreAbonocCobrars");
                });

            modelBuilder.Entity("Datos.Models.PreTomaGeneral", b =>
                {
                    b.Navigation("PreTomaGeneralDetalles");
                });

            modelBuilder.Entity("Datos.Models.PreTomaProveedor", b =>
                {
                    b.Navigation("PreTomaProveedorDetalles");
                });

            modelBuilder.Entity("Datos.Models.PreVenta", b =>
                {
                    b.Navigation("PreVentasDetalles");
                });

            modelBuilder.Entity("Datos.Models.Presentacione", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Datos.Models.Prestamo", b =>
                {
                    b.Navigation("DetallePrestamos");
                });

            modelBuilder.Entity("Datos.Models.Proveedore", b =>
                {
                    b.Navigation("Abonocpagars");

                    b.Navigation("Ajustescpagars");

                    b.Navigation("Compras");

                    b.Navigation("CuentasBancariasProveedors");

                    b.Navigation("MensajeReceptors");
                });

            modelBuilder.Entity("Datos.Models.Sucursale", b =>
                {
                    b.Navigation("AjusteInventarios");
                });

            modelBuilder.Entity("Datos.Models.TiposIdentificacion", b =>
                {
                    b.Navigation("Emisors");
                });

            modelBuilder.Entity("Datos.Models.TomaGeneral", b =>
                {
                    b.Navigation("TomaGeneralDetalles");
                });

            modelBuilder.Entity("Datos.Models.TomaProveedor", b =>
                {
                    b.Navigation("TomaProveedorDetalles");
                });

            modelBuilder.Entity("Datos.Models.Ubicacione", b =>
                {
                    b.Navigation("SubUbicacions");
                });

            modelBuilder.Entity("Datos.Models.Usuario", b =>
                {
                    b.Navigation("PerfilXUsuarios");
                });

            modelBuilder.Entity("Datos.Models.ValidaFirmadocontado", b =>
                {
                    b.Navigation("ExepcionFirmadocontados");
                });

            modelBuilder.Entity("Datos.Models.Venta", b =>
                {
                    b.Navigation("DevolucionesVenta");

                    b.Navigation("VentasDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
