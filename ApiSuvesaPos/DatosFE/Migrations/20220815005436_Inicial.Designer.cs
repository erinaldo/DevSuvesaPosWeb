// <auto-generated />
using System;
using DatosFE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatosFE.Migrations
{
    [DbContext(typeof(FEContext))]
    [Migration("20220815005436_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatosFE.Models.ActividadEmpresa", b =>
                {
                    b.Property<int>("IdActividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actividad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdActividad");

                    b.ToTable("ActividadEmpresa");
                });

            modelBuilder.Entity("DatosFE.Models.ArticulosComprado", b =>
                {
                    b.Property<long>("IdArticuloComprados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_ArticuloComprados")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Base")
                        .HasColumnType("float");

                    b.Property<bool>("Bonificado")
                        .HasColumnType("bit");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<double>("CantidadBonificado")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CodArticuloBonificacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodCabys")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMonedaVenta")
                        .HasColumnType("int");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<long>("CodigoBonificado")
                        .HasColumnType("bigint");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double>("CostoBonificado")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("DescuentoP")
                        .HasColumnType("float")
                        .HasColumnName("Descuento_P");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double>("Exento")
                        .HasColumnType("float");

                    b.Property<double>("Gravado")
                        .HasColumnType("float");

                    b.Property<long>("IdCompra")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("ImpuestoP")
                        .HasColumnType("float")
                        .HasColumnName("Impuesto_P");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("MontoFlete")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Flete");

                    b.Property<double>("NuevoCostoBase")
                        .HasColumnType("float");

                    b.Property<double>("OtrosCargos")
                        .HasColumnType("float");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioB")
                        .HasColumnType("float")
                        .HasColumnName("Precio_B");

                    b.Property<double>("PrecioC")
                        .HasColumnType("float")
                        .HasColumnName("Precio_C");

                    b.Property<double>("PrecioD")
                        .HasColumnType("float")
                        .HasColumnName("Precio_D");

                    b.Property<double>("Regalias")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalBonificado")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdArticuloComprados");

                    b.HasIndex("Codigo");

                    b.HasIndex("IdCompra");

                    b.ToTable("articulos_comprados");
                });

            modelBuilder.Entity("DatosFE.Models.ArticulosVentasDevuelto", b =>
                {
                    b.Property<long>("Consecutivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantBod")
                        .HasColumnType("float");

                    b.Property<double>("CantVet")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Devuelto")
                        .HasColumnType("bit")
                        .HasColumnName("devuelto");

                    b.Property<bool>("Empaquetado")
                        .HasColumnType("bit")
                        .HasColumnName("empaquetado");

                    b.Property<int>("IdArtVenta")
                        .HasColumnType("int")
                        .HasColumnName("Id_Art_Venta");

                    b.Property<string>("IdArticuloV")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("id_articulo_V")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<bool>("Recibido")
                        .HasColumnType("bit")
                        .HasColumnName("recibido");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.HasKey("Consecutivo");

                    b.HasIndex("Codigo");

                    b.HasIndex("Devolucion");

                    b.ToTable("articulos_ventas_devueltos");
                });

            modelBuilder.Entity("DatosFE.Models.CartaExoneracion", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("datetime");

                    b.Property<int>("IdTipoExoneracion")
                        .HasColumnType("int");

                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("PorcentajeCompra")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CartaExoneracion");
                });

            modelBuilder.Entity("DatosFE.Models.Cliente", b =>
                {
                    b.Property<long>("Identificacion")
                        .HasColumnType("bigint")
                        .HasColumnName("identificacion");

                    b.Property<string>("Abierto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("abierto")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<string>("Agente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("agente")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cedula")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("ClienteMoroso")
                        .HasColumnType("bit")
                        .HasColumnName("Cliente_Moroso")
                        .HasComment("");

                    b.Property<int>("CodMonedaCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CorreoComprobante")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CorreoRecibo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Descuento")
                        .HasColumnType("float")
                        .HasColumnName("descuento");

                    b.Property<double>("DescuentoEspecial")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("e_mail")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("empresa")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<bool>("EnviarRecibo")
                        .HasColumnType("bit");

                    b.Property<bool>("Fallecido")
                        .HasColumnType("bit");

                    b.Property<string>("Fax01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("fax_02")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("IdTipoExoneracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float")
                        .HasColumnName("impuesto");

                    b.Property<bool>("Mag")
                        .HasColumnType("bit")
                        .HasColumnName("MAG");

                    b.Property<double>("MaxCredito")
                        .HasColumnType("float")
                        .HasColumnName("max_credito");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Nombreusuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreusuario")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("Notificar")
                        .HasColumnType("bit")
                        .HasColumnName("notificar");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("observaciones")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("OrdenCompra")
                        .HasColumnType("bit");

                    b.Property<int>("PlazoCredito")
                        .HasColumnType("int")
                        .HasColumnName("Plazo_credito");

                    b.Property<bool>("PrecioSugerido")
                        .HasColumnType("bit");

                    b.Property<bool>("Relacionados")
                        .HasColumnType("bit");

                    b.Property<string>("Sinrestriccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("sinrestriccion")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<string>("Telefono01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Telefono_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Telefono02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("telefono_02")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TipoCedula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo_cedula");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("(N'FISICA')");

                    b.Property<short>("Tipoprecio")
                        .HasColumnType("smallint")
                        .HasColumnName("tipoprecio");

                    b.Property<bool>("UsoInterno")
                        .HasColumnType("bit");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Identificacion");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DatosFE.Models.Compra", b =>
                {
                    b.Property<long>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Compra")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Asiento")
                        .HasColumnType("float");

                    b.Property<double>("AsientoInve")
                        .HasColumnType("float");

                    b.Property<double>("CambioImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ClaveDgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ClaveDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMonedaCompra")
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaCompra");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodigoProv")
                        .HasColumnType("int");

                    b.Property<bool>("Compra1")
                        .HasColumnType("bit")
                        .HasColumnName("Compra");

                    b.Property<string>("ConsecutivoDgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ConsecutivoDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<bool>("ContaInve")
                        .HasColumnType("bit");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<bool>("EnviadoDgt")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoDGT");

                    b.Property<string>("EstadoDgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("Factura")
                        .HasColumnType("float");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<bool>("Fec")
                        .HasColumnType("bit")
                        .HasColumnName("FEC");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<bool>("Gasto")
                        .HasColumnType("bit");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MotivoGasto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<double?>("NumOrden")
                        .HasColumnType("float")
                        .HasColumnName("num_orden");

                    b.Property<string>("NumTrans")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("PreAbono")
                        .HasColumnType("float");

                    b.Property<bool>("Prepagada")
                        .HasColumnType("bit");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoCompra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasDefaultValueSql("('')")
                        .IsFixedLength(true);

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.Property<bool>("Trans")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("datetime");

                    b.HasKey("IdCompra");

                    b.HasIndex("CodigoProv");

                    b.HasIndex(new[] { "Factura", "CodigoProv", "TipoCompra" }, "IX_compras")
                        .IsUnique();

                    b.ToTable("compras");
                });

            modelBuilder.Entity("DatosFE.Models.CondicionImpuesto", b =>
                {
                    b.Property<decimal>("IdCondicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condicion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdCondicion");

                    b.ToTable("CondicionImpuesto");
                });

            modelBuilder.Entity("DatosFE.Models.Configuracione", b =>
                {
                    b.Property<string>("Cedula")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("AplicaTemperatura")
                        .HasColumnType("bit");

                    b.Property<int>("Cajeros")
                        .HasColumnType("int");

                    b.Property<bool>("CambiaPrecioCredito")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsContado")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsCredito")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsPuntoVenta")
                        .HasColumnType("bit");

                    b.Property<bool>("Contabilidad")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("EditarNombre")
                        .HasColumnType("bit")
                        .HasColumnName("editar_nombre");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Empresa1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empresa1");

                    b.Property<string>("Empresa2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empresa2");

                    b.Property<string>("Empresa3")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("empresa3");

                    b.Property<bool>("FacturaElectronica")
                        .HasColumnType("bit");

                    b.Property<string>("Fax01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Fax_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Fax_02")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("FormatoCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Frase")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("IdEmisor")
                        .HasColumnType("int")
                        .HasColumnName("idEmisor");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("ImprimeContadoPve")
                        .HasColumnType("bit")
                        .HasColumnName("ImprimeContadoPVE");

                    b.Property<bool>("ImprimirEnFacturaPersonalizada")
                        .HasColumnType("bit")
                        .HasColumnName("Imprimir_en_Factura_Personalizada");

                    b.Property<int>("Intereses")
                        .HasColumnType("int");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<long>("MascotasContado")
                        .HasColumnType("bigint");

                    b.Property<long>("MascotasCredito")
                        .HasColumnType("bigint");

                    b.Property<bool>("ModoCaja")
                        .HasColumnType("bit");

                    b.Property<long>("NumeroConsecutivo")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroContado")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroCredito")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroPuntoVenta")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Regalias")
                        .HasColumnType("bit")
                        .HasColumnName("regalias");

                    b.Property<bool>("SoloPve")
                        .HasColumnType("bit")
                        .HasColumnName("SoloPVE");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<long>("TallerContado")
                        .HasColumnType("bigint");

                    b.Property<long>("TallerCredito")
                        .HasColumnType("bigint");

                    b.Property<string>("Tel01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Tel_01")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Tel02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Tel_02")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("TokenNegativo")
                        .HasColumnType("bit");

                    b.Property<bool>("UnicoConsecutivo")
                        .HasColumnType("bit");

                    b.HasKey("Cedula");

                    b.HasIndex("IdEmisor");

                    b.ToTable("configuraciones");
                });

            modelBuilder.Entity("DatosFE.Models.DevolucionesVenta", b =>
                {
                    b.Property<long>("Devolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Caja")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("caja");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("Clavedgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CLAVEDGT")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<long>("Consecutivo")
                        .HasColumnType("bigint")
                        .HasColumnName("CONSECUTIVO");

                    b.Property<string>("Consecutivodgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CONSECUTIVODGT")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCosto")
                        .HasColumnType("bit");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<bool>("Enviadodgt")
                        .HasColumnType("bit")
                        .HasColumnName("ENVIADODGT");

                    b.Property<string>("Estadodgt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ESTADODGT")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDevolucion")
                        .HasColumnType("float");

                    b.Property<string>("NotasDevolucion")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValueSql("('')");

                    b.Property<decimal>("NumApertura")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumeroAsiento")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroAsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<double>("SaldoAntFact")
                        .HasColumnType("float")
                        .HasColumnName("SaldoAnt_Fact");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioRecibio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Devolucion");

                    b.HasIndex("IdFactura");

                    b.ToTable("devoluciones_ventas");
                });

            modelBuilder.Entity("DatosFE.Models.Emisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Canton")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Certificado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Distrito")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IdTipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OtrasSeñas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Provincia")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TipoIdentificacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VenceCertificado")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoIdentificacion");

                    b.ToTable("Emisor");
                });

            modelBuilder.Entity("DatosFE.Models.EmpresaActividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdActividad")
                        .HasColumnType("int")
                        .HasColumnName("idActividad");

                    b.Property<int>("IdEmisor")
                        .HasColumnType("int")
                        .HasColumnName("idEmisor");

                    b.HasKey("Id");

                    b.HasIndex("IdActividad");

                    b.HasIndex("IdEmisor");

                    b.ToTable("EmpresaActividades");
                });

            modelBuilder.Entity("DatosFE.Models.GetMensajeXId", b =>
                {
                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CONSECUTIVO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaEmisionDoc")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("GET_MENSAJE_x_ID");
                });

            modelBuilder.Entity("DatosFE.Models.GetMensajeXml43", b =>
                {
                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CondicionImpuesto")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("DetalleMensaje")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FechaEmisionDoc")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<int>("Mensaje")
                        .HasColumnType("int");

                    b.Property<double>("MontoTotalDeGastoAplicable")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuestoAcreditar")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroCedulaReceptor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroConsecutivoReceptor")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("GET_MENSAJE_XML43");
                });

            modelBuilder.Entity("DatosFE.Models.Impuesto", b =>
                {
                    b.Property<int>("IdImpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Impuesto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Tarifa");

                    b.Property<string>("Impuesto1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Impuesto");

                    b.Property<bool>("Inactivo")
                        .HasColumnType("bit");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdImpuesto");

                    b.ToTable("Impuestos");
                });

            modelBuilder.Entity("DatosFE.Models.Inventario", b =>
                {
                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<bool>("ActivarBodega2")
                        .HasColumnType("bit");

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<double?>("Apartado")
                        .HasColumnType("float");

                    b.Property<bool>("ApicarDescuentoTarjeta")
                        .HasColumnType("bit");

                    b.Property<bool?>("Armamento")
                        .HasColumnType("bit")
                        .HasColumnName("armamento");

                    b.Property<string>("Barras")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Barras2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras2");

                    b.Property<string>("Barras3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("barras3");

                    b.Property<bool?>("Bloqueado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bloqueado")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Bonificado")
                        .HasColumnType("bit")
                        .HasColumnName("bonificado");

                    b.Property<double?>("CantidadDescarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("CantidadPresentOtro")
                        .HasColumnType("float");

                    b.Property<bool?>("Clinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("clinica")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cod_Articulo")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CodMarca")
                        .HasColumnType("int");

                    b.Property<int>("CodPresentOtro")
                        .HasColumnType("int")
                        .HasColumnName("Cod_PresentOtro");

                    b.Property<int>("CodPresentacion")
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Codcabys")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CODCABYS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CodigoDescarga")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<long>("CodigoPrestamo")
                        .HasColumnType("bigint");

                    b.Property<bool>("Consignacion")
                        .HasColumnType("bit");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<double?>("CostoReal")
                        .HasColumnType("float");

                    b.Property<bool?>("DescargaOtro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("EnToma")
                        .HasColumnType("bit");

                    b.Property<string>("Encargado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("encargado");

                    b.Property<double>("Existencia")
                        .HasColumnType("float");

                    b.Property<double>("ExistenciaBodega")
                        .HasColumnType("float");

                    b.Property<double>("ExistenciaBodega2")
                        .HasColumnType("float");

                    b.Property<double?>("ExistenciaForzada")
                        .HasColumnType("float");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Fletes")
                        .HasColumnType("float");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int")
                        .HasColumnName("Id_Bodega");

                    b.Property<int>("IdImpuesto")
                        .HasColumnType("int")
                        .HasColumnName("Id_Impuesto");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("image");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<double>("Iventa")
                        .HasColumnType("float")
                        .HasColumnName("IVenta");

                    b.Property<bool>("Lote")
                        .HasColumnType("bit");

                    b.Property<bool>("Mag")
                        .HasColumnType("bit")
                        .HasColumnName("MAG");

                    b.Property<bool?>("Maquinaria")
                        .HasColumnType("bit")
                        .HasColumnName("maquinaria");

                    b.Property<bool?>("Mascotas")
                        .HasColumnType("bit")
                        .HasColumnName("mascotas");

                    b.Property<double>("MaxBodega")
                        .HasColumnType("float")
                        .HasColumnName("MAX_Bodega");

                    b.Property<double>("MaxComision")
                        .HasColumnType("float")
                        .HasColumnName("Max_Comision");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MaxInventario")
                        .HasColumnType("float")
                        .HasColumnName("MAX_Inventario");

                    b.Property<double>("Maxima")
                        .HasColumnType("float");

                    b.Property<double>("Minima")
                        .HasColumnType("float");

                    b.Property<int>("MonedaCosto")
                        .HasColumnType("int");

                    b.Property<int>("MonedaVenta")
                        .HasColumnType("int");

                    b.Property<bool?>("Muestra")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool?>("Orden")
                        .HasColumnType("bit")
                        .HasColumnName("orden");

                    b.Property<double>("OtrosCargos")
                        .HasColumnType("float");

                    b.Property<bool?>("Pantalla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("pantalla")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Peces")
                        .HasColumnType("bit")
                        .HasColumnName("peces");

                    b.Property<double>("PrecioA")
                        .HasColumnType("float")
                        .HasColumnName("Precio_A");

                    b.Property<double>("PrecioB")
                        .HasColumnType("float")
                        .HasColumnName("Precio_B");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float");

                    b.Property<double>("PrecioC")
                        .HasColumnType("float")
                        .HasColumnName("Precio_C");

                    b.Property<double>("PrecioD")
                        .HasColumnType("float")
                        .HasColumnName("Precio_D");

                    b.Property<double>("PrecioPromo")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Promo");

                    b.Property<double>("PrecioSugerido")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Sugerido");

                    b.Property<bool>("PreguntaPrecio")
                        .HasColumnType("bit");

                    b.Property<double>("PresentaCant")
                        .HasColumnType("float");

                    b.Property<double?>("Prestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("prestamo")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ProductosOrganicos")
                        .HasColumnType("bit")
                        .HasColumnName("productos_organicos");

                    b.Property<bool?>("Promo3x1")
                        .HasColumnType("bit")
                        .HasColumnName("promo3x1");

                    b.Property<bool>("PromoActiva")
                        .HasColumnType("bit")
                        .HasColumnName("Promo_Activa");

                    b.Property<bool>("PromoCon")
                        .HasColumnType("bit")
                        .HasColumnName("PromoCON");

                    b.Property<bool>("PromoCre")
                        .HasColumnType("bit")
                        .HasColumnName("PromoCRE");

                    b.Property<DateTime>("PromoFinaliza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Promo_Finaliza")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("PromoInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("Promo_Inicio")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int")
                        .HasComment("Campo que me permitirá establecer el proveedor por defecto");

                    b.Property<double>("PuntoMedio")
                        .HasColumnType("float");

                    b.Property<bool?>("Receta")
                        .HasColumnType("bit")
                        .HasColumnName("receta");

                    b.Property<long?>("Rifa")
                        .HasColumnType("bigint")
                        .HasColumnName("rifa");

                    b.Property<long>("Serie")
                        .HasColumnType("bigint")
                        .HasColumnName("serie");

                    b.Property<bool>("Servicio")
                        .HasColumnType("bit");

                    b.Property<bool>("SinDecimal")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloConExistencia")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloContado")
                        .HasColumnType("bit");

                    b.Property<bool>("SoloUsoInterno")
                        .HasColumnType("bit");

                    b.Property<string>("SubFamilia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SubUbicacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("SugeridoIv")
                        .HasColumnType("float")
                        .HasColumnName("SugeridoIV");

                    b.Property<bool?>("Taller")
                        .HasColumnType("bit")
                        .HasColumnName("taller");

                    b.Property<bool?>("Tienda")
                        .HasColumnType("bit")
                        .HasColumnName("tienda");

                    b.Property<bool>("UsaGalon")
                        .HasColumnType("bit");

                    b.Property<bool>("ValidaExistencia")
                        .HasColumnType("bit");

                    b.Property<bool>("Web")
                        .HasColumnType("bit");

                    b.HasKey("Codigo");

                    b.HasIndex("CodPresentacion");

                    b.HasIndex("IdImpuesto");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("DatosFE.Models.MensajeReceptor", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CodProveedor")
                        .HasColumnType("int");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CondicionImpuesto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DetalleMensaje")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<DateTime?>("FechaComprobante")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEmisionDoc")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'CRC')");

                    b.Property<double>("MontoTotalDeGastoAplicable")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalImpuestoAcreditar")
                        .HasColumnType("float");

                    b.Property<string>("NumeroCedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pdf")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PDF")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CodProveedor");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("MensajeReceptor");
                });

            modelBuilder.Entity("DatosFE.Models.ObtenerDetalleFactura43", b =>
                {
                    b.Property<string>("Cabys")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FechaEmisionExoneracion")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("FechaEmision_Exoneracion");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<double>("ImpuestoNeto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("MontoImpuestoExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("MontoImpuesto_Exoneracion");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalLinea")
                        .HasColumnType("float");

                    b.Property<string>("NaturalezaDescuento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NombreInstitucionExoneracion")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)")
                        .HasColumnName("NombreInstitucion_Exoneracion");

                    b.Property<string>("NumeroDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NumeroDocumento_Exoneracion");

                    b.Property<double>("PorcentajeCompraExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("PorcentajeCompra_Exoneracion");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TarifaImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Tarifa_Impuesto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TipoDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoDocumento_Exoneracion");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("ObtenerDetalleFactura43");
                });

            modelBuilder.Entity("DatosFE.Models.ObtenerDetallesDevolucion43", b =>
                {
                    b.Property<string>("Cabys")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoImpuesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Codigo_Impuesto");

                    b.Property<string>("CodigoTarifa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<string>("FechaEmisionExoneracion")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("FechaEmision_Exoneracion");

                    b.Property<double>("ImpuestoNeto")
                        .HasColumnType("float");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<double>("MontoImpuestoExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("MontoImpuesto_Exoneracion");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<double>("MontoTotalLinea")
                        .HasColumnType("float");

                    b.Property<string>("NaturalezaDescuento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NombreInstitucionExoneracion")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("varchar(29)")
                        .HasColumnName("NombreInstitucion_Exoneracion");

                    b.Property<string>("NumeroDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NumeroDocumento_Exoneracion");

                    b.Property<double>("PorcentajeCompraExoneracion")
                        .HasColumnType("float")
                        .HasColumnName("PorcentajeCompra_Exoneracion");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TarifaImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Tarifa_Impuesto");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TipoDocumentoExoneracion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoDocumento_Exoneracion");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToView("ObtenerDetallesDevolucion43");
                });

            modelBuilder.Entity("DatosFE.Models.ObtenerDevolucion43", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CantonEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Canton_Emisor");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CodigoMoneda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CodigoPaisEmisor")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodigoPais_Emisor");

                    b.Property<string>("CodigoReferencia")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Codigo_Referencia");

                    b.Property<string>("CondicionVenta")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("CorreoElectronicoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CorreoElectronico_Emisor");

                    b.Property<string>("CorreoElectronicoReceptor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CorreoElectronico_Receptor");

                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<string>("DistritoEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Distrito_Emisor");

                    b.Property<DateTime>("Expr1")
                        .HasColumnType("datetime");

                    b.Property<long>("Expr2")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("FechaEmisionReferencia")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("FechaEmision_Referencia");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("NombreEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nombre_Emisor");

                    b.Property<string>("NombreReceptor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nombre_Receptor");

                    b.Property<string>("NumTelefonoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NumTelefono_Emisor");

                    b.Property<string>("NumTelefonoReceptor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("NumTelefono_Receptor");

                    b.Property<string>("NumeroEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Numero_Emisor");

                    b.Property<string>("NumeroReceptor")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Numero_Receptor");

                    b.Property<string>("NumeroReferencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Numero_Referencia");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OtrasSenasEmisor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OtrasSenas_Emisor");

                    b.Property<decimal>("ProvinciaEmisor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Provincia_Emisor");

                    b.Property<string>("RazonReferencia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Razon_Referencia");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoDocReferencia")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("TipoDoc_Referencia");

                    b.Property<string>("TipoEmisor")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Emisor");

                    b.Property<string>("TipoFactura")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TipoReceptor")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Receptor");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercExonerada")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasExentas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasGravadas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServGravados")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVenta")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("ObtenerDevolucion43");
                });

            modelBuilder.Entity("DatosFE.Models.ObtenerFacturas43", b =>
                {
                    b.Property<string>("CantonEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Canton_Emisor");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("CodigoMoneda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CodigoPaisEmisor")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodigoPais_Emisor");

                    b.Property<string>("CondicionVenta")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CorreoElectronicoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CorreoElectronico_Emisor");

                    b.Property<string>("CorreoElectronicoReceptor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CorreoElectronico_Receptor");

                    b.Property<string>("DistritoEmisor")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Distrito_Emisor");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaVence")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("NombreEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Nombre_Emisor");

                    b.Property<string>("NombreReceptor")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Receptor");

                    b.Property<string>("NumTelefonoEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NumTelefono_Emisor");

                    b.Property<string>("NumTelefonoReceptor")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("NumTelefono_Receptor");

                    b.Property<string>("NumeroConsecutivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroEmisor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Numero_Emisor");

                    b.Property<string>("NumeroReceptor")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Numero_Receptor");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrdenCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("OtrasSenasEmisor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OtrasSenas_Emisor");

                    b.Property<int?>("PlazoCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("ProvinciaEmisor")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Provincia_Emisor");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<string>("TipoEmisor")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Emisor");

                    b.Property<string>("TipoReceptor")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Tipo_Receptor");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercExonerada")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasExentas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercanciasGravadas")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExentos")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServGravados")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVenta")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("ObtenerFacturas43");
                });

            modelBuilder.Entity("DatosFE.Models.Presentacione", b =>
                {
                    b.Property<int>("CodPres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MH")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Presentaciones")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodPres");

                    b.ToTable("Presentaciones");
                });

            modelBuilder.Entity("DatosFE.Models.Proveedore", b =>
                {
                    b.Property<int>("CodigoProv")
                        .HasColumnType("int");

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("CostoTotal")
                        .HasColumnType("bit");

                    b.Property<string>("CuentaContable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescripcionCuentaContable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Fax2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Fec")
                        .HasColumnType("bit")
                        .HasColumnName("FEC");

                    b.Property<decimal>("IdCanton")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Canton");

                    b.Property<decimal>("IdDistrito")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Distrito");

                    b.Property<decimal>("IdProvincia")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Provincia");

                    b.Property<bool>("ImpIncluido")
                        .HasColumnType("bit");

                    b.Property<bool>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<double>("MontoCredito")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("OtrasSenas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("PedidosMes")
                        .HasColumnType("int");

                    b.Property<int>("Plazo")
                        .HasColumnType("int");

                    b.Property<bool>("Serie")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Telefono2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TelefonoCont")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Telefono_Cont")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TipoProveedor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("UtilidadFija")
                        .HasColumnType("bit")
                        .HasColumnName("Utilidad_Fija");

                    b.Property<double>("UtilidadInventario")
                        .HasColumnType("float")
                        .HasColumnName("Utilidad_Inventario");

                    b.HasKey("CodigoProv");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("DatosFE.Models.TipoExoneracion", b =>
                {
                    b.Property<decimal>("IdTipoExoneracion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoExoneracion1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TipoExoneracion");

                    b.HasKey("IdTipoExoneracion");

                    b.ToTable("TipoExoneracion");
                });

            modelBuilder.Entity("DatosFE.Models.TiposIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoFe")
                        .HasColumnType("int")
                        .HasColumnName("CodigoFE");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposIdentificacion");
                });

            modelBuilder.Entity("DatosFE.Models.Ubicacion", b =>
                {
                    b.Property<decimal>("IdProvincia")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Provincia");

                    b.Property<decimal>("IdCanton")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Canton");

                    b.Property<decimal>("IdDistrito")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Distrito");

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdProvincia", "IdCanton", "IdDistrito")
                        .HasName("PK_Table_1");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("DatosFE.Models.Venta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Agente")
                        .HasColumnType("bit")
                        .HasColumnName("agente");

                    b.Property<bool>("Anulado")
                        .HasColumnType("bit");

                    b.Property<long?>("Apartado")
                        .HasColumnType("bigint")
                        .HasColumnName("apartado");

                    b.Property<bool>("Archivada")
                        .HasColumnType("bit");

                    b.Property<long>("AsientoCosto")
                        .HasColumnType("bigint");

                    b.Property<long>("AsientoVenta")
                        .HasColumnType("bigint");

                    b.Property<string>("Cedula")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('000000000')");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cedula_Usuario");

                    b.Property<string>("ClaveMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ClaveMH")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ClaveReenvio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<long?>("CodAgente")
                        .HasColumnType("bigint")
                        .HasColumnName("cod_agente");

                    b.Property<long>("CodCliente")
                        .HasColumnType("bigint")
                        .HasColumnName("Cod_Cliente");

                    b.Property<string>("CodEncargadoCompra")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("Cod_Encargado_Compra");

                    b.Property<int>("CodMoneda")
                        .HasColumnType("int")
                        .HasColumnName("Cod_Moneda");

                    b.Property<string>("ConsecutivoMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ConsecutivoMH")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ConsecutivoReenvio")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("Contabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("ContabilizadoCventa")
                        .HasColumnType("bit")
                        .HasColumnName("ContabilizadoCVenta");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("EnProcesoIncobrable")
                        .HasColumnType("bit");

                    b.Property<bool>("Entregado")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviadoMh")
                        .HasColumnType("bit")
                        .HasColumnName("EnviadoMH");

                    b.Property<string>("EstadoMh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH")
                        .HasDefaultValueSql("('pendiente')");

                    b.Property<decimal>("Etapa")
                        .HasColumnType("numeric(18,0)");

                    b.Property<bool>("ExcluirCxC")
                        .HasColumnType("bit")
                        .HasColumnName("excluirCxC");

                    b.Property<bool>("Exonerar")
                        .HasColumnType("bit");

                    b.Property<bool>("FacturaCancelado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaArchivo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEtapa")
                        .HasColumnType("datetime");

                    b.Property<bool>("Frecuente")
                        .HasColumnType("bit");

                    b.Property<decimal>("IdAdelanto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Adelanto");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("idEmpresa");

                    b.Property<decimal>("IdFacturaRemplaza")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_FacturaRemplaza");

                    b.Property<double>("ImpVenta")
                        .HasColumnType("float")
                        .HasColumnName("Imp_Venta");

                    b.Property<bool>("Mascotas")
                        .HasColumnType("bit");

                    b.Property<string>("MonedaNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Moneda_Nombre");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Nombre_Cliente");

                    b.Property<long>("NumApertura")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Apertura");

                    b.Property<long>("NumCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Caja")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("NumFactura")
                        .HasColumnType("float")
                        .HasColumnName("Num_Factura");

                    b.Property<decimal>("NumeroReenvio")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Orden")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<bool>("PagoComision")
                        .HasColumnType("bit")
                        .HasColumnName("Pago_Comision");

                    b.Property<int>("PagoImpuesto")
                        .HasColumnType("int");

                    b.Property<bool>("Reenviar")
                        .HasColumnType("bit");

                    b.Property<bool>("Renta")
                        .HasColumnType("bit");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExento")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalGravada")
                        .HasColumnType("float");

                    b.Property<bool>("Taller")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<double>("TipoCambio")
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio");

                    b.Property<string>("TipoCedula")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('FISICA')");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("Transporte")
                        .HasColumnType("float");

                    b.Property<string>("UsuarioArchivo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("Vence")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.HasIndex("CodCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex(new[] { "NumFactura", "Tipo", "NumCaja" }, "IX_Ventas")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("DatosFE.Models.VentasDetalle", b =>
                {
                    b.Property<long>("IdVentaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_venta_detalle")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantBod")
                        .HasColumnType("float");

                    b.Property<double>("CantVet")
                        .HasColumnType("float");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("CodArticulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("CodMonedaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cod_MonedaVenta")
                        .HasDefaultValueSql("((500))");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<double?>("CostoReal")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<double>("Descuento")
                        .HasColumnType("float");

                    b.Property<double>("Devoluciones")
                        .HasColumnType("float");

                    b.Property<double?>("Disminuye")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Empaquetado")
                        .HasColumnType("bit")
                        .HasColumnName("empaquetado");

                    b.Property<bool?>("Entregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("entregado")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Entregados")
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<long?>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_bodega")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<decimal>("IdImpuesto")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("Id_Impuesto");

                    b.Property<decimal>("IdSerie")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("IdTipoExoneracion")
                        .HasColumnType("numeric(18,0)");

                    b.Property<double>("Impuesto")
                        .HasColumnType("float");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("MaxDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Max_Descuento");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Descuento");

                    b.Property<double>("MontoImpuesto")
                        .HasColumnType("float")
                        .HasColumnName("Monto_Impuesto");

                    b.Property<string>("NotaPantalla")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nota_pantalla")
                        .HasDefaultValueSql("('-')");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("NumeroEntrega")
                        .HasColumnType("float")
                        .HasColumnName("Numero_Entrega");

                    b.Property<double>("PorcentajeCompra")
                        .HasColumnType("float");

                    b.Property<double>("PrecioBase")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Base");

                    b.Property<double>("PrecioCosto")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Costo");

                    b.Property<double>("PrecioFlete")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Flete");

                    b.Property<double>("PrecioOtros")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Otros");

                    b.Property<double>("PrecioUnit")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Unit");

                    b.Property<double?>("Regalias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("regalias")
                        .HasDefaultValueSql("((0))");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("SubTotalExcento")
                        .HasColumnType("float");

                    b.Property<double>("SubtotalGravado")
                        .HasColumnType("float");

                    b.Property<double>("TipoCambioValorCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("Tipo_Cambio_ValorCompra")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("IdVentaDetalle");

                    b.HasIndex("Codigo");

                    b.HasIndex("IdFactura");

                    b.ToTable("Ventas_Detalle");
                });

            modelBuilder.Entity("DatosFE.Models.ViewFactura", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoMh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<int>("Reenviar")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.ToView("viewFacturas");
                });

            modelBuilder.Entity("DatosFE.Models.ViewMensajeReceptor", b =>
                {
                    b.Property<string>("CedulaEmisor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MontoTotalImpuesto")
                        .HasColumnType("float");

                    b.Property<string>("NombreEmisor")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double>("TotalFactura")
                        .HasColumnType("float");

                    b.ToView("viewMensajeReceptor");
                });

            modelBuilder.Entity("DatosFE.Models.ViewSubtotalesDevoluciones43", b =>
                {
                    b.Property<long>("Devolucion")
                        .HasColumnType("bigint");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalesDevoluciones43");
                });

            modelBuilder.Entity("DatosFE.Models.ViewSubtotalesFactura43", b =>
                {
                    b.Property<long>("IdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Factura");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDescuento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalImpuesto")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalMercaderiaGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExento")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosExonerado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalServiciosGravado")
                        .HasColumnType("float");

                    b.Property<double?>("TotalVentaNeta")
                        .HasColumnType("float");

                    b.ToView("viewSubtotalesFactura43");
                });

            modelBuilder.Entity("DatosFE.Models.ViewTemp", b =>
                {
                    b.Property<string>("BasedeDatos")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Consecutivo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoMh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EstadoMH");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(19,0)");

                    b.Property<int>("Reenviar")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("TotalComprobante")
                        .HasColumnType("float");

                    b.ToView("viewTemp");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DatosFE.Models.ArticulosComprado", b =>
                {
                    b.HasOne("DatosFE.Models.Inventario", "CodigoNavigation")
                        .WithMany("ArticulosComprados")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_articulos_comprados_Inventario")
                        .IsRequired();

                    b.HasOne("DatosFE.Models.Compra", "IdCompraNavigation")
                        .WithMany("ArticulosComprados")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_articulos_comprados_compras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("IdCompraNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.ArticulosVentasDevuelto", b =>
                {
                    b.HasOne("DatosFE.Models.Inventario", "CodigoNavigation")
                        .WithMany("ArticulosVentasDevueltos")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_articulos_ventas_devueltos_Inventario")
                        .IsRequired();

                    b.HasOne("DatosFE.Models.DevolucionesVenta", "DevolucionNavigation")
                        .WithMany("ArticulosVentasDevueltos")
                        .HasForeignKey("Devolucion")
                        .HasConstraintName("FK_articulos_ventas_devueltos_devoluciones_ventas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("DevolucionNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.Compra", b =>
                {
                    b.HasOne("DatosFE.Models.Proveedore", "CodigoProvNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("CodigoProv")
                        .HasConstraintName("FK_compras_Proveedores")
                        .IsRequired();

                    b.Navigation("CodigoProvNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.Configuracione", b =>
                {
                    b.HasOne("DatosFE.Models.Emisor", "IdEmisorNavigation")
                        .WithMany("Configuraciones")
                        .HasForeignKey("IdEmisor")
                        .HasConstraintName("FK_configuraciones_Emisor")
                        .IsRequired();

                    b.Navigation("IdEmisorNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.DevolucionesVenta", b =>
                {
                    b.HasOne("DatosFE.Models.Venta", "IdFacturaNavigation")
                        .WithMany("DevolucionesVenta")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("FK_devoluciones_ventas_Ventas")
                        .IsRequired();

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.Emisor", b =>
                {
                    b.HasOne("DatosFE.Models.TiposIdentificacion", "IdTipoIdentificacionNavigation")
                        .WithMany("Emisors")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("FK_Emisor_TiposIdentificacion");

                    b.Navigation("IdTipoIdentificacionNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.EmpresaActividade", b =>
                {
                    b.HasOne("DatosFE.Models.ActividadEmpresa", "IdActividadNavigation")
                        .WithMany("EmpresaActividades")
                        .HasForeignKey("IdActividad")
                        .HasConstraintName("FK_EmpresaActividades_ActividadEmpresa")
                        .IsRequired();

                    b.HasOne("DatosFE.Models.Emisor", "IdEmisorNavigation")
                        .WithMany("EmpresaActividades")
                        .HasForeignKey("IdEmisor")
                        .HasConstraintName("FK_EmpresaActividades_Emisor")
                        .IsRequired();

                    b.Navigation("IdActividadNavigation");

                    b.Navigation("IdEmisorNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.Inventario", b =>
                {
                    b.HasOne("DatosFE.Models.Presentacione", "CodPresentacionNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("CodPresentacion")
                        .HasConstraintName("FK_Inventario_Presentaciones")
                        .IsRequired();

                    b.HasOne("DatosFE.Models.Impuesto", "IdImpuestoNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdImpuesto")
                        .HasConstraintName("FK_Inventario_Impuestos")
                        .IsRequired();

                    b.Navigation("CodPresentacionNavigation");

                    b.Navigation("IdImpuestoNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.MensajeReceptor", b =>
                {
                    b.HasOne("DatosFE.Models.Proveedore", "CodProveedorNavigation")
                        .WithMany("MensajeReceptors")
                        .HasForeignKey("CodProveedor")
                        .HasConstraintName("FK_MensajeReceptor_Proveedores");

                    b.HasOne("DatosFE.Models.Emisor", "IdEmpresaNavigation")
                        .WithMany("MensajeReceptors")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_MensajeReceptor_Emisor");

                    b.Navigation("CodProveedorNavigation");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.Venta", b =>
                {
                    b.HasOne("DatosFE.Models.Cliente", "CodClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("CodCliente")
                        .HasConstraintName("FK_Ventas_Clientes")
                        .IsRequired();

                    b.HasOne("DatosFE.Models.Emisor", "IdEmpresaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Ventas_Emisor");

                    b.Navigation("CodClienteNavigation");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("DatosFE.Models.VentasDetalle", b =>
                {
                    b.HasOne("DatosFE.Models.Inventario", "CodigoNavigation")
                        .WithMany("VentasDetalles")
                        .HasForeignKey("Codigo")
                        .HasConstraintName("FK_Ventas_Detalle_Inventario1")
                        .IsRequired();

                    b.HasOne("DatosFE.Models.Venta", "IdFacturaNavigation")
                        .WithMany("VentasDetalles")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("FK_Ventas_Detalle_Ventas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodigoNavigation");

                    b.Navigation("IdFacturaNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatosFE.Models.ActividadEmpresa", b =>
                {
                    b.Navigation("EmpresaActividades");
                });

            modelBuilder.Entity("DatosFE.Models.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("DatosFE.Models.Compra", b =>
                {
                    b.Navigation("ArticulosComprados");
                });

            modelBuilder.Entity("DatosFE.Models.DevolucionesVenta", b =>
                {
                    b.Navigation("ArticulosVentasDevueltos");
                });

            modelBuilder.Entity("DatosFE.Models.Emisor", b =>
                {
                    b.Navigation("Configuraciones");

                    b.Navigation("EmpresaActividades");

                    b.Navigation("MensajeReceptors");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("DatosFE.Models.Impuesto", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("DatosFE.Models.Inventario", b =>
                {
                    b.Navigation("ArticulosComprados");

                    b.Navigation("ArticulosVentasDevueltos");

                    b.Navigation("VentasDetalles");
                });

            modelBuilder.Entity("DatosFE.Models.Presentacione", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("DatosFE.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("MensajeReceptors");
                });

            modelBuilder.Entity("DatosFE.Models.TiposIdentificacion", b =>
                {
                    b.Navigation("Emisors");
                });

            modelBuilder.Entity("DatosFE.Models.Venta", b =>
                {
                    b.Navigation("DevolucionesVenta");

                    b.Navigation("VentasDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
